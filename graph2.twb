<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.22.0514.0325                               -->
<workbook source-build='2021.3.12 (20213.22.0514.0325)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Country+ (global_climate_change_analysis-pivot)' inline='true' name='federated.16n2vvc0eqs2sf16flppe1qj024z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_climate_change_analysis-pivot' name='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/giada/Desktop/universitÃ /data warehouse/progetto/progetto 2.0/global_climate_change_analysis-pivot.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Country' table='[Country$]' type='table'>
          <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
            <column datatype='string' name='Country code' ordinal='0' />
            <column datatype='string' name='Country name' ordinal='1' />
            <column datatype='string' name='Capital city' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Income group' ordinal='4' />
            <column datatype='string' name='Lending category' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Country' table='[Country$]' type='table'>
            <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
              <column datatype='string' name='Country code' ordinal='0' />
              <column datatype='string' name='Country name' ordinal='1' />
              <column datatype='string' name='Capital city' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
              <column datatype='string' name='Income group' ordinal='4' />
              <column datatype='string' name='Lending category' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
              <column datatype='real' name='values' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='string' name='Country code' ordinal='2' />
              <column datatype='string' name='Series code' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Series' table='[Series$]' type='table'>
            <columns gridOrigin='A1:E15:no:A1:E15:0' header='yes' outcome='6'>
              <column datatype='string' name='Series code' ordinal='0' />
              <column datatype='string' name='Series name' ordinal='1' />
              <column datatype='string' name='Topic' ordinal='2' />
              <column datatype='string' name='Definition' ordinal='3' />
              <column datatype='string' name='Source' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Capital city]' value='[Country].[Capital city]' />
          <map key='[Country code (Data)]' value='[Data].[Country code]' />
          <map key='[Country code]' value='[Country].[Country code]' />
          <map key='[Country name]' value='[Country].[Country name]' />
          <map key='[Definition]' value='[Series].[Definition]' />
          <map key='[Income group]' value='[Country].[Income group]' />
          <map key='[Lending category]' value='[Country].[Lending category]' />
          <map key='[Region]' value='[Country].[Region]' />
          <map key='[Series code (Series)]' value='[Series].[Series code]' />
          <map key='[Series code]' value='[Data].[Series code]' />
          <map key='[Series name]' value='[Series].[Series name]' />
          <map key='[Source]' value='[Series].[Source]' />
          <map key='[Topic]' value='[Series].[Topic]' />
          <map key='[values]' value='[Data].[values]' />
          <map key='[year]' value='[Data].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country name]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Capital city]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Capital city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income group]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Income group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lending category]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Lending category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F234:no:A1:F234:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>values</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country code (Data)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series code]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Series code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series code (Series)]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Series code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series name]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Series name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Topic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Topic]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Topic</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Definition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Definition]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Definition</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Series]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E15:no:A1:E15:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Capital city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Country' datatype='table' name='[__tableau_internal_object_id__].[Country_AD9138D2F7574153870F6C7580BBC2CE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_73F82953F7C749A5B0A30FB5682C3F58]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Series' datatype='table' name='[__tableau_internal_object_id__].[Series_E1F8F71260AE407EA9BB61D4548137C1]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
      <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Azione (Country code (Data),Country name,Region)' hidden='true' name='[Action (Country code (Data),Country name,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code (Data)]' />
          <groupfilter function='level-members' level='[Country name]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Country code (Data),Region)' hidden='true' name='[Action (Country code (Data),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code (Data)]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Country code,Income group,Lending category,Region)' hidden='true' name='[Action (Country code,Income group,Lending category,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code]' />
          <groupfilter function='level-members' level='[Income group]' />
          <groupfilter function='level-members' level='[Lending category]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Series name,ANNO(Year))' hidden='true' name='[Action (Series name,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Series name]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Azione (ANNO(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Description'>
          <field>[Source]</field>
          <field>[Definition]</field>
          <field>[Topic]</field>
        </drill-path>
        <drill-path name='Places'>
          <field>[Region]</field>
          <field>[Country name]</field>
          <field>[Capital city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Series code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;SH.H2O.SAFE.ZS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AG.YLD.CREL.KG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ER.LND.PTLD.ZS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SP.URB.GROW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SH.STA.ACSN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NY.GDP.MKTP.CD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EN.ATM.CO2E.KT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NY.GNP.PCAP.CD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SP.URB.TOTL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SP.POP.GROW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SH.DYN.MORT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EN.ATM.CO2E.PC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SP.POP.TOTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EN.ATM.CO2E.PP.GD.KD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country code (Data):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EMU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SID&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IMY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HIC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WBG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ADO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MNA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NIU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ROM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UMC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ECA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KSV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TMP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LMY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country' id='Country_AD9138D2F7574153870F6C7580BBC2CE'>
            <properties context=''>
              <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Country' table='[Country$]' type='table'>
                <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country code' ordinal='0' />
                  <column datatype='string' name='Country name' ordinal='1' />
                  <column datatype='string' name='Capital city' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='string' name='Income group' ordinal='4' />
                  <column datatype='string' name='Lending category' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Data' id='Data_73F82953F7C749A5B0A30FB5682C3F58'>
            <properties context=''>
              <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
                  <column datatype='real' name='values' ordinal='0' />
                  <column datatype='date' name='year' ordinal='1' />
                  <column datatype='string' name='Country code' ordinal='2' />
                  <column datatype='string' name='Series code' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Series' id='Series_E1F8F71260AE407EA9BB61D4548137C1'>
            <properties context=''>
              <relation connection='excel-direct.0wl1hcx0nv8hg0114z4k6025zh8p' name='Series' table='[Series$]' type='table'>
                <columns gridOrigin='A1:E15:no:A1:E15:0' header='yes' outcome='6'>
                  <column datatype='string' name='Series code' ordinal='0' />
                  <column datatype='string' name='Series name' ordinal='1' />
                  <column datatype='string' name='Topic' ordinal='2' />
                  <column datatype='string' name='Definition' ordinal='3' />
                  <column datatype='string' name='Source' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country code]' />
              <expression op='[Country code (Data)]' />
            </expression>
            <first-end-point object-id='Country_AD9138D2F7574153870F6C7580BBC2CE' />
            <second-end-point object-id='Data_73F82953F7C749A5B0A30FB5682C3F58' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Series code]' />
              <expression op='[Series code (Series)]' />
            </expression>
            <first-end-point object-id='Data_73F82953F7C749A5B0A30FB5682C3F58' />
            <second-end-point object-id='Series_E1F8F71260AE407EA9BB61D4548137C1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Country+ (global_climate_change_analysis-pivot) (2)' inline='true' name='federated.16n2vvc0eqs2sf16flppe1qj024z (copia)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_climate_change_analysis-pivot' name='excel-direct.1gqa75418zo0go1e6f39u1fgkq62'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/giada/Desktop/universitÃ /data warehouse/progetto/progetto 2.0/global_climate_change_analysis-pivot.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Country' table='[Country$]' type='table'>
          <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
            <column datatype='string' name='Country code' ordinal='0' />
            <column datatype='string' name='Country name' ordinal='1' />
            <column datatype='string' name='Capital city' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Income group' ordinal='4' />
            <column datatype='string' name='Lending category' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Country' table='[Country$]' type='table'>
            <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
              <column datatype='string' name='Country code' ordinal='0' />
              <column datatype='string' name='Country name' ordinal='1' />
              <column datatype='string' name='Capital city' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
              <column datatype='string' name='Income group' ordinal='4' />
              <column datatype='string' name='Lending category' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
              <column datatype='real' name='values' ordinal='0' />
              <column datatype='date' name='year' ordinal='1' />
              <column datatype='string' name='Country code' ordinal='2' />
              <column datatype='string' name='Series code' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Series' table='[Series$]' type='table'>
            <columns gridOrigin='A1:E15:no:A1:E15:0' header='yes' outcome='6'>
              <column datatype='string' name='Series code' ordinal='0' />
              <column datatype='string' name='Series name' ordinal='1' />
              <column datatype='string' name='Topic' ordinal='2' />
              <column datatype='string' name='Definition' ordinal='3' />
              <column datatype='string' name='Source' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Capital city]' value='[Country].[Capital city]' />
          <map key='[Country code (Data)]' value='[Data].[Country code]' />
          <map key='[Country code]' value='[Country].[Country code]' />
          <map key='[Country name]' value='[Country].[Country name]' />
          <map key='[Definition]' value='[Series].[Definition]' />
          <map key='[Income group]' value='[Country].[Income group]' />
          <map key='[Lending category]' value='[Country].[Lending category]' />
          <map key='[Region]' value='[Country].[Region]' />
          <map key='[Series code (Series)]' value='[Series].[Series code]' />
          <map key='[Series code]' value='[Data].[Series code]' />
          <map key='[Series name]' value='[Series].[Series name]' />
          <map key='[Source]' value='[Series].[Source]' />
          <map key='[Topic]' value='[Series].[Topic]' />
          <map key='[values]' value='[Data].[values]' />
          <map key='[year]' value='[Data].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F234:no:A1:F234:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Series]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E15:no:A1:E15:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country name]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Capital city]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Capital city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income group]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Income group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lending category]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Lending category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_837844C4F64F4606B3B6B7FB72346048]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>values</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CB2394D8CC1A49AD84C17452E8FDB3EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CB2394D8CC1A49AD84C17452E8FDB3EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country code (Data)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CB2394D8CC1A49AD84C17452E8FDB3EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series code]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Series code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CB2394D8CC1A49AD84C17452E8FDB3EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series code (Series)]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Series code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Series_DC26F26C15DF41DA9280AD302489AB6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series name]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Series name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Series_DC26F26C15DF41DA9280AD302489AB6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Topic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Topic]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Topic</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Series_DC26F26C15DF41DA9280AD302489AB6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Definition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Definition]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Definition</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Series_DC26F26C15DF41DA9280AD302489AB6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Series]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Series_DC26F26C15DF41DA9280AD302489AB6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Capital city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;ADO&quot;' value='&quot;Andorra&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Country' datatype='table' name='[__tableau_internal_object_id__].[Country_837844C4F64F4606B3B6B7FB72346048]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_CB2394D8CC1A49AD84C17452E8FDB3EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Series' datatype='table' name='[__tableau_internal_object_id__].[Series_DC26F26C15DF41DA9280AD302489AB6A]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
      <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Azione (Country code (Data),Country name,Region)' hidden='true' name='[Action (Country code (Data),Country name,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code (Data)]' />
          <groupfilter function='level-members' level='[Country name]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Country code (Data),Region)' hidden='true' name='[Action (Country code (Data),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code (Data)]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Country code,Income group,Lending category,Region)' hidden='true' name='[Action (Country code,Income group,Lending category,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code]' />
          <groupfilter function='level-members' level='[Income group]' />
          <groupfilter function='level-members' level='[Lending category]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Azione (Series name,ANNO(Year))' hidden='true' name='[Action (Series name,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Series name]' />
          <groupfilter function='level-members' level='[yr:year:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Description'>
          <field>[Source]</field>
          <field>[Definition]</field>
          <field>[Topic]</field>
        </drill-path>
        <drill-path name='Places'>
          <field>[Region]</field>
          <field>[Country name]</field>
          <field>[Capital city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Series code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;SH.H2O.SAFE.ZS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AG.YLD.CREL.KG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ER.LND.PTLD.ZS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SP.URB.GROW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SH.STA.ACSN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NY.GDP.MKTP.CD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EN.ATM.CO2E.KT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NY.GNP.PCAP.CD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SP.URB.TOTL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SP.POP.GROW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SH.DYN.MORT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EN.ATM.CO2E.PC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SP.POP.TOTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EN.ATM.CO2E.PP.GD.KD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country code (Data):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ECA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HIC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ROM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UMC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LMY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WBG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EAP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WLD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EMU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TMP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country' id='Country_837844C4F64F4606B3B6B7FB72346048'>
            <properties context=''>
              <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Country' table='[Country$]' type='table'>
                <columns gridOrigin='A1:F234:no:A1:F234:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country code' ordinal='0' />
                  <column datatype='string' name='Country name' ordinal='1' />
                  <column datatype='string' name='Capital city' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='string' name='Income group' ordinal='4' />
                  <column datatype='string' name='Lending category' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Data' id='Data_CB2394D8CC1A49AD84C17452E8FDB3EA'>
            <properties context=''>
              <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
                  <column datatype='real' name='values' ordinal='0' />
                  <column datatype='date' name='year' ordinal='1' />
                  <column datatype='string' name='Country code' ordinal='2' />
                  <column datatype='string' name='Series code' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Series' id='Series_DC26F26C15DF41DA9280AD302489AB6A'>
            <properties context=''>
              <relation connection='excel-direct.1gqa75418zo0go1e6f39u1fgkq62' name='Series' table='[Series$]' type='table'>
                <columns gridOrigin='A1:E15:no:A1:E15:0' header='yes' outcome='6'>
                  <column datatype='string' name='Series code' ordinal='0' />
                  <column datatype='string' name='Series name' ordinal='1' />
                  <column datatype='string' name='Topic' ordinal='2' />
                  <column datatype='string' name='Definition' ordinal='3' />
                  <column datatype='string' name='Source' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country code]' />
              <expression op='[Country code (Data)]' />
            </expression>
            <first-end-point object-id='Country_837844C4F64F4606B3B6B7FB72346048' />
            <second-end-point object-id='Data_CB2394D8CC1A49AD84C17452E8FDB3EA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Series code]' />
              <expression op='[Series code (Series)]' />
            </expression>
            <first-end-point object-id='Data_CB2394D8CC1A49AD84C17452E8FDB3EA' />
            <second-end-point object-id='Series_DC26F26C15DF41DA9280AD302489AB6A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtra 10 (generato)' name='[Action10_1D37B7108425468B9DE99CB69C3F09E1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (2)' type='sheet' worksheet='Nationally terrestrial protected areas (% of total land area) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (2)' />
      </command>
    </action>
    <action caption='Filtra 11 (generato)' name='[Action11_FA9EBBD1C43D48D49E96D8B48CCC9415]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (2)' type='sheet' worksheet='Nationally terrestrial protected areas (% of total land area) - Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (2)' />
      </command>
    </action>
    <action caption='Filtra 12 (generato)' name='[Action12_23341471464741B792844A67470FB8FE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (3)' type='sheet' worksheet='Under-five mortality rate (per 1,000) - Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (3)' />
      </command>
    </action>
    <action caption='Filtra 14 (generato)' name='[Action14_4F2B92F2FF204E198ABA450DF9F5F344]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (3)' type='sheet' worksheet='Access to improved water source (% of total pop.) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (3)' />
      </command>
    </action>
    <action caption='Filtra 15 (generato)' name='[Action15_468C50FF3E22479EB8C202541E68F1B2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (4)' type='sheet' worksheet='Population growth (annual %) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (4)' />
      </command>
    </action>
    <action caption='Filtra 16 (generato)' name='[Action16_8A88739999FA4EFC9E91B472D889D055]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (4)' type='sheet' worksheet='Population - Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (4)' />
      </command>
    </action>
    <action caption='Filtra 17 (generato)' name='[Action17_466CA486C5E74E93A6E35C0A82DE4CE6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (5)' type='sheet' worksheet='Urban population growth (annual %) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (5)' />
      </command>
    </action>
    <action caption='Filtra 8 (generato)' name='[Action17_4B08D646B588405EA630EE97111EF04A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar' type='sheet' worksheet='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar' />
      </command>
    </action>
    <action caption='Filtra 19 (generato)' name='[Action19_21EF66E93C25463EA42553D1104399A4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (2)' type='sheet' worksheet='GDP ($) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (2)' />
      </command>
    </action>
    <action caption='Filtra 9 (generato)' name='[Action19_64F0AD1C954E43E6A379DC0CC2AE01F6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar' type='sheet' worksheet='CO2 emissions per capita (metric tons) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar' />
      </command>
    </action>
    <action caption='Filtra 20 (generato)' name='[Action20_F26E57B9E4B04D1F8156D7F95C51EBB8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (2)' type='sheet' worksheet='GNI per capita (Atlas $) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (2)' />
      </command>
    </action>
    <action caption='Filtra 21 (generato)' name='[Action21_8CDC6FF8959E4096BAD25757A7F1EBB8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (3)' type='sheet' worksheet='Under-five mortality rate (per 1,000) - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (3)' />
      </command>
    </action>
    <action caption='Filtra 3 (generato)' name='[Action3_47BD2B5B6D154349A2C6DC2B76B85C33]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (2)' type='sheet' worksheet='Globe' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (2)' />
      </command>
    </action>
    <action caption='Filtra 4 (generato)' name='[Action4_0511DC363FD4422A929ACCF93B865708]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map (3)' type='sheet' worksheet='Globe' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map (3)' />
      </command>
    </action>
    <action caption='Filtra 1 (generato)' name='[Action5_04E3A4CBF0F94D208F523C3497B3539B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map' type='sheet' worksheet='Cereal Yield - Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map' />
      </command>
    </action>
    <action caption='Filtra 5 (generato)' name='[Action5_B7BEC2FDAA054A8D9F4BF55E1501B278]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (4)' type='sheet' worksheet='Population growth (annual %) - Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (4)' />
      </command>
    </action>
    <action caption='Filtra 2 (generato)' name='[Action5_B8FABA9493084114B0530660AC75677C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map' type='sheet' worksheet='Cereal Yield - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map' />
      </command>
    </action>
    <action caption='Filtra 6 (generato)' name='[Action6_240BAEAD4E054FF389D2085A6486283B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Bar (4)' type='sheet' worksheet='Population - Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Bar (4)' />
      </command>
    </action>
    <action caption='Filtra 7 (generato)' name='[Action7_17398892C101424FAA9EBCE123D8B660]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Map' type='sheet' worksheet='Globe' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Map' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Access to improved sanitation (% of total pop.) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action14_4F2B92F2FF204E198ABA450DF9F5F344]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.STA.ACSN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{5D1DA5BD-6AFB-4911-B648-DADA0ACD7496}' />
    </worksheet>
    <worksheet name='Access to improved sanitation (% of total pop.) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action14_4F2B92F2FF204E198ABA450DF9F5F344]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.STA.ACSN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{9A639C96-070F-4093-8F0A-360568E33B74}' />
    </worksheet>
    <worksheet name='Access to improved water source (% of total pop.) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.H2O.SAFE.ZS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{BC307DE5-2AD4-4671-918C-DCFB67944122}' />
    </worksheet>
    <worksheet name='Access to improved water source (% of total pop.) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action14_4F2B92F2FF204E198ABA450DF9F5F344]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.H2O.SAFE.ZS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{D432F49E-0B6D-4BB0-8297-DF052A609DD5}' />
    </worksheet>
    <worksheet name='CO2 emissions per capita (metric tons) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_4B08D646B588405EA630EE97111EF04A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.PC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{7E4D8BBC-6835-469A-B762-6D6E16C041DC}' />
    </worksheet>
    <worksheet name='CO2 emissions per capita (metric tons) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_4B08D646B588405EA630EE97111EF04A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.PC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{9F7FD08D-DD24-46F8-9E1F-9D2CD5A39EA0}' />
    </worksheet>
    <worksheet name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Aggregates&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.PP.GD.KD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{31D690F9-5887-47BB-80AF-D4E9718D1C5B}' />
    </worksheet>
    <worksheet name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_4B08D646B588405EA630EE97111EF04A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.PP.GD.KD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{6A74FC5B-EDCB-4D2C-BCBA-579992EBF5EB}' />
    </worksheet>
    <worksheet name='CO2 emissions, total (KtCO2) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_4B08D646B588405EA630EE97111EF04A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.KT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='314' />
                <format attr='maxheight' value='314' />
                <format attr='minwidth' value='4020' />
                <format attr='maxwidth' value='4020' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{D4D1086D-21AA-4F57-BE0B-5A517A8C5BBC}' />
    </worksheet>
    <worksheet name='CO2 emissions, total (KtCO2) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_4B08D646B588405EA630EE97111EF04A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;EN.ATM.CO2E.KT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]'>
            <groupfilter function='level-members' level='[none:Series name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{A1508FD7-7B97-411F-AA7F-3AED043E82B1}' />
    </worksheet>
    <worksheet name='Cereal Yield - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_17398892C101424FAA9EBCE123D8B660]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code]' />
              <groupfilter function='level-members' level='[Income group]' />
              <groupfilter function='level-members' level='[Lending category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_04E3A4CBF0F94D208F523C3497B3539B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;AG.YLD.CREL.KG&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{97FBAEDE-63CD-4DF4-908B-5CF327EF63D1}' />
    </worksheet>
    <worksheet name='Cereal Yield - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B8FABA9493084114B0530660AC75677C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B8FABA9493084114B0530660AC75677C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_17398892C101424FAA9EBCE123D8B660]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code]' />
              <groupfilter function='level-members' level='[Income group]' />
              <groupfilter function='level-members' level='[Lending category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;AG.YLD.CREL.KG&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{97D871F5-815F-44BF-B585-15259C0D1051}' />
    </worksheet>
    <worksheet name='GDP ($) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action20_F26E57B9E4B04D1F8156D7F95C51EBB8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;NY.GDP.MKTP.CD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='322' />
                <format attr='maxheight' value='322' />
                <format attr='minwidth' value='4380' />
                <format attr='maxwidth' value='4380' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{32D6FE51-2736-46C9-844D-0D42B700E5E0}' />
    </worksheet>
    <worksheet name='GDP ($) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action19_21EF66E93C25463EA42553D1104399A4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;NY.GDP.MKTP.CD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{84924874-7B0C-46D9-9BF6-CE66F09815AF}' />
    </worksheet>
    <worksheet name='GNI per capita (Atlas $) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;NY.GNP.PCAP.CD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{512CF4EA-7D06-4176-A931-76DC803EFDA0}' />
    </worksheet>
    <worksheet name='GNI per capita (Atlas $) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action19_21EF66E93C25463EA42553D1104399A4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;NY.GNP.PCAP.CD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{D403A591-C6F5-4423-9AE5-BCB534BA0D31}' />
    </worksheet>
    <worksheet name='Globe'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot) (2)' name='federated.16n2vvc0eqs2sf16flppe1qj024z (copia)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z (copia)'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ADO&quot;' value='&quot;Andorra&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code]' derivation='None' name='[none:Country code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income group]' derivation='None' name='[none:Income group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lending category]' derivation='None' name='[none:Lending category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B8FABA9493084114B0530660AC75677C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Country code (Data),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B8FABA9493084114B0530660AC75677C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_04E3A4CBF0F94D208F523C3497B3539B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]'>
            <groupfilter function='level-members' level='[none:Country code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Income group:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Income group:nk]' />
              <groupfilter function='member' level='[none:Income group:nk]' member='&quot;Aggregates&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Income group:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Latitude (generated)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Longitude (generated)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Series name,YEAR(Year))]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Country code (Data),Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Action (Country code (Data),Country name,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Longitude (generated)]' field-type='quantitative' max='21389820.289480403' min='2576649.7654647492' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Latitude (generated)]' field-type='quantitative' max='4735436.9629304279' min='2601984.6484701093' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' value='false' />
            <format attr='break-on-special' field='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Region:nk]' />
              <geometry column='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Income group:nk] / [federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Lending category:nk]) * [federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Latitude (generated)])</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A4C0BB15-704A-407B-AAC2-BC5E6129CECB}' />
    </worksheet>
    <worksheet name='Nationally terrestrial protected areas (% of total land area) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_47BD2B5B6D154349A2C6DC2B76B85C33]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code]' />
              <groupfilter function='level-members' level='[Income group]' />
              <groupfilter function='level-members' level='[Lending category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_FA9EBBD1C43D48D49E96D8B48CCC9415]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;ER.LND.PTLD.ZS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{6638EA2F-FA98-4429-BE71-0B41BBF39704}' />
    </worksheet>
    <worksheet name='Nationally terrestrial protected areas (% of total land area) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_1D37B7108425468B9DE99CB69C3F09E1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_47BD2B5B6D154349A2C6DC2B76B85C33]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code]' />
              <groupfilter function='level-members' level='[Income group]' />
              <groupfilter function='level-members' level='[Lending category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;ER.LND.PTLD.ZS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{46E56045-5D13-4995-82FC-CA8913DF7975}' />
    </worksheet>
    <worksheet name='Population - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B7BEC2FDAA054A8D9F4BF55E1501B278]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.POP.TOTL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{C8CE0A0C-7162-4DBD-9157-6B0EBBF5A5C1}' />
    </worksheet>
    <worksheet name='Population - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action15_468C50FF3E22479EB8C202541E68F1B2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_240BAEAD4E054FF389D2085A6486283B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B7BEC2FDAA054A8D9F4BF55E1501B278]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.POP.TOTL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{C2B220AC-547C-4241-BB1F-50DB60C16B93}' />
    </worksheet>
    <worksheet name='Population growth (annual %) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_B7BEC2FDAA054A8D9F4BF55E1501B278]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.POP.GROW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{39F83845-12A1-4FC7-ADD6-1E8C40D47217}' />
    </worksheet>
    <worksheet name='Population growth (annual %) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action15_468C50FF3E22479EB8C202541E68F1B2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_240BAEAD4E054FF389D2085A6486283B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_8A88739999FA4EFC9E91B472D889D055]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.POP.GROW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{476B6A93-3531-499D-B017-C505A5CDF67E}' />
    </worksheet>
    <worksheet name='Under-five mortality rate (per 1,000) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_23341471464741B792844A67470FB8FE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Series name]' />
              <groupfilter function='level-members' level='[yr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.DYN.MORT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Series name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{3675858D-2096-49B0-AE7B-DA64C6BC82DA}' />
    </worksheet>
    <worksheet name='Under-five mortality rate (per 1,000) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Lending category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action21_8CDC6FF8959E4096BAD25757A7F1EBB8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_0511DC363FD4422A929ACCF93B865708]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code]' />
              <groupfilter function='level-members' level='[Income group]' />
              <groupfilter function='level-members' level='[Lending category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SH.DYN.MORT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code,Income group,Lending category,Region)]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{19A80C3C-80DB-433F-AD2C-9EB0D2D0C220}' />
    </worksheet>
    <worksheet name='Urban population - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_466CA486C5E74E93A6E35C0A82DE4CE6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.URB.TOTL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{72939A26-F38D-4E26-A589-6AE606A3117C}' />
    </worksheet>
    <worksheet name='Urban population - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_466CA486C5E74E93A6E35C0A82DE4CE6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.URB.TOTL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{8FB30E26-E216-4BE5-B955-73DFC60C5AB3}' />
    </worksheet>
    <worksheet name='Urban population growth (annual %) - Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column-instance column='[Country code (Data)]' derivation='None' name='[none:Country code (Data):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.URB.GROW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' />
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]</cols>
      </table>
      <simple-id uuid='{A4A956D8-550F-4459-AE5A-E094EEBF9F4B}' />
    </worksheet>
    <worksheet name='Urban population growth (annual %) - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Country+ (global_climate_change_analysis-pivot)' name='federated.16n2vvc0eqs2sf16flppe1qj024z' />
          </datasources>
          <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z'>
            <column datatype='string' name='[Country code (Data)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series name]' role='dimension' type='nominal' />
            <column-instance column='[Series code]' derivation='None' name='[none:Series code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series name]' derivation='None' name='[none:Series name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action17_466CA486C5E74E93A6E35C0A82DE4CE6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code (Data)]' />
              <groupfilter function='level-members' level='[Country name]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]'>
            <groupfilter function='member' level='[none:Series code:nk]' member='&quot;SP.URB.GROW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series code:nk]</column>
            <column>[federated.16n2vvc0eqs2sf16flppe1qj024z].[Action (Country code (Data),Country name,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Series name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16n2vvc0eqs2sf16flppe1qj024z].[yr:year:ok]</rows>
        <cols>[federated.16n2vvc0eqs2sf16flppe1qj024z].[sum:values:qk]</cols>
      </table>
      <simple-id uuid='{835A4F8A-4E8F-4ABD-A91C-9841B62C2534}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Bar'>
      <style />
      <size maxheight='960' maxwidth='1800' minheight='960' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98334' id='5' param='horz' type-v2='layout-flow' w='99112' x='444' y='833'>
            <zone h='98334' id='3' type-v2='layout-basic' w='93390' x='444' y='833'>
              <zone h='50938' id='1' name='CO2 emissions, total (KtCO2) - Country' w='30893' x='444' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50938' id='7' name='CO2 emissions per capita (metric tons) - Country' w='34911' x='31337' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50938' id='8' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country' w='27586' x='66248' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47396' id='9' name='CO2 emissions, total (KtCO2) - Year' w='30893' x='444' y='51771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47396' id='10' name='CO2 emissions per capita (metric tons) - Year' w='34911' x='31337' y='51771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47396' id='11' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Year' w='27586' x='66248' y='51771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='103' h='98334' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='5722' x='93834' y='833'>
              <zone h='98334' id='6' name='CO2 emissions, total (KtCO2) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='5722' x='93834' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{44FA0270-C26D-4421-959A-43AFF04FACB6}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Bar (2)'>
      <style />
      <size maxheight='980' maxwidth='1600' minheight='980' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='816'>
            <zone h='98368' id='5' type-v2='layout-basic' w='89000' x='500' y='816'>
              <zone h='49184' id='3' name='GDP ($) - Country' w='44496' x='500' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49184' id='9' name='GNI per capita (Atlas $) - Country' w='44504' x='44996' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49184' id='10' name='GDP ($) - Year' w='44496' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49184' id='11' name='GNI per capita (Atlas $) - Year' w='44504' x='44996' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98368' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='816'>
              <zone h='98368' id='8' name='GDP ($) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='10000' x='89500' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='125' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='124' param='vert' type-v2='layout-flow' w='99000' x='500' y='816'>
                <zone fixed-size='280' h='49184' id='3' is-fixed='true' name='GDP ($) - Country' w='44496' x='500' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98368' id='8' name='GDP ($) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='10000' x='89500' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49184' id='9' is-fixed='true' name='GNI per capita (Atlas $) - Country' w='44504' x='44996' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49184' id='10' is-fixed='true' name='GDP ($) - Year' w='44496' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49184' id='11' is-fixed='true' name='GNI per capita (Atlas $) - Year' w='44504' x='44996' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5A7921D-842F-40C0-A8A0-4D42167F6C91}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Bar (3)'>
      <style />
      <size maxheight='980' maxwidth='1800' minheight='980' minwidth='1800' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Country+ (global_climate_change_analysis-pivot) (2)' name='federated.16n2vvc0eqs2sf16flppe1qj024z (copia)' />
      </datasources>
      <datasource-dependencies datasource='federated.16n2vvc0eqs2sf16flppe1qj024z (copia)'>
        <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;ADO&quot;' value='&quot;Andorra&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Country code]' derivation='None' name='[none:Country code:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='122' param='horz' type-v2='layout-flow' w='99112' x='444' y='816'>
            <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='90223' x='444' y='816'>
              <zone h='98368' id='5' type-v2='layout-basic' w='90223' x='444' y='816'>
                <zone h='32789' id='9' name='Access to improved water source (% of total pop.) - Country' w='44945' x='444' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32789' id='10' name='Access to improved sanitation (% of total pop.) - Country' w='45278' x='45389' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28266' id='12' name='Access to improved water source (% of total pop.) - Year' w='45167' x='444' y='70918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28266' id='13' name='Access to improved sanitation (% of total pop.) - Year' w='45056' x='45611' y='70918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37313' id='120' name='Globe' w='90223' x='444' y='33605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98368' id='121' is-fixed='true' param='vert' type-v2='layout-flow' w='8889' x='90667' y='816'>
              <zone h='98368' id='123' name='Globe' param='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' type-v2='filter' w='8889' x='90667' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='129' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='128' param='vert' type-v2='layout-flow' w='99112' x='444' y='816'>
                <zone fixed-size='280' h='32789' id='9' is-fixed='true' name='Access to improved water source (% of total pop.) - Country' w='44945' x='444' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32789' id='10' is-fixed='true' name='Access to improved sanitation (% of total pop.) - Country' w='45278' x='45389' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98368' id='123' mode='checkdropdown' name='Globe' param='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' type-v2='filter' w='8889' x='90667' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37313' id='120' is-fixed='true' name='Globe' w='90223' x='444' y='33605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='28266' id='12' is-fixed='true' name='Access to improved water source (% of total pop.) - Year' w='45167' x='444' y='70918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='28266' id='13' is-fixed='true' name='Access to improved sanitation (% of total pop.) - Year' w='45056' x='45611' y='70918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AE0ECEEC-E693-45F6-8DC2-8357FB4AF489}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Bar (4)'>
      <style />
      <size maxheight='980' maxwidth='1800' minheight='980' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='96' param='horz' type-v2='layout-flow' w='99112' x='444' y='816'>
            <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='90223' x='444' y='816'>
              <zone h='98368' id='5' type-v2='layout-basic' w='90223' x='444' y='816'>
                <zone h='58980' id='9' name='Population - Country' w='45778' x='44889' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39388' id='10' name='Population growth (annual %) - Year' w='45105' x='444' y='59796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39388' id='11' name='Population - Year' w='45118' x='45549' y='59796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58980' id='94' name='Population growth (annual %) - Country' w='44445' x='444' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98368' id='95' is-fixed='true' param='vert' type-v2='layout-flow' w='8889' x='90667' y='816'>
              <zone h='98368' id='97' name='Population growth (annual %) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='123' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='122' param='vert' type-v2='layout-flow' w='99112' x='444' y='816'>
                <zone fixed-size='280' h='58980' id='94' is-fixed='true' name='Population growth (annual %) - Country' w='44445' x='444' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98368' id='97' name='Population growth (annual %) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58980' id='9' is-fixed='true' name='Population - Country' w='45778' x='44889' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39388' id='10' is-fixed='true' name='Population growth (annual %) - Year' w='45105' x='444' y='59796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39388' id='11' is-fixed='true' name='Population - Year' w='45118' x='45549' y='59796'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F442817E-4D49-4EB8-ABDC-86FCA2C0BEF7}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Bar (5)'>
      <style />
      <size maxheight='980' maxwidth='1800' minheight='980' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='99112' x='444' y='816'>
            <zone h='98368' id='5' type-v2='layout-basic' w='90223' x='444' y='816'>
              <zone h='36021' id='3' name='Urban population growth (annual %) - Country' w='45106' x='444' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36021' id='9' name='Urban population - Country' w='45117' x='45550' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37857' id='10' name='Urban population growth (annual %) - Year' w='45106' x='444' y='61327'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37857' id='11' name='Urban population - Year' w='45117' x='45550' y='61327'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24490' id='116' name='Globe' w='90223' x='444' y='36837'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98368' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='8889' x='90667' y='816'>
              <zone h='98368' id='8' name='Urban population growth (annual %) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='118' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='117' param='vert' type-v2='layout-flow' w='99112' x='444' y='816'>
                <zone fixed-size='280' h='36021' id='3' is-fixed='true' name='Urban population growth (annual %) - Country' w='45106' x='444' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98368' id='8' name='Urban population growth (annual %) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36021' id='9' is-fixed='true' name='Urban population - Country' w='45117' x='45550' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='24490' id='116' is-fixed='true' name='Globe' w='90223' x='444' y='36837'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37857' id='10' is-fixed='true' name='Urban population growth (annual %) - Year' w='45106' x='444' y='61327'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37857' id='11' is-fixed='true' name='Urban population - Year' w='45117' x='45550' y='61327'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6290B2B5-241E-447D-B9D6-FC8CEFEAC521}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Map'>
      <style />
      <size maxheight='960' maxwidth='1800' minheight='960' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98334' id='8' param='horz' type-v2='layout-flow' w='99112' x='444' y='833'>
            <zone h='98334' id='6' type-v2='layout-basic' w='90223' x='444' y='833'>
              <zone h='49167' id='3' name='Globe' w='90223' x='444' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49167' id='5' name='Cereal Yield - Country' w='54643' x='444' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49167' id='10' name='Cereal Yield - Year' w='35580' x='55087' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98334' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='8889' x='90667' y='833'>
              <zone h='98334' id='9' name='Cereal Yield - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='110' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='109' param='vert' type-v2='layout-flow' w='99112' x='444' y='833'>
                <zone fixed-size='280' h='49167' id='3' is-fixed='true' name='Globe' w='90223' x='444' y='833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49167' id='5' is-fixed='true' name='Cereal Yield - Country' w='54643' x='444' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98334' id='9' name='Cereal Yield - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='8889' x='90667' y='833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49167' id='10' is-fixed='true' name='Cereal Yield - Year' w='35580' x='55087' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5AE4DB44-A83F-4F8D-904E-1B9CB0D9CCAB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Map (2)'>
      <style />
      <size maxheight='980' maxwidth='1500' minheight='980' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='98934' x='533' y='816'>
            <zone h='98368' id='5' type-v2='layout-basic' w='88267' x='533' y='816'>
              <zone h='49184' id='3' name='Nationally terrestrial protected areas (% of total land area) - Country' w='44133' x='533' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49184' id='9' name='Nationally terrestrial protected areas (% of total land area) - Year' w='44134' x='44666' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49184' id='42' name='Globe' w='88267' x='533' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98368' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10667' x='88800' y='816'>
              <zone h='98368' id='8' name='Nationally terrestrial protected areas (% of total land area) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='10667' x='88800' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='126' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='125' param='vert' type-v2='layout-flow' w='98934' x='533' y='816'>
                <zone fixed-size='280' h='49184' id='42' is-fixed='true' name='Globe' w='88267' x='533' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49184' id='3' is-fixed='true' name='Nationally terrestrial protected areas (% of total land area) - Country' w='44133' x='533' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98368' id='8' name='Nationally terrestrial protected areas (% of total land area) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='10667' x='88800' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49184' id='9' is-fixed='true' name='Nationally terrestrial protected areas (% of total land area) - Year' w='44134' x='44666' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{92428F32-08C1-45CE-A835-3481443C92E8}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - Map (3)'>
      <style />
      <size maxheight='960' maxwidth='1700' minheight='960' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98334' id='8' param='horz' type-v2='layout-flow' w='99058' x='471' y='833'>
            <zone h='98334' id='6' type-v2='layout-basic' w='89646' x='471' y='833'>
              <zone h='49167' id='3' name='Globe' w='89646' x='471' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49167' id='5' name='Under-five mortality rate (per 1,000) - Country' w='44818' x='471' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49167' id='10' name='Under-five mortality rate (per 1,000) - Year' w='44828' x='45289' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98334' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9412' x='90117' y='833'>
              <zone h='98334' id='9' name='Under-five mortality rate (per 1,000) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='9412' x='90117' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='84' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='83' param='vert' type-v2='layout-flow' w='99058' x='471' y='833'>
                <zone fixed-size='280' h='49167' id='3' is-fixed='true' name='Globe' w='89646' x='471' y='833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49167' id='5' is-fixed='true' name='Under-five mortality rate (per 1,000) - Country' w='44818' x='471' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98334' id='9' name='Under-five mortality rate (per 1,000) - Country' pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type-v2='color' w='9412' x='90117' y='833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49167' id='10' is-fixed='true' name='Under-five mortality rate (per 1,000) - Year' w='44828' x='45289' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FEC437A7-1DB0-43CB-94EA-DD6D54526934}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='28'>
    <window class='worksheet' name='Globe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z (copia)].[none:Country code:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C11D482F-E600-4D7E-926E-A84E179309F9}' />
    </window>
    <window class='worksheet' name='Cereal Yield - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3D0520F5-47F0-4512-95C3-9F6369BD2C47}' />
    </window>
    <window class='worksheet' name='Cereal Yield - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{33159B46-DE04-45AB-9EFC-193311458FDC}' />
    </window>
    <window class='dashboard' name='Dashboard - Map'>
      <viewpoints>
        <viewpoint name='Cereal Yield - Country' />
        <viewpoint name='Cereal Yield - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{72C1114E-02B0-48A2-A4C6-C2B586C93F05}' />
    </window>
    <window class='worksheet' name='CO2 emissions, total (KtCO2) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7DC68D3E-4A54-494F-9ED4-402A54805476}' />
    </window>
    <window class='worksheet' name='CO2 emissions, total (KtCO2) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E7F8A59-6578-49D8-863E-B7528D4D2092}' />
    </window>
    <window class='worksheet' name='CO2 emissions per capita (metric tons) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C665BAF0-CF27-4913-8A31-867FEF38AA0D}' />
    </window>
    <window class='worksheet' name='CO2 emissions per capita (metric tons) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3FE16844-CEB3-4FD6-AD1D-22454087E1AD}' />
    </window>
    <window class='worksheet' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{289E24B9-398C-4852-A1C1-FFD49F641BB0}' />
    </window>
    <window class='worksheet' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{173C8B71-EC89-45B3-8CB7-676A3F81EE2F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard - Bar'>
      <viewpoints>
        <viewpoint name='CO2 emissions per capita (metric tons) - Country' />
        <viewpoint name='CO2 emissions per capita (metric tons) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country' />
        <viewpoint name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CO2 emissions, total (KtCO2) - Country' />
        <viewpoint name='CO2 emissions, total (KtCO2) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{351FEC4E-8FBF-46FB-B03B-E5408B960501}' />
    </window>
    <window class='worksheet' name='Nationally terrestrial protected areas (% of total land area) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8C7C6142-3E83-4F92-9B22-215485D4F570}' />
    </window>
    <window class='worksheet' name='Nationally terrestrial protected areas (% of total land area) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BD023633-A8A8-4024-A053-2C287F13781C}' />
    </window>
    <window class='dashboard' name='Dashboard - Map (2)'>
      <viewpoints>
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nationally terrestrial protected areas (% of total land area) - Country' />
        <viewpoint name='Nationally terrestrial protected areas (% of total land area) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{AEDAB8A6-7797-485D-AB63-3835B8BC326B}' />
    </window>
    <window class='worksheet' name='GDP ($) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC10B6C2-7C08-4F06-9091-6047A8FC1708}' />
    </window>
    <window class='worksheet' name='GDP ($) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{90E07983-7820-4177-9C55-CF6986DCD73D}' />
    </window>
    <window class='worksheet' name='GNI per capita (Atlas $) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1B499411-0B6D-49AD-9F54-C2980070D704}' />
    </window>
    <window class='worksheet' name='GNI per capita (Atlas $) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{85766E86-FC44-41AB-AE45-1C410F44969F}' />
    </window>
    <window class='dashboard' name='Dashboard - Bar (2)'>
      <viewpoints>
        <viewpoint name='GDP ($) - Country'>
          <highlight field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GDP ($) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GNI per capita (Atlas $) - Country' />
        <viewpoint name='GNI per capita (Atlas $) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{4DCAFFAB-62A4-4221-BA51-0CFACDCEE889}' />
    </window>
    <window class='worksheet' name='Under-five mortality rate (per 1,000) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CFAC664F-0612-4E43-B166-7C17D3D734BC}' />
    </window>
    <window class='worksheet' name='Under-five mortality rate (per 1,000) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ABEB659A-C077-483C-BB9E-E061CB331288}' />
    </window>
    <window class='dashboard' name='Dashboard - Map (3)'>
      <viewpoints>
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Under-five mortality rate (per 1,000) - Country' />
        <viewpoint name='Under-five mortality rate (per 1,000) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{573B48E9-9E3C-4CEA-A6A8-26969DFACDD0}' />
    </window>
    <window class='worksheet' name='Access to improved water source (% of total pop.) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9B8C8876-37E0-4ADD-BD10-EF1AA169ED5F}' />
    </window>
    <window class='worksheet' name='Access to improved water source (% of total pop.) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AD542089-7E6C-45CE-BCEA-150574A45526}' />
    </window>
    <window class='worksheet' name='Access to improved sanitation (% of total pop.) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BDB2E48E-A4AF-4BE8-A38D-138097633805}' />
    </window>
    <window class='worksheet' name='Access to improved sanitation (% of total pop.) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{07B1EDE0-C221-4789-82F5-36BD5D7B1026}' />
    </window>
    <window class='dashboard' name='Dashboard - Bar (3)'>
      <viewpoints>
        <viewpoint name='Access to improved sanitation (% of total pop.) - Country' />
        <viewpoint name='Access to improved sanitation (% of total pop.) - Year' />
        <viewpoint name='Access to improved water source (% of total pop.) - Country' />
        <viewpoint name='Access to improved water source (% of total pop.) - Year' />
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{0384049B-3C0F-48CA-88EF-90650DBBD296}' />
    </window>
    <window class='worksheet' name='Population growth (annual %) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{58990BC9-DA31-44FB-AE2F-225C1DDCEBD8}' />
    </window>
    <window class='worksheet' name='Population growth (annual %) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F13E6B5-DFDB-4068-B2C7-B01BE6A27DE7}' />
    </window>
    <window class='worksheet' name='Population - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF48C0A7-5EE7-4846-820B-2CAAE6CB1EEF}' />
    </window>
    <window class='worksheet' name='Population - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{40BB1E82-B903-4E5E-BDA3-C50ADCB0472B}' />
    </window>
    <window class='dashboard' name='Dashboard - Bar (4)'>
      <viewpoints>
        <viewpoint name='Population - Country' />
        <viewpoint name='Population - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population growth (annual %) - Country'>
          <highlight field='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Population growth (annual %) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3971BC6E-32CD-4BC7-A7B6-6FD4F7E940ED}' />
    </window>
    <window class='worksheet' name='Urban population growth (annual %) - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C1E6757E-0794-4541-A0C3-CB90D9C15E56}' />
    </window>
    <window class='worksheet' name='Urban population growth (annual %) - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{75CDAB32-50E4-432D-A75B-8B8F9208EF28}' />
    </window>
    <window class='worksheet' name='Urban population - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16n2vvc0eqs2sf16flppe1qj024z].[none:Country code (Data):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CBBD1C9F-BB64-463C-8427-074DEE36D1E0}' />
    </window>
    <window class='worksheet' name='Urban population - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{30864E7D-EA2D-4139-9F5C-71D5798307AE}' />
    </window>
    <window class='dashboard' name='Dashboard - Bar (5)'>
      <viewpoints>
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Urban population - Country' />
        <viewpoint name='Urban population - Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Urban population growth (annual %) - Country' />
        <viewpoint name='Urban population growth (annual %) - Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{59BE8BA3-EE91-4CCF-9EFB-64A0BEABC699}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Access to improved sanitation (% of total pop.) - Country' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Access to improved water source (% of total pop.) - Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWwc2Xrff1XV+0qy2dxFipRIbaNdMyPpzn5nbN+xNXbgGEGQwECABE7y
      ECB5yUuQhyxAEGQB8hIkCDxzr+04thPEC+Dc5Ma+vpl7rdk0M9Jo49Lc9+5m73steaDUFLuq
      ekSKlET1+QGcEf/8n1OnqutjVZ36+B3JMAwDgaBFkZ/1AASCZ4kIAEFLIwJAcGCJ3bvF9c9v
      UKqo6LqOYRj1L13X0Q2D8fHxzX/rxrafG4aBbhg4nvVOCAS7ZXxmkffff5+vrv+EZKFIJVth
      4NRJ5u7do6DquBwyydVliuvz3FxXaXPUaAv5ePW1t/nx//pjjo6NiiuA4OASDfu4/vkNKjUD
      Qzfw+L3MTk2hGdDdP4zP7aS/twtDkrn4ymUuHBtgvSjjdUrIsgSShLQfs0CGYSBJ0l53KxA8
      ETP3b+LoOMyhrnBd25cA0DQNRVH2uluBYM8Rt0CClkYEgKClEQEgaGlEAAhaGhEAgpZGBICg
      pdnxm2BdrRCLzaLJTvxOgwouukJultYzjI4dxSGL+X/BwWFX7wHUSp6FtSzlbBzFG0ZBo7cz
      SKbqoavDj67r4kWY4ECwi1wgg8XFFfoPH6EQ8LK6uIjmcZHO5HGGg/UXYLpa4ebXt3AGOjh9
      chRZBITgOWRXzwA9/YdwKTKKrNM1OMTY8GEUT5ho2Fv3fPrJX3Ly3CU6nUXuz67t1XgFgj1l
      31IhCuk4t+9Pg+Lk/IXzeF0i8VTw/LFvASDLEqViCUPXWI5vMDpy2NJrGDrFYhFZceLxuBE3
      SoKnyb79Wv76859hOIOUsgl6x87b+m58+jGKp41cYpmR868zEAns15AEAhP79h6gszNKsVBA
      xUl70P6k7ox0Uizk0R0+wn73fg1HILBk364A1WoFAF1TqakqYH1yHx49xdBRA7WcZ3p5mWMj
      Q/s1JIHAxL4FQLlcBsDQVao11dZ39+5tSvkUmUyJU6+8vl/DEQgs2bcAMDCI9vQzOjK0+edn
      Nsh6lZu3J+jp6m7qEwj2gx0/AzyctSlXqmhqjWpNxdB1ypXqNl+uVKYz6OSzT6+Typdt+/N5
      vBwdO47b7cMjpkoFT5kdn3GGrrKRiLOazOB3SlR1maDPQaVapWfwGO0BFwCnT18gEAgR6e5v
      2t/80jKlfIrOSA+rqTzBnrbd7YlAsAt29R5gY20B3dtONp7EjUYWOBwNkSo76Y4E0KoZqrP/
      oe5XQmdwdn9g2VdybYmV9XVu35vjV//qL+MUt0GCp8iucoHKmkJfyE8xuUpOlekKuoktrDN6
      7DiKImNIBnp5sd5C8Q2iGgY3FubrWncoxNHOKFOzs9Q0gzfODLGYLDDaK64AgqfHLgJAoq+v
      D4DB4aN1NdLT/FYnXSrxL3/0w/r3v3D8JP/gzbc5f+YMn356g+WKi5e7w016EAj2nmf6BzFq
      uUZmPMPxtqMMGWHyixvPcjiCFuSZTrtoVZWNye2ZouHByDMajaAVEX8SKWhpRAAIWpoD8+bp
      9tefkS3UKOTzvPLmu4Q9ovSi4Mk5MFcAVa0BYOgamljVSbBHHJgrwLlL3wGgVswwt75Gx1Dz
      aVeB4HHYeSqEoTM/E8MV6KCa36Ame+gMOFmOZxgdG8Op7M+b3Kl7t0hkiszPz/D+B7+2L9sQ
      tB47DgC1kmVpJUXPgJdauYzhUEhmqhzu6yCxkauXRXkUwzDQNO1bNd3QmV9L869+52d17e3z
      h/krrx/D6XSiGQqRaASPA1TVPsVaIHhcdhwAsuImFA5SKeWJdnazuryK5HeznkgRjA6iKAqG
      vP3RQpIk03oBVposydQMWErk6lq2WMXhcOD1egmFZQ71hCjUJMJe8RAseHJ2HACK08vwUD+S
      0wNqmcGjRwl4nGTyJdpDnv0YIwDj07P0RULEF1coeAcJe73f3kgg+BZ29RDsD4Ye/MtV19rb
      nHsxHluOjR7DHwywup5gOLi/2xK0DgdmFmh6boZKMY8PnaKq0/GsByR4ITgw7wGGenvYSOXJ
      4qcrIK4Agr3hQFwBSrUqSaeb0SuvArBRzNHj90G1sGVyuMGxf88ggheTAxEA6VKJP7l7q/79
      5aEReqJe+PK/bJkOvwXD7zz9wQkONAfmFkgg2A9EAAhaml3dApVLBXQcOGWdmi7jcSnki2VC
      TUogCgTPI7tYIqnMnTv36B8aJr2+imZIuN0KEgYqw3QERX1PwcFh57lAtRKS4iMRX8HnCeBC
      JwcMdQZJl8toPscT5QKZfTp6o6braJrOo8kQuq6jqyqZ5Cr3JqbxhDo5d2psp7snaDF2HABO
      T5iQbxWHrwOHXqaoKvSEXMwsJRk9dgxFkZ4oF8jsk5EbNVlGUbZvQ5ZlZIeDr7+5w1vf/Tnu
      /PT/kKydpFtkTAiasOMAkCSZo8dOmPT2aO+eDOhJuXj+LJ9fv44r1EebU0c85wua8cKdHW2R
      Hi5fvcrJoShzy/FnPRzBc86BeBG2E25+8QnFmkFm/muOvvf3nvVwBM85L1wAdHX30tE3RG2k
      k5LIjBB8Cy9cACTSSWamJ0hs5HjrF0ef9XAEzzkvXACUcimqio8TwyH0b7cLWpwX7iG4q+8w
      Ub+L2Hoe3wsX3oK95oU7RWLj31Bz+DnS4WKjDD2+Zz0iwfPMLlaIqfHllzfpPXSY9PoirmAE
      L1WSmTzDx04R9DzbmHrnvWtUaioS4BZZGYJvYVfrA4SCflIbKcLBIPGNFEY4wOjIAKlsHp8z
      +MxSIdLxdb658XldGzoyysDwyM53UdAy7KIwlgaGhKzI6AZIiozXKTE5s8SRY6eeuCzKk6RC
      IElUK1sL8um6hsNhvYvjt78imSlS02W+850rOGyehu7e+oJ0roImObl65RXs6n5989VnZIs1
      UDxcefUidis93fziOvmKjuzyc/nSOSQb35ef/pSSKuHwhnj1wmlLj2HofPHJz6jqMm5/G5fO
      nbL26TU+vX4dDQVfKML508etfVqF63/5KYaiEGjr4uxJ61k0XS3xs599hux0EI708tIx618y
      ei3Pxz+9gcPtpCPaz4lR6zWg1XKGn17/GqfbQbR3iLHhAUtfJb/BJ1/cxuGU6Tl0lCODPZa+
      QmadL74eR1FgYPg4h/ujlr5scmXnD8Gy4mb0+HFOjB1hcPgI586+xMDgMGfOnMHvPji1etbi
      63RGo+jFDQpNamytxxN0RqPUcklKTXzxRIJoNEopG6faZPopnkwSjUbJpdbRmpQ4TaQ2iEaj
      pJJrth5DU9nI5ohGo2w08em1MplihWg0SjJh71PLWXJVg2hnJ8n4qr2vkKSgOYl2dpJYX7H1
      VbNrlCQf0c4I8bVlW18pvULNGaIz0sH6qr0vt7GM4QnTGWlv6ksnlnH62+jsCLO2aj++xPry
      i/cQ/Lh85/W32UhlaA+do5zPEu4IWfpee+NtUuks4cBLlAp5Am3Wf/Pw+pvvkE7nCJ06SbFY
      whO0zsJ7863vksrkeemkm0KpQthv/aDy1lvvks4WeMnjIl+uEfCYCwHIDhdvvfEmmVyREx4X
      xYqKz23+SBV3kDe/c4VsoYTH7aJc0/A4zb+snP4ob1y+QL5YweN2UVF13BaXRld4gNdfCVEs
      VXG7XNQ0Hadi9nkiR3jtQielag2X04VmGCgWl7xg9zEuezOUaxputwfdwPIK2nnoFBfCaaqq
      gduTsfX1j5wlkElR0yU82TSGgeWVduT4hRdvGvRxSa6vMDU5wUI8S9DrsvUlVpeYnJhgNVXE
      b3FyPWR9eYHJyQni2Qoep/1hXVmcZ3JygnRRxdWkjurywiyTk5PkqwYOO5thsDg3zeTkJCXV
      +mR46JufiTE5OUlVl7HdqqEzG5tiYnISFUcTn8bM5ASTU5MYigvsnIZGbGKcyclJJKcHw+bK
      aBgqUw98ituHXfFvXasyNT7BxOQETm/A1qfVykyOTzAxMY7bH8LuQlurFF/8AEgWEvzo/p/W
      v2Y3pgG4dfc+r1y5ChvzlGT7nInb45NcvnqVcnwWtUnVibtT01y+epXsyjSSw376aXxmlqtX
      r7I+P4XDZR94E7MLXL16hcWZCTxu6zIwulZhZiXJ1auXmY9N2C40rpYzLKRKXL38KrOxcdwW
      v/0Bark1VosyVy+/zPTkOC6bB6NKap6kHuLKK5eITdy3LYhcWh8n6+rhyisXmRq/h8PGl126
      QzU4xKuXzjJ5fxyLiwkA63PfoHQe4eVzp5gcn7T1LUzdJDRwnEtnjjE5HrP9xTB1/6sXPwCW
      Mgt8+Nl/rn99s3wTgPMnx/idjz4i5+mlo8l06emxYX7ro4/QQodoVpDu5PAAP/jwI1zREZrN
      BI8d6uHDDz+ibeCY7YM3wJHeCL/5mx/RO2L9YAubz2MDbW4+/PAHHBo7Y+tzeMJ0uWp8+P3f
      ZuTEOVufM9hDWEvy0W/9LmOnL9r63O1DeHKzfPQ7v8fJcy/b+rxdx5HWvuGj//oHnLl02dYX
      GjhNaeYzfvv3/4hzl+z76x4+S/zux/y3//lDzl+0H9/gsQtMf/Fn/P6f/JgLl87b+sZOXXrx
      A8COW/cneP/aNZz5RdIVe9+dyWl+8do1tI058jV73/2ZeX7pg2vkV2NUmjwsT8wv8cEH10gs
      jKM1eViOLa3xK79yjcXYXVuPrlVZSOb54INfYm7itq1Pq2RZLRh8cO19Yvdv2fpqhXU2ND/X
      fvHnmbzzta2vkl4g5+ri2vs/x71bX9n6yokpKqERrv3Cu9z+6gtbX27lHnL3Cd5/7w2++dq+
      v8T8HYJDZ/n5ty9z6+ZNW99S7BY9xy7x7usXuPm1/f5O37/ZugEw1N/PxPg4hr+bkP2dCId6
      e5kYH8cR7sXf5Dd7f3c34+Pj+CN9uJpMhvV1RRkfH6eta8B2ShWgN9rJ/fvjdPUO2nokxUk0
      HGB8fJzufuspRgDZFaDD52B8fILegWFbn8PXQchRY3xikr5B+/cnrlAvAT3H+MQkA4ftfe6O
      QTzlOOOTsW1rSjfijw4j51aYmJphaPiIra+te4TqxhKTsTkOj9j7on1HyK0vMDWzwPARe1//
      4EjrBkCuXKZWypBYmW86vVms1SjnN1hfnqei2fsquk4xE2dlaQG1yW92FYnsxipLiwvoTaZB
      dUUhFV9iYXHB3qNWkD0ekusrLDbx1Ypp3MEg8fW1pr5yepVAJMLaWqKprxCfoa23l5XVDRaX
      lmx92aV7RIcGWVpNs7hs70sv3KNr8BAr6xkWl+2nN+OLE3T1d7OezLHUxLe6GKOru52NVJ6l
      Zftp0MXFuV0EgKEzPTnO8lqCxNoy80trFLMpJmOzTT/Q541KPoMS7OT4yCHbSQyAYjaFt6OX
      0aG+pr58OkGoe5CRge6mvkxyneihIwz1dDb1peKr9I2cYKCr3dYjSQrxlQUOnzhLb8R6Ghc2
      p0tX5mOMnX2Zrja/rU9xeVmYusfpl68SCdo/8DvcAWbu3uTi62/T5rV/MHJ6w0zc/Jwr3/05
      gi77U83pDTLxzZe89t338NlOeYHL42fy3l1ef/st3E0un263h8mpad548zWctlNj4HE5d1EW
      RauRTGc41NZJOl3Gic58Cfra/axv5Olq91mmQuyH9ugh1XUdw9JnNGg6lZrG0fNv1DVFV6kU
      VcqZYl1zB724XAZXzm+9hdW1ArrmQqpuXTIMlwOtqnJx9FJdk0oldNlALpW22vr8lCQ4/vJr
      da1aq2IgU1a3xuh3ymilHGdOna1rlXIJSZfRH7kEOfxOaqUal04/6C8coVapYug19Fp1y+cN
      YBSqvHniPKBDZxStUqEglahoW2/N25wRqLp48+Fx6T2MVqtBcR2q+a0D2D6M7A7z9pvvADV6
      R0fQNJVCOoVa3eov3NWL4unj3Td6QK8SHTmBpmmoqRxG/fhJOLvbCIY7+aV3vgMk6R7rRdM0
      5HwO6UEKjCFJ6KEw7dF2vvfuRSBB+1gHmqaRrm2gG5s+WZJpc0boCvn43itjUF7mdL8LTdMo
      FQoYD+ZhZVnB4/PR44ns4kWYLHPqpTNMx6ZwOd2oGCBBTVWRXDKSJCFZvHUwaVY+yeyTbDVz
      uoXZJyFbaOv5Gn8ey9S1lwcCtCUSfP67P6lrZ669wuHDVbj337faHvtldGkYbXzrci4fHyA3
      u8zyH2y1Hfib7xF2V+GTv9xq+8673JHgz6bu17VfO3ORkurjy6WtIr/vjrax/vlP+OpHf1jX
      vvcb/xg55ydxd+uyf/jdk8zemGDq4zt17Y2//z7VzByp2Ykt32vfo/iHf0T+R/+3rvX8u3/D
      de0zbqe+rGt/+9g/JPvDG2RubLUd+6e/jvbTf4868cO65v+Nj1m/d5v82mJdG33vV/nkj3+b
      xUcesH/9X/wnVj6fobCWrWsn/trLLP3ejylOP7gtkWVO/evfgHv/A7IP+pOdyG/8E/iLP4dk
      clNzuZD/xq9TmPmP6OXNYy85QgRe+rf80ex/JVXd9AWdYf7O8X9E4Q//LkZ281hJ4UP4/9af
      8uX1j6mUNwPUHwhy5Z33WPln/3w3VSEUNtYX6R8cRtFKFFWZjoCblUSawS6fzQlrcXJi4cMq
      eOy0xnFJ1q/7TJKFT5LMvsces3kjm/trNb6Ge0TJqq31cWkcn+WuSpJlf9Y+k2hxCB7jF5nN
      RiSLY2o9vu2aVO/PStvd+JppuyqLMjD0cCbBz8M7z6FD9veWAsHzSsvOAgkEIAJA0OKIABC0
      NCIABC2NCABBSyMCQNDSiAAQtDS7+pPIlflJ1vIyDjWLJ9SJWy+zkSswPHaKUJPcEIHgeWPH
      V4BaMUNsYZ18NkN7WxuZRJKSoTA2coh8roCmaU+tLMq2trqFzzDQtcax6Oh6w3Z13TRmXdfR
      LDQrX6Om6eZjYHVcdF2v56fUNc26P6Mhp0nXdIyGvwnUNHN/mqVPM2m6pqE/hm9nGiaNhj9Q
      VFV1W1ujmYaV9giGgaqqjZt40B+mtmDsPAAcniCvXDxPX08UTdNxul0E3QpTs8u0tQVRFGWz
      RMkjPLUVYiy2ISuNY5GR5YbtyrJpzLIso1hoVr5GTZHNx8DquMiybMppkhXr/qSGrEZZkU2v
      +BXF3J9i6VNMmqwoprwpK9/ONExaYyqEw+HY1lZqpmGlPYIkbZbBadjuZn+Y2oK0i1QIWcbl
      8TFyeLPm4MM/1+i1LuUiEDzXmK4AtVqNH/zgB89iLALBU8fyFqhUKvH973+feFwsMSR4sTHd
      AsmyzLlzm5UDFhYWiEaty8oJBC8CpgBQFIVXX331WYxFIHjqWD4E59cmuTEeZzmV5a//8i88
      7TEJBE8Ny2cATyhKPJ3l1dNipXXBi431Q3BmnY18mXQq9bTHIxA8VSxvgfyRAfqD9ykb1q8J
      KvkUa1kNDyUKmkI06GJxPcPo6JGmxZ4EgucNyytAtVjAkGQWFhZNPzMMnfmlVcrFLLmiilIp
      sZjIcKgrwHoy98SpEOZ0BnPqwo5SIUxj2f9UiE2tITXAQnv8VAjdnAqhm1Mc9CdMhdht2oOu
      aab0g/1Ohai33abscSpEIGCuhV8r5ShVqiyvxVHVGlVVBU2lWCyjOBybr/cbXtvvJBXCnM5g
      Tl2QZNk6xcEqFcKUlmGVCmH2WaU4SI+ZCiHJkjl1QZaRLTTLVIjGdAaLY7rZ9tv7e/xUCAuf
      /Hg+WVFM6QePmwqh2LRtbKwoCo11Kza1R5Fs+2tMhXg4FtM9jqHrfPzTj6lWwWdRDNPlC3Pm
      9GmKpQqGWqKoKrQHXKwmMvSHvQ8qjOz/fZBFFZM97M1mG5h+udi0sygx8uTD2b92do0tpb39
      bO3LotBU22r7ZJrpCiDJMq9deZl4KkupWDA1fGDC5/PiD3UQ7QjjcHkZ6Ot5wpNQIHj6WD7l
      SpLMyeMnyFeqVj8WCF4YLG+BPvniJqrs5cK5C89iTALBU8P8ECxJHD9xArQKf/bjn1g0EQhe
      HMy3QIZBKlvkrXd/HkeT0tICwYuAKQAkWebESft1qQSCFwlRFULQ0uw4AAxDZ3F+hlS2QGJt
      manZBdRqiYWlVdt1WwWC55VdLJEE7ZFOFufmmJufIxgIMDszj0euEM8UMQzD9Mq63nAPaezt
      yYLPunHjfjzuJqyOwGOPz3iCfTHq/9kuPX7jx5D2+HNsOF+MuoZJs2r7pNrOA0CSyGfSyE4H
      5y++SnpliZriwOfxoKnag6WKGpclMkx5NU+UC2SY82WsNbtcoMbcHbPPcj8eMxfI0A1z7o7x
      mLlAFtpj5wLZ5gftTtN0q7wfq7a7zwXSbNo2NtY0zRR8m9qjmM8pq7EYj4xl57dAeo1srkgw
      FGJ5fhYlGOZQZxsL8TxdkSZlURrzeZ4kF0h6vJIl9rlAuyt3sjOtMa9mB7lAprIoj5kL9Jhl
      UezyeXZbAuVJcoF2Wxal3nab8qAsSgN7WhZFVlyMHjtm0o+3RXbalUDwzBGzQIKWRgSAoKUR
      ASBoaUQACFoaEQCClkYEgKCl2fE0qGEYqGoNWXYgYaADiiyhqjpO567W2xAInhk7P2MNneXF
      BVL5Cm5JpaLJhP1OiuUK/cPHafO79mGYAsH+sIv1ARRcDhlZkXC7w4TQyAIjgxFShRJBj/LU
      Voh59P3wfq0QY9oGj79CzKP3l5qmoTfccO5khRjlBV4hRjGM+htdA9BstOdihRhdq5IrVPC4
      vShSlawGUb+L2MI6HR1ihRgQK8RsaZi0A79CjKy4GDt+3KR39uy0J4Hg2SNmgQQtjQgAQUsj
      AkDQ0ogAELQ0IgAELY0IAEFLIwJA0NLsPBdI15iOTaF4gsi1IlXZTTTgYimRYXRsFKeoJic4
      QOyiKoRMf18vlXKFYqmIVlNJZPIc7m0nsQcrxOwkFWJb231KhXgcn10qxDbN4rjsJBXCVBXi
      BUqF2M0KMc8sFcLQqtybmGFgoJdodx9aMU9NU0lspHG6XSIVApEKsaVh0g58KgSyQk9XJ8Vi
      Ga/LQd/wMEGfi1S2SGfIs+PuBIJnyc5zgWQHvf39Jr2zQ6RBCw4eYhZI0NKIABC0NCIABC2N
      CABBSyMCQNDSiAAQtDS7qGNiUC4WkRwuZHQ0Q8LlkClVavh93r0foUCwj+wiF0gnmUyykcnj
      lHRquoTP40DXNSJ9R+gIuvdjnALBvrCrXCC1WqanvxeXJ0C7z0tVdjLQ20W5XBa5QIhcoC0N
      k3bgc4F0tcRGukC5VMWpaBQMme6gh+nFOJH2kMgFQuQCbWmYtAOfC6Q4fZy/eP7Bd911vaOr
      b6ddCQTPHDELJGhpRAAIWhoRAIKWRgSAoKURASBoaUQACFoaEQCClmYXSyTpTI/foXPoJKnl
      GKriJeJzsJzIMHrsGC5FlEURHBx2cQWQaAt6Kdd0qtUqtUqFZK7EcH+ExEZWpEIgUiG2NEza
      gU+FwNDJ53Jkc1nCbRFqxQK6XmNlLYHH4xGpEIhUiC0Nk3bgUyGQJEJdQ8gOJ26nh0BbO16X
      g0KpQjAgMkEFB4udL5InybR3dJj0YEAskSo4eIhZIEFLIwJA0NKIABC0NCIABC2NCABBSyMC
      QNDS7OJFmEF8ZYFiVWdjfYWFlXVKuTRT03M0vKwUCJ57dr5AhmFQzqfIlWskM0W0fIa51TjR
      kIv1jfxmaoBhToUwpUdgoVn5DAPD0tfwKt/G15hCYBiGKV3AMHRLX+N+6IZhShfQDcOcVqDr
      5vHp5pQEw6KtoZvHrBvmtrputV07jQZt+35tbldvzCDYHLOF1tihoeum9APdTsMiZaIhxcFO
      s2rbsBcWWrO0jF0EgCTLhILBzc09PCEMA03XkCRp86vxXTSYXpWDZKGZfZL08D+PtjRJm1s0
      tZUstLr70ZGYXp/X9Ya2pr2waieZ923ze6v9NW3UZJMwH9PNbZj7shyfyWe5sxaSxSdpefDN
      G36cz3bnmtUxbRixTVvzkDeFHb++1XWVeKaEVEnQ3RmiqCr0B1wsxzMcHvRvHguLD9+kWeyA
      lc9yp2xOMOudNym77k+yaGup2RxwSTJMmtWHahk8Fuec5QlhNZbtTW2Ok2z2WSx4KEvm35m2
      J6zlSdeQgyTL2zSJzV+y1lrDWPZA29UKMUePnax/H37w/+Gh4E67EgieOWIWSNDSiAAQtDQi
      AAQtjQgAQUsjAkDQ0ogAELQ0IgAELc0T/R3jnVtf4Q514jEqJLN5hsdOEfI692psAsG+80RX
      gLa2MNnkBkVdZmzkEPlcQZRFQZRF2dIwaQe/LEodHU0zUJxOAm6Zqdllwm1BURYFURZlS8Ok
      HfyyKHVkBoePMPjgu76B3fckEDwrxEOwoKURASBoaUQACFoaEQCClmZPAkCrVViLJ/eiK4Hg
      qbInATA7M4tWyhDPlPaiO4HgqbE3t0CKg7ZwALVW25PuBIKnxZ4EQLQ9yOxKhmiH+LNIwcFi
      T2qahzq6ONnRVU9v0A0JPEP1nxuOCIoERyOddS0aCGBI4G7z1jXF68CpSBzpa6trkZAHRZLo
      DmwFV8DpQpMc4O99ZE8CyLJMIBSuS06XG48iMdxxpK6F3WEckkGHdyv23Qoobiehvq2y706v
      C02RGrbhxZAkdP/WOgiSIiP73LgHtvZN8jjRnEBH5JG2DrwS2/bDJSsYCtvGogCeQIiO/q3j
      pzhdSG7HtmOFLOEOereNWVJkFLcHV3Dr+BlIyJEIjuHhLU1RCBKmy721b5IhobQHt+2HARAa
      gK5TdU1HwuH1b9+GbhCMdG0bs64bOP3ubWPWdR1nNIy7Wt3cpixvpkd4I6CpD3cWNA3C4a3y
      K64HmruX+imr+NE0jYi7C6fkAsDvCGz2FxkDT/vmNgLdaJqGPxjC6dr83Lz+zbaOoUEkozGJ
      4wl42JWu66bX+c+z9rA+T6MG2ysePIn2vOyr0LZrezoN+rCkx2aOi7Tt66FWKeWJTU1T1XRb
      X2JtmZmZGWZm5lAfnJhWvvmZGTQDCqk0VTD5eKAlk8ltpU+s+5NIpTKk02lyqd+oKx8AAANU
      SURBVBR6w8+3vgw2NjI2P9vuW1xYwtA15uYW6h9A4z48qqVTKVufJEnk0hvMzs5Srmq2x0RT
      S2SypW/9LHS1Qi5fAgxSqbR9f7Uy07EYsViMheU1Wx+GxtzMDIVSifV4suk58LBsTLPtGlqN
      mZkZiqUi8aS9r5TPEIvFiMWmWE9mbH25dJJ0rkh2I85GplD37ct7ALs6MePffMmdyRia5sDt
      MCdQPfRpmoaqaSDLyE2KHZUrZWZjk8xMTlM17OoMQdDv4tNPPmFycqZ+Ypt9OvMzs0xNTjEX
      m0O19WmM37nLxMQEsZl5DFufhFNS+eH//hEun79J7SGd2ViMqakpYjMLtj5Dr7CwnOTQoQFm
      YlP2x65W5O43m+NbWF6z9ckON4nlaf7i//0Mp8dn61OcHiLtIXRdx+/32/pSSwv4on3c+epL
      wu3ttr5qKc/U1BRTUzFW1hK2vrXZWTr6+7n55S3a29tsfd5AmKDPja6D32+/H26Pl+k7N7g7
      s4LX46r7nuq6RmMvnSef2WBpJUFF1XA7FEuf2+PBWdXQ1M0UXcWqbBlwaOgwPq+XuXv3mkZy
      fH2Dsxcu4XU1212ZjkiYQLgNRVawX+1M4eTplwi3BUg0ffch4XB5uPjyy+hqDQPL4mtAjUQ8
      w8nzp/G415r0p6NWyszMzGJI1scNwOEM8NLZlwgFPWwkN2x9mlrG4Y9w9ZVh4ukMQV+Xpa9a
      zHB/ao5IRxvVB/fuVvjaO5hbnifY3kEmk8XT2W7pc7rcSIZBV18fhXzZtr9gZ4Tl+TnaOtrI
      5vJE2qwnWFJrCyyspQkHvFSrNfC6LH2yrHDkxBmAbVm+T/VNcHJtmeXVNebnF6iq5vqUDynm
      89RUFV3XTLUpHyWXTjIVi5FI5Zr6JMlgfibGjS++RrV30dkZYWlumtt3J7EfHSzOTfPNjc8p
      aHahCaCyvBJndX6asmo08WmE27uIL80xt7BiPzrZy9kLZxgdHcXdZC1mSZZJrC0yNTXF7MKy
      vQ+JSiHL7Pwi2WzO1udwuWkLB/EF2+ntitj61GKOtq5eirkcqVTa1hefnaF9cJjbX31FR6d5
      rbl6f+UihUKRSq1GOp219bl9wQdXAHPd0UeplIvE4+vc+uoLVpNb/f1/PsEDGhtHZ1MAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='187' name='Access to improved water source (% of total pop.) - Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions per capita (metric tons) - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Country' width='192'>
      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
      q/0/0Ngr0JgRq/8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions per units of GDP (kg/$1,000 of 2005 PPP $) - Year' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions, total (KtCO2) - Country' width='192'>
      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
      RjWGAAxGNf8fXhyxmRN0FfkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions, total (KtCO2) - Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cereal Yield - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cereal Yield - Year' width='192'>
      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
      vwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Bar (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3Bc2Xrg9+uc0Y0GuoFGzokEQRLMaYZDzszL70l6ek/aXWu9sqSS/1tX
      ubyu3bL/cdlll13lLdu7W7JlyStppV09vTDSzLzJ5HCYkQMBNHLubnRGo3O4/gPM07fZAME0
      vL+qV294+fU5916e757vnC8cmSAIAhISrynyF30DEhIvEkkBJF5rJAWQeK2RFEDitUZSAInX
      mq8pQGwzyNDgIKGtBJBjbGiA4dFxUtkcAOvL8wwMDLDi8j7yu+tXr5IVYGN9lp//4tekswIj
      t68TSWZFO0/GNhkaGmYrkdrbp5J47Xl8HM/Ozm//RS6FPxghE48QjqYeVYDA2jRXh+c4cLCH
      oNcDpJied9PVWs97P/858YzA9f5BensPs7U8wvD8thKE1yZJamxEVicYXgpTW1FKIBimu2cf
      l764kvcGU5ENPvpygO4D+4lFIjt6uM8//IDEjl+JxOtCvnH8s//vT5nzRCAV4NbgNFvuacaX
      Aigf/uGN/kne/eEPWZmdJJbV3L+u1pl4+2gztydW716RUV1pYzAU3/7dwDRvfO+HEF4l4pun
      1NFERbkFgFwqnPcmh67f4vj576JUyLHbyui7fpmsQo/XF+I73z3GL/9ugB//+AIffvABDRZY
      zFVhiC5i7TjF8sIC+oEB2lo6+OQXf8lmElobaqk59AYV6UUGXVrOH23Z8xcr8WqQbxwfOPUm
      4ze/pPndI4/IPjIDCIAMaGjpZHF2Km/jmfgWAwP9OP0y3uipAyApgE4OutIafvM751mcHuNG
      /wgAMmR3f7ltTi2vb88aj/vfvMEoJ44fo80qsBj4utnU2X2I4wfb2fDHqGts5FBvL2VmAwm0
      /NEf/zFvvX2BsetfcmtkkVO90uB/nck/jhV0N1oZXXjUdH9EAU4ebufjy33kclni8QdGRiYZ
      5fLQEsf31aLUGentPcLRwwfuD22NDOI5CHvXWfIEqautxe+9O9AR7nfVfaiXuiobAIdOHef6
      Z1+QyWbY8PpRkGEzlmTBG8dh1iOTJQn73IRjya89oEWvwhuOkc1msdvt2/eh0GJWp9lCjUZa
      2r/WiI3jpgMnWRi5Ru5hYeExIkGvMDAwKIS34oIgZIXRwX5haGRMSGaygiAIwsbGxuM/EUKr
      E8IXt6cEQRCE1cUJ4Re//FjI5gQhmwgJ7334xdfk7xHfCgmDg0NCJJ4Uctm0MD4yLAQ2Y4Ig
      CML68rwwv7wu+Hw+YSvkE2JpQcgmt7b/PpcV7owOC5vRpODz+e63N9N/SRhfCYn2J/H68Pg4
      9vkCgiAIQsjnEjYCm0I6timEtpKCTBD2Jhbo+tWrHD99BoUsx1YkjtFkYOT2dZp6jmPSKPai
      i4KkomFGZ1c50rPvmfcl8c1hzxRAQuJVRLKWJV5rJAWQeK2RFGCPEXIZJsbHSGRyTxYuAr/f
      /8ift/wultdcDAwNk0iL9CFkWVhY3JP+v+konywisRO+/OwTDp56k0TIS//kDC3N9cQwktny
      EfKtozDYGL51iXff/RbT86toTFb215hIGqpJ+RcJxmVoshHkJjuJoIu+sTnOn+zBt5XhyMH9
      3Bq+Q5NFhqail49+/WsOdjWxsZlhevQWp976DlH/KkqjHdfCNLWNDdI/8BOQZoA9JpbKUWLU
      M9Y/SM+pHm588iELrhAzMzN4Q1u41xaorG6kxizHm9JhlwX51bUprEYVoxMzdHe2MLviZmZi
      gKX1AHarievXrhEKb3vUZXe3LORKLUq5gMvlZuLOOKV2B03VFlyeMBN3xjApZIQzL/BFvCJI
      u0B7TDTkZXRqnqaGemZmZmnv6sQ5NYO5tBSNatt1qCaLUq0mJiuhtUrPz351iZ/8+HusLswQ
      SslRpzeRm+xseVdICFqsehmRrIreA118delz2lobmVraoLG5lfD6HJtpBa1VpYRzSnwrK+gt
      VjZcK1x8+537zkqJ/DxzBcjlcsjl0kQjht+zjr60Ap26OF9JLh0nkpRhNmrFhYQswfAWpRbz
      Ht3lN5dnrgDZbBaF4tk7wiQkdoP0aZZ4rZEUQOK15rnskvmdl/lsQU19mY6jvQdRyKWlmcTL
      wc7WALk0fbeHOXjiKNlIgMklL/YSNf5QjLqaclbXPVisFawszVPX2EJ1pY1sNsvW2ghh82Gq
      dTEW1vy0NNY+w0eSkCienc0AchU2qwUBgRW3H6NaRjKTo7lCy8jaFqe6u5mfn6e8rIzqShu5
      XI5cLoe+vIFrlz/iajDAgd4TZDLSBrXE3qNU7tyg2dEvcukEyysr5Ax6yOVYWXVTU2vDuRyj
      prKc8fExSm11xMIbAMjlcgRBIB3zk1EasTn0xDc3UCqbdnyjEhLPguezDSqHa5e/IBRLc+jY
      aaps0v60xMvBc9kFiq2Poqo5grnEwPzk8PPoUkKiKJ6TI0zOxMgA1pp2SnQK9Hr9s+xSQuIJ
      5JhzTpOWa56/J9jv91JWZnuWXUpIPJGwfwNvJPVi/AASEi+UXIL+wXFaurqezwwg+QEkXlae
      yyJYZ6lk5NqnLPuiJGP+J/9AQuI5sWMFiGxukgPCgQ08viDpRJQ1txeELMvLK0QjIZxO5/a1
      uwiZBFVN+wmuzDC9sLyX9y8h8VTsbA2QSzM+cofesycR5Gr87jWCPgUlKhhzBqmvKscdiCOX
      bdcOvYfG2kSvFcCBZX5mb59AQuIp2HEohKOiHNieAWyOOjYDHgxaWEmAyWTC63tQ6fleKEQm
      5uevf/EZbS31uH1e6uoa9/QhJCRgd6EQO1oE59IJxu5MYbE7iAXcqI1WrEYVnlCc5upynHMr
      NLd3ENsMUlZWBjzYBo3H4+h0OtbWlqmurtvxjUpIPAueUyiEQDSeYXZiGFt9B1U2y7PsUkKi
      aJ5PKMTqCIODt0iX72NmfOh5dCkhURTPRQH0tYco0cpxjV6luUtyhEm8PDwXBQjO3UJVWkUk
      JeCcnnweXUpIFMVzUQCN2cHy1Cjnv/Utyk2G59GlhERRPBcFkMkVCJpSfv23f4rGVPo8upSQ
      KECOOecUUzMLzykUorSaqlIdCq2ejmZpC1TiRSOnvNyKUqXa6TaowPSkk+bODtzLC2QVOkwa
      HvEDVFVXsry0jK2y+n5S/L1w6Hg8TiqVxGyWtkElXiC5BJ9/fp2Wrq6dhkJkyGUhCyTSWUhv
      EUiAQweD8x6O7WtlfmEdg17/SFK8IAiszDtZD8TpObBPSoqXeCYU7QmWa7nw9lvbv9lRD3IV
      2rs1LNPpB4M4CugVciKRCCjUkNk+2fFeUnxyY5LluAlVap2bN29z8a03dtSthMSzYsdVIZJC
      Ds+6h6qKMrIKPUY1bIRidFdYWV5Zp6m+lnjs0aR3vb0F5cxtLBWtNJYUKOoqIfGcEV0DrK+v
      U1VV9dQdZLNZ0sF5/v7qLKS3sNocXHzzzFO3KyFRDE8ax6K7QO+//z7r6+t7chNKnQWdCkxG
      E6YSqSSKxPPjSeO44Dbo+++/z8DAwFPfRCywhqA10334GMcPd4vKJQMLvPfhJa5dv8bVm31P
      3a+EBBQex6JrgO9973t7dgPpWIj2g2+SDU7ijG7R3pTfF6DUb88UAGaz5DCTeHqeNI5FFaDK
      UUE8niAQioiJFI217RxWQFbWid/vfaI8QCH3RCbq5deX+1HK5VgrqgrOKhKvN08ax6IKEHNN
      8vOrixjNen6jqvKpbkKGwI2vLhGIxDl07LSoXCYWIp4GAxCJhMXl4ttypMOodFJskYQ4TxrH
      ogqgd7Shyk1xsG3/09/E+igKx0HMslHmJ4epsuX3A2hKa6gwrZAFamrrRdvTlrfykx+1ksvl
      WFycE5XbWp8kpLLTf/0W1Q0NHO3petpHkXjF0Ds62NeapbYm/06QqALEPXPElCYWF+dpbGz4
      2t9P3Rklq9Bh0SsLng8AoK8+iHFkAGvXYdKxgOjNxtxTpC3NnOmy8cXlq9RXvZVXLhPz8x9+
      /un9HOOmpta8crlskmuX/4Ej3/491se+Eu1X4ptL3LfAjbFZhGwam+3rFQlFFUBd1kilagKl
      Mf/gSiQSZBUykmr9E88HyMT8TC9uYI+mcHk3cDiq8/dp66QqNMnVWyucOH1GNGQii5rv/+C7
      LDnHOHT4mKicurSeusY4I5d+wb6eo1IIxjecfKEQWmsdTdYp4rlHD2p0Dl+nvP2UuAII2Qy1
      TW2srHvy/G2WbDZHlixCJvnE8wFUJjvHjx/GUVnJ2tpywZiN5s5umtmuIWoQqSEanhtgKWki
      Y2lj3jlCQ/WF/M8gh3gigUytprm+BqVSOq3ydSMd2yKLjOXlFTh26P716ooyItkCM8D4wHXe
      ++wGlqqWPH+roPfYia9fvlfxsOLRaE+/8zJXFtSc3JdFrtSJ32x4mb+/Mk1lmY4cGs6eyq8A
      JbUHSQwMsa/dSlCV7/62Uao07N+3j/mVdaLRiBSF+hpjMhkf+lOWxcVVEqVGcQWw17Xz2z92
      kFOID9hi0VnreKu2CZseEom4qJyqxEG1ZZEsUN8gvghW6S2cOnsegEyJeKn12IaTtVQTsYCX
      4bEAb5zJv6YAWJqZYNUf4/ixXpRPOMQvl8sikymQSWf9vfRcufIlwcAmCuPDH1MF+09uWw2i
      CmBRx/mbL/tprqtkf4f4V7YYAoEx4ssfE7r759be/zKvXDK4iieSpdyiYHl5kbqq/DNAMrjE
      B1en8K0v0H34BCdFTCVD9SFat7Yw1L3B0uqG6P3FXOMsxkyoUmtcvnxFNFo1vjHFr76aRkil
      KK+w8Y5YVKuQ5cZXV+5v+4qdiJOObzI0NoXLtcq+g8dpqc+/NrrffzyGTiedrbATTh3p4t/9
      /AbN1vxBD6IKoDE7+M6bJ/CEY099E2vT7xFw9d//s5gCFOsJVqj1GHRaqnpPYTWpC/ZtNG5P
      fSajRlSm2GhVlc5E74k3MSu38Hh8onLFbvsiZNmKRskplDRUi/tanMNXmVyL4Vl18oPf+j0c
      5fkVKh720j86DWQ5cOQk5nsv8zE23C6EXBLn3DLt+49SUZp/lt/cWGVgbh1dIkzDobNUWvK/
      m1wmjnPeRS4WoqX7EBrFyzM1Pmkci8YCXbt2nZW1VdQvaOFYyBMcC6yRlKmoqa2hrb1DVC44
      d4OJuTn++u8+ZHhCvCZpIrjCWiDK+Ggfd5yzonJynR2rJoVCoSYW3xKV01cfxDfyPt6tLF0H
      e0XlVPpS3jp/HotBX3CB3n7wDJ31dmoa20QHP8DY+BjdvUfp7W7mztiUqJx7dY5bI9N0ttSw
      sLAgKjc+5cSu8KOt7WJ26o6o3M3r18mFnKSNFfT1DYrKvQieNI5FFUAul4EAgpB7Zjf3OPc8
      wVDYE7wdW3SKbMSDc1682nSx1SiKjlbNxrl85QbBYJBwRDxEJOYax9T+Fj965wyDfbdF5eKB
      Jf63f/1vmXJOMjUn/hzzzlGW3V7OvfE2d+6In7F27NQ5/uGv/oT/9PEgJ4+Jh4dU1TRQV2Fl
      NZDhxGFx5+CJU6eQW9oJzA1z9OhhUbn9He1sZMuILo3T0rFPVO4e2Wz2iTJ7xZPGsagJdPzM
      BVSq/FPos0JjbeSH39kunFsoZqik9hCzY7dxu7dtZzHUOgNptAx/9SnWCvGY8HQygVKjw7U8
      TWOb+ICQq3XU2MxseDfo6BIfEPrKDlSzN7h2Y57WTvGBqLPW88//+Pf45MoNmusconKJWJxj
      p88w8NUXZNVKxIZY/40rfPun/4iBK1e4PTTB8UP5n2Vm3olOZSAe8hGK1mMx5DcPZ8YH+Gpo
      ESEVpDO4KTr7rKwssbWxgkxpZXVlmUpLW165kb4rLK65kcn1VNQ2c/xQZ14553gfnmAKmZCi
      tKKB/e35iymvzNzhzsIKihzUdx2mrc7+NZknjWNRBXjS4N9wrRLPKijRygomxe8IIc3NqzfI
      KhTUNLRRJiqYIxp7su1cbMzQdtWKdTY2CletKNZTnfAvsuyPQnqLREZGvchiPhMLcrX/DqUm
      I+9/9Gt+4/s/yCun0etwrW3w5sWLovcG0NbawcjIOPuOnkYpF18bVdc0UlfXBAgkEklRufaD
      Z7BXNdF/Z7qg6VVSYkGli6DI5SgpsNVsKLHzVksLGYWe1XXxGb6kxIInuAEyCm5db26GSMdD
      pJVWNsMh4OsK8KRxvOszwubmZrFVNxFIpopKin8YMY9s3H2HZEkjpzrLufzlNartb+aVk6lN
      nDt7lsnJCSKRECZT/n8cpaWR3/xeI4KQY3FpvqAneF9PL83tXQSDftH2ivVUy9Qm1PIsSp0e
      vcEo3q/agK2sjPb2VqamxkTl3D4vbY1mrly5QnNHNxVWU165ublpvD4XPn+QyrpWyq3GvHLR
      kI9PJu8wN7fGube/R3tj/o/I9Mi1u4vvaTq7uqksy/9eFCoVciHNhi9Gp1Yn+hxVNdVsReOQ
      ThHfcpHJ5N/1MpdV0qHd7mtx2Ymj/EheOWtlA1a7g4mZBaodu8te3LUCmCzlZFNxBEF4YlK8
      7LENczFPsKnmIMLIz/k/vvTwB3/4RwU9xpMTE1iMWqIpOaUico/HDLW25F8wZ1Mxsgo9884J
      HM37ntpTrSyp5Ec/2I5D9/u9Bdvbt2/bDHA4akTl9u07hMVixVYl7hsBMJVW8nZ72/0vrFh7
      RoMJnS7G+bffRi7Lisp19b6BQjOMViunpkJ8Pg4G/RhNFizlDtwr89TYe/LKeRdmGfNkaaww
      k0imRPstWs61wKI3xsmDLcwtL+Mo33mw467Lo2+FA8QyckoNKjZCMarvJsXX1tUSj8XunwWc
      zWbp//APH9kG/fYfjXJp/UM24u77137a/PvEXGMM+Kyc6bLx+eWrXLyQ38SIrg4yEizBt7JI
      qUnF2bPiVSaKOZfA77y8HVqhrWdrdYS33sofWhGcu4ELO8NDTioqLFw4eyp/p9kkly5dwWC2
      YCqtoLMlf79COsqlL29y6NQ5tvxr1NY2iD7H9rPEiMWiRR0zW+xxtHsll8lkUCqVhMMhUbMl
      6FpmfMWHMuqlvvssVeX5fRrFbuf63KusrrsRNCUc2pd/3fEkdl0Zzmi2Yi+zoNIatm19mYK6
      ulpkUNRB2BtxN6vRxfv/g7uLx9AcX12/WXDxaHDsI+lZoLLcTLmjwGkzQoacIGOk/yYydYmo
      WEntQRLhTersOpoaxZ1+xe4qRV130FQ04vKG8bnEtxljG9OUNh9h6Npl5pfmReWcw1f51Qef
      8Bd/8f+SEsRte797mcvX+sgBsVhUVC4Z8fPF5x/xwa+/QFci/mV/mHA4JP6XQpaJkSEGRifQ
      6cXfy8TCIk3GLUo7T7HoHBWVK3Y7d2beCdnM3cW8+FqmEM+lNGKxxFyTyPV6fFGYm50WlUtu
      ugnGcwwPDRAKFgivLvJcgkwizMyKj/f+05+RyIk7cTLxECltBdloiJ6D+ad5AEPNYcLzIyQ3
      N6hvEy8Hr7W1U29VUG7RYbaKmzfF+gFm5xY41tPI5a/6WV1dFJUbGB7l9LmzmI1yBm+L79sv
      jl7nlx9/yY0bN1hYWROVu339S+o6e+isM9M3JD5gjxzsxd5xjjarnK6D4rtox069wfLkCJPL
      mwW3c6trGjl49ASnTp9Eq9iZITNx6zNcWy+ZAujsLUR9a8Q3Nym3iW8L3vMEH+g9RVkBz+29
      cwnWhr+kqcC5BDprPe+e7aXE6ii4C1Ss/yHmGsPYdILf/u0fMz0uXlQgtHCbxSUnCXMHAfei
      qNzs9CQyBZh0WmaW3KJyR48eZXRsBo08SWOr+POeOHGMf/8nf45MZ+HwEXG5mvZuau1lnDx5
      ko6WJlG57v3djA30MTA2R3d3/q1NAI3egEoOcrWBbEJ8FwiZggO9R+k90EmgwHb49k4WgIxo
      dGepu3V125GbL5UCyJR6zr/7Q/7xT75HtT3/TgdAIuxjX89+3GurhBPijrr4xjQTS0Gi8QST
      d8Sn3EzEzc2hCcwmMzf6RkTlSht7WR38nJKqFvQq8X6LNeXumV6ttRYaC5heSjJ8+dVtksnE
      IxX5Hqe/7yYdPb0c2tfA3PyKuNztW/zk9/+IQy02hkbEz2u4ebufqjI1o84llpfFTbTb/TdQ
      yKHUVk2JTnzBP9x3hU8//TUrG5tMT4t7lr/8/O+5fu0a41NzBdcdQ31XuH79BpF4uqh1zAOy
      rKz78brWdr8L9CwQMjE+++I6ZWUWtCYbZSLmabGZXsXG7mRifhoPnEEdW8MfED/IO+6dxdqy
      bbMrdArRRet9U84bIzM7Le4H2HKztBFh8Ve/orzCRmNjfjPI4aiiubmOeEpFQ734dl/3/m76
      B/qALD1HRBboj8l19RwVlevp7CRnLCe1MoO2okFUrqyihv37D7Ppd+H2b1JZln+9VW6toLG7
      mYXxflQ68f39YttLZHKcOnmc0aF+7PUdonJfR0Fn7/b7ealmgOjaOLbOXsJbCULeJVG5ktqD
      /PQf/ec0l8o50CNui8vVRubHbnLpiysoteIvR1uxj54GC51d++jsFJ/CDdWHaLUpOP/WG5Sa
      v+50uUexptw9Bb3w1ikqy8WD/4q12e/MzFKqh1g8xtzCoqhceDOCQilHqVQxPHRLVG55aY4r
      H/8d49MrbEZTonJatY7pyWGGJ6aJbIkHT8ayOTZXnHgCIUrLa0Tl9Coln372KTJjBX63+MzT
      WN+Gx7VMKJpAJt9d1MJLNQMY6w6THRijpc5OVCi8k7Q4PcF6MEp3t7iJkYpskJLrKavQEg25
      gYb8go+FLxfC71pmxB/j8KEDojL3TDkoHNKhNFXTZgIoQakU/wc8ceIEt/tG6T1+knBY3NYt
      NemZWfVz4dQhZtziJprFqKWqsYuGSjOTk+KmYbEeXiUZPv3qNg1N9QVNtGh4g+EVP7/xzmkG
      pr0015TnlSs29GNjff6BH2BhgYrSnfsBdq0AiUiAySUv9hL1E5PiiyW6NkpSU8LQ5Pb+fkdT
      /q9EzDXGStLKmSMtBf0F2vJWvvtWI3Kl8q6rPD/Fhi8/nDdw7doN0byBzZVhLk/HOLy/g5oK
      8XeQS4b55NItQsEAB3pPiNqxcqUavUbOxNQc3Z35c7QBmtt7aG7f/u+KUnHF05ZW3f8U2O3i
      M1Rt6z5qW7eHXyFFbmjr5g/bup8oV1XXSktDC5euj3L41DlRuXJHHYmgB7lGTed+cRPtwJHT
      aMaHWQ1kaK3fYdjNXXapAAIrbj9GtYxkJvfEpPh8oRD5rmnsHcTuXMFWasZkrRRPdi9vRe68
      wVfX56htbBUPNRCyxBIZZiduYavvwGAQaa+im4X/+Jc0tu3DYqsS77esEdnUbUoczdQbNaJy
      iS0/rd1vkApOMbEZpq2xNq9cMuQigQaLrYJIYI1MJr/C9924RFvPGVRpL7f673DyaP5SNYsz
      48wtezh+9i3W15dFcyo8q/NMTE/j9cY4e/FbmEWeY2l6HOeqB3kyTm3HEczm/HIbG2708hy3
      Rp0cPH5a9L1MjN7GFxX4je9e4Nr1YU6fzh8qvrY0zZI3xomeFmbnZik7mN8sXZ4aYTWYRKeI
      M7ixwtvn8zswC7E7BchlIJdjZdVNTa3tiUnx+UIh8l3zO6/iF0owKrV0tjagEElNzMQipOUq
      NEoFE3eGaG/KP8BiKyOMLG2hqznM/GQ/tefP55XbWu6jpvs0LtcaqeQsbY0iM497Gnckg9Ge
      ZXllhuqa/LEspfVHWBgbvB+tKubKV1Z08P2LLciVShbmZ0TlDh44SP/IIPcWt2JyqUSSE+fO
      MXTtS7JqJd0icqGgH4PRjLmsEs/qArUV+ddR4WiCY501JHRVLM0vo2zN/15mJwfxRgV+83sX
      uXb9DhVn8n+137z4A3z+AEJaoLWrVfQ5Dh0/h358GNemwP7WWlG5xo5OdME0DpuZtTXxbelC
      7E4B5Cpa29tpbW9/9LpIUnzRN6Mr4eTJw1TrYiwsrdIi8uVU6kqotNvp6GgraMPqaw9R4rmG
      8/annHoj/+AHMDg6aNTB4bYa1lbFKwlrLZV07ytFkw2ymC60f1BktGqR9Y2c05MkElE6ek5z
      Z/gqJ0++mVeuwuFgaHCccxcvsrayKNqvo7qOzbllXKvLnDwrHmFaXVeHRi4wONhf0GQ5duIt
      fAEvX126zv5T4l/hVDyOyaCmb3iKnkPi/odkLEZ9czODw1MoNQ2icjKlHsddy0er3V3u+ku1
      CDbXHWbbz6mntETclZ/Z8jI1Pc384hKlZeK7MfHACsPTbhIRN1tbEajIbxJk0xmmJ++gUSlw
      +7y0tIrsycsULM2M3bfZxZHR2X2Y4MZqwUwvpb6Mn/z4h2xuBtm/XzyRpNjtw21P8D4uf9WP
      Trkluk2bzaRIpHIYzSbKLPkjRgGc4/0PfdlHOSPyZR8cHiQj5Dh55gg3+kc4d/pQXrmBoYFt
      uaM93Oi/89Ry/f030MpyrPkj2GtadugL2Oal2gaNB1b49WeX+bM/+7/xhsSrR9zbt2+sqyKb
      FPcoFuvhvTejbHs8G0TlHuwqVd3dVcrP5sowIzOrBIMhltbFk/HjgSX+zZ/8Ob/45c9Z2xBf
      pCtUckb6bhGJxbFXiIdMHD64n6mlMCVCkMpG8e1hY2kFb5zsZnFhA2TiQ+DMuYvYy6sYudVH
      Z694auex3kMkNhNcvjZC71Hxfncq99FnNwvKlZr0rIaSvHXqEBr17mrEvlQKUOxxqsXu2+cy
      aZS6Et4+/yY3b10X71imoKNjO5qw0K7I9q7SCS6+da5gLrLOWkdvzz5Onz4tGru/LbedEVbf
      1FHweTc37yqHDCIRcUXpGxxFHZtF6ehgbU48B3p4+Da3bvXxkx+/y/Wb4n6FmzduYFX6wNbK
      5Ih4LNX42BAylUDH/sOMDlwRlbt27RJGswlHVS0GtfjQm5saISbIWV+dZXNTfNtXkKlpqrJy
      Y2gKlWp3ifgvlQkEArFoDKNGx7o3LFpOpOh9+7s5vD3dHQVzeB8OS35SuLFCqb5UhIkAAB59
      SURBVMTjWcdqFZfR25q458WIRrcK2qdKrZHvvPN2wXDj9v1HubfaKhSV2dLSTkmpBZmQxm0Q
      V7zWhkamV/1oZTmaWtpF5fZ3tDMwt452ZYKWQ2dF5fbaw9t+8Awoh1GphILBf8X6HwrxUinA
      vf34iiftxxe5by/XlPDj3/w+AFar+D/Mw2HJhUIc4oEl/s1ffIBBm+X82z8U/Wo/XpVabGBn
      Im7ev9SPWq2htMwuWt/oHk9SPPtDWVHGmPh+fLmjnnLHtimlTXrZLkj/dUrsNZy3b+/8bO/v
      5w88rLnrfDh45ERBP4BZo+GjTz66n8MrpgBDfVeIp1WcOyteyAyKDxEpxEulAMVWkb4nlylz
      0NIg7lIvNrbIUH2ITN9tWpuqcEXEF60PJ7EXMlmKjVUqNgbJOXyVL+8mpxeqC/R4krjY805P
      T6KT5ZhYWKGl64ho7rVreYaZpQ1kQor61oOico8nsIhRTA4vFB/jcy9EpO9mH4O3BzlzOn/q
      ZCF2rQDhwAaJnAqrUf1IRlhZqYnVdQ9Gs3XHnuBMLMDMshd7LI3b56VW5IyAeGCZDy/dxqDN
      otaIf4nvxRYF5++QSCxBW/72oquDpLVWhpzbHmjIb98/XJHuRp+Nk0fzb+WVVHVit3vxzw5Q
      XlUgYUdTSr1Jx9DVNarbxc9huJecPjqzVNAkKHaAFRuS8LW1hyP/Ltp2AssZ1Ckvw2NTnBKJ
      4d/Xe5p9vZDL5YhENkWf4/jxcyCTc+DwsYIm38MhIgi7q1+160WwIFfj31hnbnEFWdTPmHMO
      i8WAOxBHLpPtvCIE29uCx44e4uTJkxw7XDh+/97isVA5EWPdYVqtOs6/cQZ7pbjcwxlm5gJB
      WsXmIRSbERb1TPP5R7/E1nOejSXxRetI3xWuXL9K2O/n1pB4+HJLWwcGowWQ01WgnGVHWxcO
      WwU3h5x0dorL2exVaDUqAoEgtnLxzLGeg0eZGfqKP/vbz+jtLXCgipBldKCPofGpgpljgY11
      Yqnt2kH6AnJylY4Tp46jU2uIbQXF+y3AU80ANkcdmwEPBi2sJMBkMuH1PVhs7jQUYnbgGpGg
      j9W71ypEavlk4yGu9t+hRK/jvQ/f50ff/b6IXICPP7uN3WbB7ffSUJ//a5yNR8gp1KRSSZan
      R+lqzT9T5AQZuUyaVDzElsYu6vLXVB7AdfOXVJZqMVZ0isqZm89w3upHZ4aVSvHQD62xjDfO
      NJFR6Fhb3xSV6xsY5sTpk/TfGqD/Rh+nTuXfuhweHabrbmjFyMgdTh7JP2hTyQSRrQR6kwGL
      Ubzaw+3BAbI5GX/wT77LjesDnDmZ/+PVd+MybQdPo075CoZ0TM1OoletsJVM03XwCBaRKsRf
      XXofpcaKqayS/e3iCTuF2LUCxGJxMvIQVrMRVyjO4aZy7tyZobm9g9jmtjbuNBRifvgG7nnn
      /WtHv/Vb+W/aWEq1w3HfEywaamCyc/LkERyVlSwuzonLFdleMhUhlVNQolAQj22JykVXB3G0
      H8K3skjOM4uyLX/IRCbm56ubg9jLLdulT9ry78iUGNSMTi7dt8XF+j1+tIf/8LOP6W6voaHr
      sKjcyTNvMTo4SFplpLO1WlTO7qgiEM0wMTKMoFCiFKn5efJoL198cY3L14Y5+8ZbKJX5DYuD
      B3roHx4kEd/i+NkLov3W1TU/UrdITM7mqLu/q+QLx3aQD/CAXStA5/4HDorSuybk/v3b4ag6
      sdXXLvhX/88XjC88cCa99z/9DlnvDC2GCJmVPlrFHZlkYkGc07MsLizg9nlpaGjOL1ikH6DY
      ynUGxz6SU1eoLLdgslaIyt0z+e4dHCJGsbZ43+AYRzrMZCy1TI4Mceb0sbxyS5Oj+OIZdKkQ
      I+MeLrzxZl65m9evY9amaOk9Q1/fIGdO5J9RRsbvYC3TkcwqmJqaofdAfkVeXnDi39yuM7T/
      8AlKdPnXMwHPKk6nk46e06zODYqGftzLGzhx9gL+2VEqy8TNZjFeql2gYkl++b+QXX1wkLbp
      vxrn6p9+jH/hwWk2P/wff6/omKHHj10V27Z8vJy5qJ4rNJy/+DZQWFEAHJXbsUKFfAUP+wEK
      tVesH6CurR11EUFkxfoBGmuq+fTydazlFuoL5CIXu79frF+h2LyBQrySClAsYXeYcnUJvnk3
      No14zFDRx64WWc485p7g/dtrtDQ3kNxcE/2CFSvn8ayjlwvcGJooGJR2zw+QyWQwasQXhcUG
      kT3sB3C714H8azJrZS0//Z2fAvcUNP+07F6ZZdWzTsQfZd0XE60LlEzFme+/yez0BN/+wU9F
      76/Y4L9CfKMVYOyDvq/NCvlQGCpoqAqythaloUF82/JeOfNLlz4rGORWbNRosXLFBqUN9N9E
      yCZJZhVojTbRmazYIDL3yjzzqx5kQCyVpLIyvwIk4zEi0e1UyKXlRdH2/D4vOp2JpjY760sz
      VJXnj/Opb2zGExjDaq8sogzMk4P/CrF3CiBkn9oP8DxIXP6fyXkfLLT1v/3n97/sqNQ01Ih/
      2R/2BDvq2kT9D7l0CuedgfseXjGKlTt1+jxX+yfIJDI0tYusYyjeFNnr1MnAqvN+KcNoXDyI
      cd+hk/cryBVMFdWaOHX6FPF4vGCIyNFjx0nklJzsaWLFJ+5XKMSeKcDS/ByltvKn8gM8D3Je
      5yPrB3jwZZ+YuFPwy16sJ7hYD2+xcjf7+mmrr2ZyJUQ0sECV7c28cgZzGRcubsfjLy1PUmPL
      P1PU1LViLqsmnID45jKQf+Ev01owZmP4fD5icfHKa47WQzjupjIoCvijkhE/1273EU+pOX8x
      /zPsRC6dziKXpRi8M1swv6AQe6YAWeRf8wO8KgT//V+QWlqiDPDwCyr++/+OsQ/6CLsehGOc
      +YN3Gbh9i1AggAb4/KNfc+Fb387bnrZiH9uTe+HEoGLl7pUnyazNFSxPUuyXeK/lFkevM+RK
      U1miJpZKiib2FBu6ULRckXkDhdgzBaitqviaH+BVIbW0RHLiUQ9r2BV4ZP0AMHj7NgtzD45Q
      uvCtbxOd+V/Jbj0wqUoO/Sl8+D64XQ9++Pt/mHeX6iNnAE8kff/aPz1SgWdigOTdbU9NiYWK
      rl7irgzgRosB093DLOZnH3iOtTodVdU1j3yJW1vFk+f3Wq7hwEkqWhPodLqCIQ7Fhi4UK3es
      99Bd/8MIp86Ibw4UYs8UQKUzfc0PcM8TbChtJZt7YGtms1nK1HZyj12zVNSQyz56ra6ihGwu
      +8g1rK2QffSayW7+2m/zXcv3W0VtLaoiflvhqCT3+L2oq5DpHrtmscBDcoi0Z9HIyWUVj1zL
      ZXP3nzeXzZHNZom4HsTDaEv1lNRb+fTDD+5fc1RX890f/Saxn/2z+9cUtg40b/4Lbr3/X9y/
      VlLWTufJ/4blW58/aM9Uir3rMIufP/gAaEv1VB6up//ag9h+k9lM+/4eFv7tew/kqstw/PAM
      VxcefBTMWh3degPhv/v5/WtKmw3DG+cYcadR13Yy6Uli0MhpKdPhHX9Qc1RlUGNptMHIOEfV
      chgdBaORbGsbQd+DNYNSpcJktiDzh7nQc9ebHPaBTXwdJcauy6MXSzabRfGYYShdk649i2u7
      4ZlnhOW7SYVCQXIzQCSVAwR8Pp+4XCyC0+lkemaWVCb31O2lYhFmZmaYmZlhZd0jKifk0szO
      TBOOJgo+B4CQy7I4P8uGL/TU/QJk0kmmnU4isaSoXMi/wczMDNPTU/hD0YLtpZPxJ7cXDJDL
      JhkfGyOeFn/PoUCArCCQjEXYjD59e4KQZWFuluU1zyP3/Lic3+dnKxAgRQq/L7Ingx9eYEpk
      Kh7DveElHgnhDYgvnDV6E+3t7bQ2NzA7LR4xWWx7ar2J0pJtZ5fZLL7H7J1foLyxFc9q4XIb
      W34Xn35xhdBWGnu5+GK22H63/C6u3RpEEOSY9OJnG1usNrQqBTK5mhKTeBW95ZkJbg7deWJ7
      HreH2Sknjc1VLK+I70iZzSZuX/uSkaml++uRp2lvzunEUd+EVZdmySW+fthwrbPgnGHVvYrP
      L35E7U555iZQIcKBDUKxLHU1DsQyOlOxCEtrbuRyGUZzGRUFamgW01406OHOvIvSEgNmqw17
      Wf5BG4+EWHF7yWYyWG2VBfvNZTMsLsyjKynDYc8fH1Fsv4IgkEknmZ9fpKquUXTQrsxNEUqC
      VqWgsroek1784IxUIsrC4gqVNfWYjfk9v9lUHG8oRplJS06lR6PM/wYDXhcKfSnZWBClvpQS
      Q/6w8GLbW12cJ57OAhmMJVU4KvJ/HBLxGPG7B/oZjCWoVa/4DJCMRXB7gySim2z4xJMekrEI
      kViSbDb3tQjS3bSn0Wox6nUYzWWigxC2c39lMhmhYAi5XPw1xQJuxp3zhDcj5ATx+1Nq9FhM
      aqJbCVEZAPe0E+fqOiq1uuDz1jS2YtariW5tAeLfsNXFORYXF9mKJZHJxAdNZHOTcNDH7Pw0
      /qB4SRp/YIv42ipqmwnPqvhuX7Ht1TQ00draSmtrLVsh8cK6qUSMmZFR1oJBUpm9O2f4hVaF
      kMlS+P1bFPh3xlTmoNpmQaWQbZ8wKEIqFmFhaYWcQMH2vMtuNKVmludm2CxQyRhBQIYMuPf/
      +YluxpCrZGxtxVCJhAHDtinX1laHQV9eUPHkSjW1dXXU1dWh14oXzF1ZmCWazJDOFjZtYrE4
      MoVAbCtZ8L0gkyGXy1Eq1agKfF11GgUbW5uszKxgtBQoYFxke/fWMjMz69iqxN9LLpdDrlRC
      Nste2iwvTAEUShUlJQYUMjVajfj0HQv7mF1YZiMQxloqHu9tKq/inQtvEA152dwSV5TS6gq2
      PB70JhOKAqc3JmMp6lpqae84gJAV94LqLWW0tzZw8NCRggN7exG8TiYXZsMvPkNZHDbcc3PM
      zc0RjYuXJC931NLR3kZrrRVvWHxWcTgqUWktOOwlBZ9Xq9GATElVVRUFnOFkUjH8kRhyQYHR
      JJ4VZymz01BXg4ASbYESKAAIOZYW5kikxcMysoKc3jOn6ayrJJ3ZOw14YQogkyswGGx07W9A
      rRL/h5EpNOw70EVjfSNCgXN+t3wuPvnsC9SmMkpE7FwAjaGEffv20d7SwOL8onh7fh+r7lVm
      nAu43eKHa2x63Ky4V5gYny04o0Q2XJTWttDZ2U7Q5xGVu7fob29vL/hlX15cQhDAaNIQKmA6
      uDYCKCIhypurWF0SL9K1tOqmpd7C4NgqpSbx99fQtp+TR/bjWV8jmREfsMUuvhOxLTwbPtq6
      erAYxeU2A15CkRh+n7vgh2GnvNBFcDG4nDOY2h24nBFgi9Z2cY/kTrkXmJWPbCZNLL79ZVWp
      NaKzVLFyuXScCeccSoUcq70G+y6ylx7pNxVjZn4ZFGraWpoQqSOMf8OF1x9CrlRgr6zFIjK4
      /RsuAuEImUyOmvom0UX10vQdplc2qK2tprqmoajFd6HFfCqZIJna9oZrdXpUotOPgGt1GYXO
      XHCm3SkvvQJs78ZskM3ksJTZRHdZJCR2w0uvABISz5KXqjaohMTzRlIAidcaSQEkXmskBZB4
      rZEUQOK1RlIAidcaSQEkXmskBZB4rZEUQOK1RlIAidcaSQEkXmskBZB4rZEUQOK1RlIAidea
      PVOAgM9HVgDI4HZtV/Hy+cQzqSQkXgYeVQAhw42vrtA/0M/wuBNI8bd//Tf03brJzcExAD77
      +H0GBvr54rPPiCSzd38W58qNAWTpKF988TmXvviCtY0gcd8iA1Orj/cJQP+1y4STORAyXP7y
      6jN9SInXjDzj+P/83/8v0gKQCnBz0MmWy8nYUuDR2qB9lz+lvvctqkrupa8lUGhKOHr8BKNX
      P2Z2o4lQNMHFd4+Q8c3w6eAM3z7ZwdiNK/ScegPv/BAaRzudpTGq7aVgP8Lge+/R2/H1o0d7
      Du7nHz69RKM5Q13nKZJbQYbHpzGUlrO/vZmxodvEElla9h8k7F5Bp5Ux64pz9tiBZ/8CJV5p
      8o3jSpuRS1cHeedoFYHgFplS2IybH50B1sMpqko0LM5O8qv3P36k0baWWuYW1snEtxgY6OfL
      ficH2rePE50PxGks01LRfgxteJGJO+P4N7crM4jlm6kM5dg1MaaD0GQ38cWV6xw5fpzAwiSb
      GaiurkGpknPp0hUWJofpc7o4dST/AcwSEg+TbxzrrbXINleJPVZR4hEFqDSrcW0maWjpRCV7
      tPjQ7PwaLU3VKHVGenuPcOFb36Pa+liCtUxB74kTdHXt4/qXnz/6d+QYGxpgef1Bld8j3c2U
      V2+fzhgObDA8OIDB5oDgMldGljl85Dg6ZQaUBt65eA6FWOa3hMRDiI3jN988xeXL1x6RfcQE
      OnbuAleuXGW9pIQSqx2Qk01u0t93G0FfxX6bntXyr5/80mTVseBPYM0FuDM3x9Kci4MnTgAP
      F6mS033o0WM25WoDpcbtqgJnT55gzh1Cq1KiMpWiyUwxODCAvsSKWSltV0kUT75xbLWWojKU
      U2bUkC4xotRCiVy9N0nxQibOe7++wo++/y6QYnbGRUtrPStT/WxQmXcNICHxMrBnVSECPh/m
      snIePkzc5/NRXl6+F81LSDwTpLIoEq81kmkt8VojKYDEa42kABKvNZICSLzWSAog8VojKYDE
      a82uDspOxiIIKgPZeJitFJSbday6A9TXVrG2soy9qhaVQsb47CrRePrJDe6QnJBDLtu57tpL
      DTTWiB+mXOi8gKdBavfZtrvbtpOxyO4UwL0wjlDZS8LrQZbJ4vUpqbfpGBkcw9ZQz9zcPB1t
      zfzV55NMLokfkfm8+f6JRv6ggAJIvF64F8Z3ZwI5Kh0AlBi0eH0BbDYL6+4NoltJDCYTKsmw
      kngFcFQ6djMD5FjxhEmoZOgMcqqbm9HLFQSUFk6cqWd66g4Vtc3bHZRqScQNe3zbu6fUIH7q
      osTrxvY4fqahENGo+PmwT0M2m0Wh2P1ByVqtNu/vXzXbV2r36dve1d3MDn+FsvY4sfUJIvEs
      tjITscgmZdUtTE6O89a5MwD8D391/aVaA9zjr//V9zEYXp6ZSeLFMDv81e7WAHW1tQBoNBpy
      0TiCWo1GryIcSlLjkBaZEq8GdbW1u1GAHEtrG/g31jEaDZirKrEbjaRSCqoq9fh9ftY9UjUI
      iZed7XEsrQEe4lWzfaV2n77tXd3N/Hgf+rqDxD1zbCYFKkoN+PwBquqb2HCtozWYaah18Kcf
      DLKwHtpNF8+Fs93VXNhXTt+dGarq24jM38B66Ie02TSszE0x5ZyhqbmJ8WUvvZ3NzM7OEc/I
      +PbFN5ieGGZ6boOm5krWFpfZ19vL8OAYDW1ddDXXMDZwk9VgkkNtNYzPbHCkq4qbY5N0dp+g
      3mHBuzbL8FyISkOWkclF3nn3DP0jM3zn4psv+rW8NsyP9+1OAWocNtbTArF4nJh/C59GhkYr
      w+OJUWrUkVVt5/m6ggkWNp7NLLAX7I+mCYVDyBQqFqdmOLe/kZlkDoCysjL8gT4aWjUYlFmi
      aTkH26pZT5sBaGxsZHE1TCQcQlci58O/uMyP/+vfZfZWPzTXUGa1MrE8TWVdM3MzLqbXPHzr
      nW9xu/829RWHmF0Ooldk6e49zlYqi91Wjdm4+ALfxutHjcO2uzXA4uIya2urlJeXoSm1UFte
      TiqZw6iKMrW8gfIpzJPnTVVtHSoyVDXVMNA/wNjoKF6vD7fbjc2iwR3NoBBgMxJhYmGDrno7
      Pp+XX/zsZ6jUKurq60lsZTn97QN8+dEnZNWG7d97PKQzGRZmJhgaGUIlk/PRJx+hK7Gx4Von
      mYwydMfJqnOY6taDeFbmGBocYt378s6Y3yy2x/EzXQO8bLFAj/N4bNCrZvtK7T5927u6G9fS
      NDpbM4ngGpEkVJTqWHX5aWqsZXF5BWu5A3uZmQVXCE9w700gQRCQyfagRtAC/OMyEzqd7smy
      Et84XEvTu1MAgypHIJ4lEYmhTGdYSMXorLMw74qhUdzd/Skzc23C9VI6wh7mdy/sf9G3IPGC
      MKhyu3OEaTVaAGxWM+uBMI3VlUxOL6BWyaiqbWAzLNmxEi8/Wo12d8Fwq4EkgsqDzKCi60A3
      ajlYK5uotpewsLhEa1srAKe7HLQ4Svb4tvfQBALkcil09fVkexzvQgHkVFdXPZQQk0Wl1pHL
      biFXqql2VHCv/mijw4LdsvcxN3u1CAYYnXXf/+8DLZXPbJEm8bKxPY73NCFmYT1Myj+JzNRK
      W0PZS5cQ8yT+8r/9jrQgfo3Y84QYz9Is0YwMfzC4pzcqIfEs2POEmGMnWpDnYvgjdzt4yRJi
      JCQe8BonxOykXZVKhVqtfqp2XzXH0qvW7tO0vbcJMRV25pZDdLQ3Um4xvbQJMTvhX/7ucY53
      N77o25B4Bux5QkwgkMVmUePzvtqDXuL1YM8TYqprrAiCgE4v7aRIvOy8xgkxO2lXWgO8/O0+
      Tdt7mhBT19zKyuISjpo6rGbjS58QUyyOUi3/4p++Td9nf4e55/uoQrO4wmlOHTnIz//mP/K9
      3/0dNKT54C/f4+x/9mMWB26SUpagzUVYWgvy5rsXifs9DIxNkFMYUCb9qCzVGGVxRiYX+ck/
      +SmZsJ9PLg/wox++w7UP/oq6U7/F4shtlEYLJ4/03E/Aeef77/APd/ucGbxExnKQg21fP7dN
      4snseULM0JU+zE1VhMObWM3Glz4hZqfs72hiMpnjcOs+1m9eY8E5gtZgYzuFRkVLbTVp4M7U
      BCZbI6XqFJr0OlOuJL11FTTaV1FWVeOaKoNMkO4Tx9hKZVEDanMZFWYT2UQYpUZNLKfDYlDi
      iSeABwk4y3f7jPhdpOQq4lvJF/dCXnFqHLbd+QEWF5fxqnK0lJeRzCmpLS9ndXWFtp5W1jwB
      0sqnMxleTrL03R5gQZvGEFQyNDiE+dybrC87WV5qwao3cHt4kNoyK2WWMjYTSepaGhkNJ6jW
      RYkktawFk5zqKmd4/SpKi+N+MkzI6yNNisHhQUzlJjyudULGCTSJNPF0Gp/Py+cfvoe9ross
      CtaXnczUWol53bhSak4flg4h3DlSQkzR7WrVCnra63bd7qtmU79q7T5N23uaEFNb62B93Y1G
      X0JDrePlT4gpst1Sg+qpFEDi5WTvE2I2UtTazIRyeoBXIiGmGBrtBn7rwuEXfRsSe8yeJ8QY
      jDrWfJtUl+99DoCExF6z5wkxtXYDMeODBdmrkBBTTLtSVelvIs8gIQbA53Fjr6lHq1K8Egkx
      xbTbXFO2531JvGieQULM6OAIJTUNzM7Msr+r/ZVLiBHjX/7uccpLJbPum8aeJ8TE0wqiQQ9a
      KatK4hVgzxNiDvVUMre4iqlk+2v5TUmI0apfnUp3EsUiJcTsuN3dHqrxqjmWXrV2n6btPQ2G
      K6+owu/3YS6roKai7BuREHOPRruBf/3Pv/+ib0NiD5kf79vdGqDGYSNxLxjO68MXi6HRyphx
      LiGTK/C63U9uRELiBbPn1aHb97UiJ0dpefne362ExJ7yHILhpDXANq+aTf2qtfs0be9uDTAz
      RVJQYVAJhGJZasqNrHv81NTXsby0SllFFdUV1m9MQszD/LNv91BnVXBjZIaLJ3u43j9CibWK
      Lc8cKks1J48cYHl2Cuf0DDVtXXiWnCiMDohv3k9uGe2/wVoozYmeZm6MzPDtc7189uVtOg4c
      orbCyvsffILN4SAVWkVtrqHepmdy3s/5N48R3VjmyugsVY5KPEuLGMqrsBlgYyvHmeNSvNJO
      mJ+Z2p0C2MrLcAfjZHIZKrRy1raSdHc3c/2zEXounsIzPw8V1m9cQgxAIpWl1FaH2biI2lBK
      dbmFjCZOztgGme2CYLWNjcwvLFFT10Qq6KGxu5ulsVv3k1tSGRVtRhXcPRVmoX+IpEaDx+Oh
      tsJKZHMTnakEvVxFMBzieG83C/Mb2zeQS7EZjWMO+whtpfGFFvHJY6iMpcRzoJNKnRaNrbxs
      N2uADP0DI6hUSjLJKMvBTSwKgfExJzWtNTjHxhEUmr2/25eIe6e5TPRd4fOBaZRKK571Ifyx
      JF6vjw9++XNSCg1kk0TTKrTZCP5omngijs/nJRnzM7TuIXa3nZzFSDIcJZlI4PX6UBpLSWZS
      qLUaNjc3WZyZYHB4kHXXOkvrm5hLDKSyWuqrTDjqq7DareRSCVLZF/1mXiW2x7GUELPDdptr
      ynYcFvGq2dSvWrtP0/au7mZxzglqE0aVQCiepbrcxNyKh/aONmanZ+jsaAf4xiTEPIy91CDF
      BX1DWJxz7k4BauvqmZxZIqtWogPmPQH2tTqYm3eR5cGE8k1JiHmY7kY7jVIK7jeC2rr63awB
      BJzOWTo720hn0iQyaRS5NJFIFJXBhFohrcIkXgW2x/GuguE0KhUrqy4aaqsIxbJUWI2srG9Q
      ZZMzvymw7vFRVVH+jUmIeRh76asf3CcB98bx/w8y7knM2YpkuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Bar (3)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2952+jSZ7n+XnoSZEiKe9tSkqlN5Xluqq6q6vN9KBmGtvjFjP7ZrGLPeDu
      3R0OBywOi1lggfsLbnF7WMxhcbPXjeue7erytqsqvZNLeSnlKEeJXvTk8zyxL6SkUiVRpaxU
      GhXjAwgi4/k9EfE8jO8T7olfKEIIgURSohiedQYkkmeJFICkpJECkJQ0UgCSkkYKQFLS7BJA
      aiPM8nr4qWUgHgkQT6tPIaUM01O+p5DO4bByf4SZ1ShB/xKrwSgAoWAQfZ8xu8nRIe7PL33n
      NKempr/zuSC4evXavhbB1UWGxybRnqOBx10CuHL5KleuXD7EJDJ88OEXhxjfdyXD9PTiga39
      Y9fom4s+wfzsh+DOyAydNSYGRn2M999G1XPc7b+HQSl+1v35JY61NQEw1/cFY/7MnnYffPDh
      nuHT048jAIUml2BwLrjn0al7t/FF8nS31hFPZh8p5g8+/OAx8rU/pp1fdVJ5nUqzRiwnyK5M
      MjAXoMLrpdVjKnxuKjcwthQlHVnn9T/5M756/3c0tHTQ3nWS/muf4a1toK6pnea6KvxLPubm
      ZhmdbMeuRVkIZ8nHgpz/4Z9Q7TQTnL1HuvEHTLz/Wzq6jjM8Msqpkye5P7/MX715kv/47iDn
      OyvRzG7s8WVmUypOVw1u4hgdHoLROGcbrPht3ZypyfPlwCrlSgSDrZxoIsebl7r58Kt+WprK
      ULf0Pnr1Y8w9P2Tpzrvg7qXBuI7p2A/ILI2SzGRRjS7MIR/3VZVq6wn8syMISxnhjTSvdDr5
      /6/O4ixz8re/+gUR3xiXxwPUVXt56XwvH773EdW1NWSwYgjO0vnWX2Bb7WM03Uj0/nWioRDn
      3/gpc6ND1NTV0dnTy80rl/F6XVjKG7l4+hj56AImTyuoWRSzDQtpBgf6cXtdjEzOcKqnExB8
      9uF7eKpriWfgeGs18/NzBRH4fD5CYQfldOOb6C/cq5fPdDM/N8fQ6CSdDRWM3Z9nxefjrT//
      ix0l4b/99te0dfYwNzvPn/6zX/L1Rx9QWVNDSjXRYo0xGHFSaQjjbjrD2e5GANrOvMQ7737C
      ufa3dxW0iXk/f/7nLwJgRePj998txFct1qDzLU7YVvlgNE125R5tnd1MTM7w9p/+mLm5efr6
      hmitUPlvW/fenN/gV3/zN1z+8F3Ov/U2Hut3a83vOCvqG2Y5nMOkZPnq5gh3R2f42Zuvc+nc
      qR2f+4ZG8ZRZ8ZYZWViOUO5yoWo6NpsFt7ucfF7FZrUBUNfUQnt7Byd7Ohif8/Pma6/wk9fP
      cndgckdGrA43586dp8Jbwfnz53FYNrPW2tnDKz94g1hwCVDpOfsDfvGjl4kk87z04iUqRAbH
      8ZdYHb/DndtDvPzyeSan7mMyGolFw9y7dZeXf/pzLpw/XVB77wsvMjXQj7GsDpEJMBfJ01lh
      JBTewGiysbzoo6WlhZ6TZ2lpqGZianorvggA1c09/O2vfrGZ7zI3FkXDbDaTDcxirj/JpZde
      ZiO4uutmxzfi/Opf/CuaTBHKO17g0osvYYrOsJY2Y7E5Ca4vAxALrOGpqQNrJa1VJmxOG4qm
      Ec/aCC7OkQfIBsib67l06SUyG0EaWjpoa28v1AAtLS0cP32eprrKHfdKqWqirb2dsyd72IhG
      yGs6enyVYHJnXq0ONxcuXOCl7kqmJifR3B1cevFlEpF1AHpOneWNH/8JS9ND2ycpZgxoAOSS
      Mfr6+ojE0wDsmG/dWNoV3860y7lw4QK1bgcWdyXt7W1cvHgW00P3/o3zHdy4t0BSN3znwg/f
      EMCtewv863/517z5Z3+LFpymvc7D2LyfcDi843NLXSW2ikZOnb9Ec7WFtq6znO9t4sr1fmob
      23jxhfPcuHplK1YzqppG0zRqyy3Mr0UZG52i81jLgTKYzeaIri1gslcAJmpqKjcPqFlS2RyB
      dB63yYTdpLOeVXBbDbjdXk6cPstLF8/R1FrH5Og04fV1HvQ0DLYK8qERzK5GDEJDV0yIZICI
      VkZzfRUIgdPjJRoMoGkabo+H4yfP8Mql8wDU1NQU8pcTRl5+5RVSSxPE7A1srNwnm4ohDBbK
      HDaSyQy+xc2ml8tbjd1swFnbTmhhglwmgV5WQ5nFwNkzpzhxvBsAd3Ut0XU/AF0nzhCOJjh/
      7iRaLkFe1zZ/NIuX7MYKuWyKvNhdAMq9HsKBzfzvvFegqSqqpjEyNsHZc+ewmXefr6o5VE1l
      eCZAe0c72eACuUwCbesxkstmWZjop6Kxi5B/ibQKiDw6RgAsZW4uXryI12UHoKelhr6xWbLJ
      GFHcO+IrK3OQSibx+Yo0UTWNXF5FPHTva7tfYO7q/0dl27kDlKJ9EA8RCAQe+rwuhBBicW5K
      zCws7/o8f39CTNxfELoQIrDiE0MjE0LThdiIBET/wJDI5LVCXEH/kpiaXRRC6GJ2akws+YOF
      Y6mNsEhkNREMbobt+B+ZFf/5Nx+IsalZoQshNsJBkd2KVstnxNDggNhIZYUQQqQ3wsIfjAoh
      hFCzKTHQ3ycCkbgQQojlhRkxv7QsglvHhRBidXFOpPK6SMZCYj28Ubg+30qgkIf56XGxGohu
      pjXQL9ZCMZFPbYhoIrt903RNTI0Ni/mlNSGEEMlYSAzeGxV5TRdCV8Xw0IAIBQMimsgW4hVC
      iHg0ULCLhdZE/8A9kcmpDyIV7/z+na2PORHYyvf6iq9wjUIIkUnGxMDgPZHdutcPxy+EELOT
      o2IttLHrXsWCfjE2NSu0XFoMDg6KYGBNpPI7z//D7/9JDA70i0g8tfk7xSNicGhY5DRdzN79
      XHxwuV/M+lY2011dFKm8EHODV8TAbEAUY31lQdwbnRSqru+ITwhdjA8PiVAoKILRRCEf4WBQ
      aFvXOXhvTGS/ce/f/8MfRF4vmtyBUIR4jrrk3yQTYWpdpbul+lnn5Kmzcn+EdFkTnfWeZ5L+
      1NQ03d1dex6LrMyilrdQ7Xy4Cym4evU6r732g6eSv8CKj2jWQFd702PF83wLQCJ5wsiJMElJ
      IwUgKWmkAJ4hQlcZGxkmo+qHEl8oFNrxPRFaxbe8St/AIJl8kTSExtzc/KGkfxQxfbuJ5Enx
      9eefcu7VH5GJBrg7Ps2xzlZSOFETQaLBFYxl1Qze+pKf//xPmJpdwuqq4FSTi2xZI7nQPJG0
      gkVLYPE2kAz4uDM8w5uvnCWYUHnh3CluDY7S4VGw1l7k448+4tyJDtY3VKbu3eLVH/8pydAS
      JmcNq3NTNLe3lWRhkDXAMySV0yl3Ohi+28/ZV89y49MPmVuNMj09TSCawL88R11jO01uA4Gc
      nRolwjvXJqhwmrk3Ns3p3mPMLK4yMTzCwkqYmgoX169dIxqLAaBsDW8YTDZMBsHqqp+x0RG8
      NfV0NHpYXYsxNjqMy6gQexqvYz2HyFGgZ0gyGuDexCwdba1MT9+n50QvkxPTuL1erObNl34s
      aJgsFlJKOV0NDn77zpf89V++zdLcNNGcAXM+jsXbQGx1loywUeFQiGtmLp45wZUvv6C7q52J
      hXXaO7uIrcywkTfS1eAlppsILi7i8FSwvrrIT376M/Z5zeh7yxMTgK7rGAyygjlMQmsrOLy1
      2C3GA9nr+TTxrILbaStuJDQisQRej/uQcnm0eGIC0DQNo/FgP5RE8qx4pH6Pns/w1Y27/PiN
      Vxi824/R4cZKllhKo67KRWwjRnXLCapcZnRdR7auJM87jyQAg9lGU30NkKbc2wIkARMtVljX
      4PTpHmZno9R66gDIJcLcvTcFaJx54RXcdvOhX4BE8jg8kgDymQShYIiV8grymTWMDg8Wcqyl
      NJqqnIwMz9DSfbJgPzwyzOmLr2HJBRgcnuDVF0/vGe+qb5rphXUUkaO16xwt9d7HuyqJ5IA8
      2T6AAe7195M3O+lorsXrrdjTdnLkDmuRHAo5KmrbONnd/iSyJJHs4inNfQjS6QzeIg/2nlOX
      6Nn6PDExXjSWdCwgm1SSQ+WJjlPevv41Lb1n6W1xM7cUKmq37l9lbWWey1cu464uvlBms0l1
      iYunOxkdnngSWZaUGE+0CfRwJ/jsC69Sbt+7wrl39yrzgRSvnDvGzGqGly+c2DtSoR2oSSWR
      HJQnKoD74/2bbXuRw1vbxqmevdv2uprmvfc+IpHK85f//K+xGvefk1xbW0HToKGhYc/jslMt
      OShFm0ArKyuPHXl5+dZqJgXc7uIrm25ev86xRjsnX3qNO3f6i9pNDl7l//5//pF33vknFEtZ
      UbuNjWgh3Xj8Wbk2kRwFinaC33//fd5+++2iT9mD4F9bxWQ0c/r8a7j26bCeOt5D38wK5rlh
      jl36UVG7nnOvUdPQwcjsIvVVxafuD9qpPmhN8bzbjd27SzSeJZnM8Ppbb2ErMgEv7Xbb7NsJ
      fv/99+nr69vPZF8yqs6rr7zE3PgA/tBGUbtp3xIuQxqlzMmyb6Go3eCdy9wdGqKto5cbN746
      UB5MpuKXeNCa4qjYqZkYqX3e6pR2uynaB3i4CfRdagFN01AU5UAvxIX9i3z21XUqqjz0nv0B
      TdXOPe2WZiZxNXYyN3IX1WTjhXN7u8SYv3edgdU8deUWUrksb/3wR9+ah4mJcY4f7z3SdrlE
      mMVIjs7mOml3QLuiTaCG+lrS6QzhaHzfyPcjMfRvCp+Nzh7Kuv5X/rd3f18I66iq4n949XWs
      ipu339x0NGUwFe8AZzSd1NwIG+ks9S1tRe1qu87x8/YsgyP3uXjhZFG7h+cVTp5/6cjarSzc
      Z35pDc1o49VLxf3kSLvdFH08p1bH+d37X3J7eKxoAt+F4dWVwt9scNOP5Pwfxwt//v7iTSAT
      Kl9fuU02myGfL173DQ7eZmiwn9On2hkeuV88Lw/NK0yMTR1Zu/HpGV569VW8apD1bPE3cKXd
      box///d///d7HTA7PYyPjPLC2ZN4vY/um0YIQX7t/cJ3g6UKS+UP+K99dwphtS4XP+3pJTCy
      vJ1umRVvRzW//Le/4TdfjPCbL0YYmV3nrYvteCpruXjxIp0dx6iuKC+att2kEEoJWqtdWMrr
      KS+z7GnX2NzE7/7Lf6Z/Lsovf/GjogtCnne7+kon/9f/+Z8w1vdyoauxiJW024uiNUB6bYaU
      ycX8/GzRBJ42/8cXHxX+/mvfrc3AL//d9t/APwAwv7xCuSHNH6/3sx7Y7aPzAbevX+Htv/vX
      /N3bL3P99vCRtbt+Z4j/6X/+X2g2hFhNFTWTdntQtA9gqWynzjyGybm3d7DnGa/LwfRSiLde
      Pc+0v7jHhdOnTnO37w4PZqqPql1vVye3rl9Ht9RwylHUTNrtQdEaQGgqzR3dxMO7vfc+73gr
      G3jx7GniGQPN1faidqPT9/E6IJVOMbOPa5Dn3W4lECCXihBcmCC895YA0q6IXdEaYKTvOn/4
      /AaehmN7Hp+ZGsfirMBpEURTGjUVToLBMDUNLQdes/qk6Lu2vcGHt7KKF177IWP+kUKYw1JG
      W0X7gWuK593OhIbFXcuZ+iYs+7zfK+32silCTUsPf/WX9ejGvZ+g+XyOXCJJ3ghlwOxaltMd
      tczOBmhtq0bXd/5gQghUVT30MNM3wrQidv/h0/+9EHa85iT/9if/nrirk7reTkY3oMxtQFVV
      7n89WrCzexw0nm2n0xKms0OBwBi9DjeqWo3y8NutVjOiuhzXfI4LuIhc81HndaKq1ZiGt/3n
      izInWkcnK2YHZe0Obq5vUO6woaoqI+vbj6gys4F2r4UN3xy1wMiNG5R5KlHVasLj/oKd2WHB
      1VqBLebCBuTikLavYK51kljdHk2zeaoxa9A+v1YIM2Ii0lnP+Ma9QlijvYXabCUNIetmQCQP
      1kXyVaBPvFewMzReRKvopcm9PRuvRPzEFIXZgRuFsJr2bipr2miwtm3dACAYJWOEjf7t3Wjs
      HXU4Ghycq8zD5u4H6BszaMZKjLMzBTu9pg6twkxv4/YWXkrKSsRcs+s6GjQLvfmtsDgYVrIk
      vCdYW952we6pqCwuAI8lza+/vktnSx2njn+zFlAxGq0k0mmMZh3f1prgkeFJqltO7LkYXlEU
      TCbTcxU2tLK9K0Sty0xXtYPJP24X2Mr2WlovdsH8l9vnetowNVwgP7/+UFgZpvoK1j/dHuEq
      62yg4sVeGNh+t0mpq8fU3cPVue2h2RZPBWcbmvfMy8DnfyiE1XX00H3p9R0jZo4aF97Omh15
      7vnxWZweI8Hp7RqvqusUpryR2O/+qRDm/su/INFWxo217Wt7pfZNquK2HddR87NL2G2Qu/kf
      C2GWl/9H9LK2XWnkDeYdeT7/k1/icTXtyHP1qUYMdmVXGq6qqh332dD2JtjsO+6f4fwF9HIn
      Wf+7hTBr3Z+TcNl2XUdjzrkrzzlHB7OT26/GdPT0FheA1V3Pn/7oZdZie3WfTXQdP74rtLlY
      ZBLJc0pRAVy7dp2MbsLpKT3f/JLSoegokMGggAAhDsdxq0TyPFK0Bnjptbcwm+WaW8n3m6I1
      gCz8klJAOu+UlDRSAJKSRgpAUtJIAUhKGikASUkjBSApaaQAJCWNFICkpDk0AQgtj29x+dsN
      JZLniEMTwOzMDJ4yhYXV4g6wJJLnjcNrAhnMuFxlaLnsoUUpkTxpDk0ADbUVjE6v0twsX5+W
      HB0ObYcYu8vLqRObzls1TUPXdRT7QyvJLA1omsbJ2m33dG3eCjRNw1a57enZUm5D0zR6WysL
      YS215WiaRmP59hK8KkcZmqaB66ENNew1oGmUP7RvgMPlQtM0eqq33Qo2u1vQNI1qx/bKNY/V
      gKZpeFu2BeyqcRdNQ3dt772r2C2b19G2fW3mOu/muTU12+d6PFDkOvbKS03rtkcOT21T0Xv1
      cJ6t5XYwGLF6tu+fwWJHGA2Ye3oKYUpFBSYsNNi3r81pdIHVtOM6jG4HwgzUXyiECWfdnmmY
      DMYdeba7vWBUduTZaDeBVdmVhmaw7LzPFheYTDvvn92Brlh3lCth8u55HcJs35Vng8Gwo2xY
      rLanu0+wDJNhz1vYExsG3Wtd8IOwfDbN1OQk8VS2qF0kuMbU1BRTU1P72q0uzhNPZYEcoWC8
      qF00FCCr6jvC9rILBUMkwmFy3xJfMBA80PWG11eJJTME/EvEEpl978sm+6crhMbczH18y2v7
      pnvQ/IVCmwvMI8Eg6j52q0sLTE9PMzo8Tn6/6w348S37Cayu7mv3gHgwRO4Q4jto/pZ88+Q1
      wfz9GVSewTyAb3qMmwOjCGHA5bAWtTMYDJjNZsxmy65F7Q+TSOWJh1aYX5wnHEoUtfNUVDLW
      f4uxyaktwezN+uoKc5PTLPmXCO4Tn3/Zt0OgxbA5yhi+8TULwTjWfXx4REPrTE9PMz09RSxR
      3NnNzOQk9a0dVNjz+464zU1PbuVvBq2oFTgs8MVnnxJMqvu2h2tqazEAZR73vnaBUAxDKkIc
      E/utKHlQYCcnprf8QDxefAfNX5nDzqcfvkfeaMXAU9slcpuWrhPUNSeZm18knsoWFYHBYEQA
      CvpmW5q9fQ01tTRht9vJpoIsa8Vbc+HgOq09Z6hwF99ZBqC6phLR0ITNYsJWVdztWHNbJ26P
      m0Q0xH5tSJPZRHvvaVxOG+l0FlsREYRDIezlVTTVOVlaLO7vz2azsTg3A6g4y11F7bpPnMLt
      cRMPhih+9yAU2eCNt37Kmm8BleIFYmxkBGuZGz2TQd8nvjKbmUQ6iyERR6O6qJ3VaiWvWGnt
      dLK359ZHi++g+bM5nLzxozdhy9PqU68BoqF1FnxLLPrmSGaKe3jO5bJoqoqqart8DD1MNhVn
      enoa37K/qA2AQVEI+JcYHx1gJVD8yV5RVUMyskZf311iyeJP9o3wGhNT04xN+/atyRZm5zCS
      YXBkDperuKB0zHjsRiYnJ0mkckXtmto66OrqoqurmUS0uFBSieiBnrAGBWanp1hd21/I3ooK
      8joc6+ooWrgAMnkNi0EQCYX3rXkO+mTf2NggthFnIxJhv9XplVVVCKGj6/t3aaPhIEu+Oa5c
      vfVsmkCZVIK19SDdJ87icRYvOCajCUVRCK4H9t1kw2gwYLbZUTQTdQ2VRe3Y2qzDZLJgNhf/
      CQMrPpYDMXpOnKHSXbzANrZ2YDcbMBvZtwlkt9uJp7I47WbSmeJFsaGhhkQ6h9tdS3NL8evY
      biqtUN1Q3Gu3rusIISivqcZW1IqtTUyMWO3WfQtDKBhBj4SZ86/vWxCNaOSMdhrrij+tYevJ
      roKaiO8rlHw+j5rPQy5P8ccClLm8NDQ00NPTuW+6G9Ew0USe8+dPY+IZCMBdWcvZs2fwlpeh
      qftcurL5J9j8kYqxuh7GGI9S1dnA0kJxP6YWWxktjXXomCh3Fi8SNoeTmupKImuLBCLJonaJ
      WJhUVsViNbO6Wrz2sTtsCFXQ2XsCl6N4ZW8yWxBqlpWVFfLat3jiEDoLczNk8vu4SzSaMJnN
      WG22om7VAeqbWunqOkZ7Q/2+BdHjdqI7bBjy+1mxmZ6WI5ndZ+8iwGA0oBgMiG95Yh87foKT
      x4/haWxkv8br/Mx9xkbG8H+LQOsbGrCaFTJb+XvqfYBsOsnKWhBdF3R273au9QAhBLqmU1FZ
      uWeP/gGVXheBUJT0vJ+auuKuuZaWlqh2ldPaUcP8QpCezr0n7DSMdLY3MzY2hctZ3LHu6lqY
      473H0dPrzK4Vz9/6WghvtYOJoXHOXugt2gdYW5pjzh+jvqYS4z413kFrUIPRgCIEmqbt27RZ
      XVogkc4RWwvR+1pl0fZ4U3snjQLuj46Rb66nWMoNzW37pPbodstLS7hc5VhyadJAsV+ku/c4
      qqbDvnKHxZUg5y9c4P7oGCoNT24eoBjR0Dq+hSXMLhdNja37PhUBRD7GvF+jvfnxNsXeCK+z
      tB5Gz+fpOH4Sh3nvQjY5Po6i52lsb2TJr9PTsbdQ8pkEM/NLYDDT3dWJoch9z2UzZHObTR+b
      3YHZ9HiOgw8a39L8LOn8Zve341va7Y+CqqoYTaZvKWaHx+riPBupLHlh4NTxx3fVPzU+gmKy
      ko6n6L5w9ukL4HlHy6UJRFNUumzoZgfWffYskxx9pAAkJY1cECMpaaQAJCWNFICkpJECkJQ0
      UgCSkkYKQFLSSAFIShopAElJIwUgKWmkACQljRSApKSRApCUNFIAkpJGCkBS0nyrAEKh0IHC
      JJKjyA4B5JJhPv74c+723WVwZBKAmzdv7TpprzCJ5CiyY4Hqla+v8vrP/oyyb6yCUtMxLt8Y
      wGIUHL/wKtlUjP7+PkKxND958wfcuX4FHYXq5h46m2uQSI4KO2qAeE6nzKQwf3+cf/gvvy6E
      37p8lfOv/5DXXn+VW1evYHW4uXDhIk2WBFOz0/RNrmO2Orhx7fJTvwCJ5HHYUQOcbqticMbP
      uWO91E7OFcJdZRZi8QxOWxKT1Yma3vInmVLpdJXR2NTMxYsXOXPmzNPNvUTymOxaEzw+PEAq
      p2F3VXCiu4OpqWm6uzoYuHuHrG7i4qWLzE+NspHM4CivprerlcnRQeJplcraRtqb65/VtUgk
      j4xcFC8paeQ8gKSkkQKQlDRHSgD7eYmWSL4LR0oA+fx+jr4lkkfnSAlAIjlspAAkJY0UgKSk
      2TETnM0+37u8q+r+my5IJI/KDgFYrcU3XHheOAp5lDzfZLNZYrEYNptNNoEkpUcul9vac1lI
      AUiOLrnc7m3zhBCoqsp+b/jYbDacTieKojz9PcIkksPCYtm5vVYulyMajSKEwGQybW20bsZi
      sWAwGNA0jVwuh81mw2g0oijK0XoZLpvNyj6ApMDD5SGfzxONRncMlDzYXVTX9c3N1LPZzWaP
      wYCiKLIPIDnahMNhUqlU4Yn/zd1EdV1H0zQ0TSOTyRSaRQ/2UE4mk7IJJDm62Gw2NjY2EEKg
      KMqOAl6MBzWA0+kklUpJAUiOLh6Ph1wuh8ViQdM2N/Deby5LURSMRiOqqrKxsSE7wZKjjaIo
      WK3WwlM9mUwWagGDwbBjJEgIUWj6PPgOz2CneInksFEUBU3T0HW90PE1mUyYTCZ0XS8Mlz4Q
      wcPnyVEgyfcCIQSappFMJslms1RUVBQ6xZqmEQwGUVUVg8FQsJcTYZLvDQ/a91arFbfbXRjq
      VBQFk8lERUVFofA/fI4UgOR7wYPmjdVqxWq17irsFosFj8dTsH2AFIDke8OD2d1iWK1WXC5X
      wUbWAJLvDfsV/AcYjUZsNhsmk6kwQSZHgSQlhdlsxuFwFF6ZkDWApOQwmbaf+1IAkpLjwVyA
      7ANIShKz2VzoM0gBSEqOB/0AkK9CSEqU8vJyORMsKV0URcHlckkBSEoXo9G4RxMoHWIx5UBJ
      BfFWeCkrcwKQ3/CzYa6j0v6oyeQIBbOEAvNgLcfrMBGKbtDQ0snyzBgOby2tTXJTDcmzYbcA
      tBxTU4tY9AzpTAq7yUg07MdaXkMotUG43EZXe8sjJJEjHEoQjUUx2gDNSldHK3PLa5hsdpRU
      giwg3/GUHBYPVogdhD2bQE1tx6irrgBAFwIFgQBaO7sxG77b29O19c2YjaDnM9y63UdVzeZu
      kul8DuO3nCuRPAoHLfxwgC2S4pEgvsVlWo6fxmX5Ll0GjVRKJeD3YXZW4HHacTgcxONxQusr
      eGtbcDsP1q6S6wEkh41cECMpaXY/0rUsiYzciEJSGuzuBOcSRGIqkysBKqsryGwE8VZWshaI
      4amoJBZYJKcp2MvceJ1mgrEMrS0NlLtczyD7EsnjsUcNkCOVzVBZ34aiJcHoxKql8Ta0ko7H
      KPdWUe5yUWYzszA/jxA6Tln4JUeU3X0ALUsqLzAoZhB5UvEoRrubRHiNyvpm0PLour655EzL
      sRZJUuF24noKIpB9AMlhIzvBkpLmkcY1dTXHzOwcmhAsL8wyu7CM0PLMzs6RjMeYnplD04+M
      niSS3Z1gLRVlfGGd2tpa4sEV7J5ashtBVKOdfCpGx7FOJidncNjNdLQ2MjE2Qn2/FHQAAAuT
      SURBVPuxLhZnfTR1NjM5Nc2J493P4lokkkdmtwDSUSqbu0muDpI11ZELB7DbbJjRUR8sIlAU
      QmurYDCjPOR+4oFvFonkqLCrD6DnM+QNNkQ+w0YkiN1Tg1nZXEJmMRmY8y3T1t6G3zdHFivt
      TTXMzS9RW1PBynqYjo42jI8wFf0oyD6A5LCRnWBJSSPXA0hKGikASUkjBSApaaQAJCWNFICk
      pJECkJQ0UgCSkkYKQFLSSAFIShopAElJIwUgKWmeqHPc/Xbt/i482NVDInkchBCoqlrENeIh
      8iReXJMvw0kel0wmQyqV2txN8llnRiJ52uTzecxm8+ba9medGYnku5LL5XaF5fN50ul0YRuk
      byKEoKysDJfLhdlslhtkSI4uFotlx/d0Ok0sFgO2VyeazWYsFgtWq5VMJkMul8Nu33TFabVa
      5YIYydElHo/jdDpRFIV8Pk8oFNqxC/wDJ7mapmE2m9E0rXDMYDBgNBplE0hydEkkEsRiMVRV
      xWQyFfb9EkIghChshq3r+o7CD5tbpaqqKgUgObqUl5eTzWZRVZVkMkk6nS4U/r0aNoqiFPYO
      MJvNGAwG2QSSHG00TUNRFBRFIZfL7WgGPSjwuq5jNBoL/YIH80mKoshOsORo88ANj6qqRCKR
      QrjhG+56gF0jQ1IAku8NiqJgsVjIZDIYDAZsNhsWiwVd10mn0+TzeRRF2SECTdNkE0jy/UHX
      dbLZLMlkEo/Hg8m0+XwXQhAOh0mn0xiNxh19BNkJlnyvUBQFr9e7w0OhoigFQei6vqOD/OQF
      kA7RNz7P4tLidlguTjC+exZPIvmuPCjUVqu10OF9GKPRiMfj2eW688n3AbQc+UyGgA56dopE
      MoHFaMSXtPDWi71PPHlJafBgJGg/rFYr5eXlRKPRwnDoU2kC1bW0sra4UPheXlmNVTa+JE8Z
      RVGwWq2FF+FkJ1hSkqTT6cKQqXwOS0qOh5tKT00A0VAIrcixbCpJXssxNT1HMpnYcSwejRY9
      TyL5LjyYC3gqE2HZeISpRT9mYcBot7A8N4fTVUEkmaTa7SIST1HpsKEbEizFwGGPEAmuE8vo
      eOxGfL41Lr72MnLbDclhYbVaMRgMCCGefA0QC0doaG3DZFAIrK+RScUIJvKY1CRp3YiajBKJ
      pXG63TQ2NpFOp5ifn0foOqlsnvqayiedRUmJYTQaC7uaPoVOsGBpYQF3ZQ1WM6wFwng9XtYD
      QZobaljyh2iorsBkNZJVTaBlEWqWSDJPpctKIJKiqbkeA7ITLDlcEonETgEctheHw8ZoNBam
      tyWSx0UIcbSGQSWSw0YOg0pKGikASUkjBSApaaQAJCXNLgH45ye5PTx1iEnohEKRokdXZsdY
      iWQOMb1iJLh5Y/jA1rlkjHj62fkivXfzK2ZWo0yODjEycR+AqclJ9H2GLK5f/iP355cASMcj
      JHN7O4cKhUJ7ht+8cfMxcix4750/oO6ZP8Hw8AgAairM5OzqY6RzuOwSwJ17kyzPjBW+L8/f
      Z2ZhZddn3+wkS/4gAJH1FYaGx8hrglQ8wsDAEKlsHgD/0n1+/ZvfMTo5CwjmpsdZXtv+AbzV
      9bjLLIRCIRbnplkJRPDNTrEaiICaZnl5haHhcXQB8UiITD7LvG8ZXc1yb2iQeDpHLBQgqwEI
      gsEgej7D0OAQqdxmAQ6vL3NvdIxgeGMzv8EAqoBo0E8smSOf3iCWzBFY8TF4bxRVFwxe+ZD3
      vriGbyWAruYYHhokkcmjpuPEkhnm5ua3rkAwOznKrG/zvqQ2wgwNj6HqglgoQE5n65zNBduJ
      aJBAJE4yFmJoK614ZJ2R8Wm2y47KrD9BZ4WKL6QRXV4gkQqxEkpieOiN32xqg8GhYXKqzopv
      loHh7d/t9ufv8MnXt1jyh3bcq5B/id/8+jcMjU4itDxjw0P4VtYBCIXDhfNDoRBz0+P4g1EA
      0okoQ/dGyOuCdDzCysoK49NzD5UchTcudXLl7v09ipnCxuosS+E0X37xNfWNteQziULeha4x
      MXKP+SV/Ie1ocJVIPL1HXIfLTgHoWfKakTq7wlIsx3jfNSK6A6/LuuPz6J0rZC1VrI7fZjGS
      4curN+ntaiGZzPDpZ19y+nQv6WQSgLqmFtrbOzjZ08HdK1+glNcTmR1ganWzMPqn+lkI5/j6
      j59i99Zz5bP3cFQ0cPv6FUj4+eTWJF0tVXzwyZdM9d/gH3/7Dqm8zkcffMix4yf48pOP0LMB
      rvVPsbE8xthinE8++ZSe3h4+/ehjokvj3JkO0nustVDAkqsTDM6G6e+/xe3bfQzcuEZWMaKb
      bPQea+CTz76mpaWFnpNnaWmo5rNPPqbzeC+fffwxCf8U/+kf/pHVSAqA1bEbrOmVuOxmRD7O
      R1/e4XhnEx9/+gUjNy8TzkHCP8XIQpivPnmX9z+7jJaN8unlAXq7W0lE1vjq1gStNQ4+//o2
      AGn/FGX1PWCyY1Cz5DSN4aFJDPkYV2/e3bwIkefDj77kxPFOPvr4UxpaOmhrb+dYWxMALS0t
      HD99nqa6yh33ylPXRFt7O2dP9pBKJGjp6sU3dI3AN8ra13/8FE9dGyPXPyeUTPHRZ9fo7W7j
      448/wz/Vz+R6jiprhi9vbteq7saTxFfH2ItX3/oZl9/9f1FdjZRbFT759At6ezr46ONPySTj
      NHT0EJi8w9KGyifv/pbPLt/+zoX6UdghAN/wLZKYwGLh+rVbzPmjnOxooKKicsfnWd8qsbV5
      dEsZWjZLV1sTfX0DRBNpTp/o4vadPtZC0V2JrW3kaKv1cOJkNzP3fTuOWR1uqjxOnO4qqjzO
      woRXbW0tDnc1Bm2zwP3s7b/gRGczmKw4rBaq7WZEzQlSa1PcurfAy+fa8a8uMzoyisvjZXp8
      jvOXzmK2WgvvEzWdfIHV8bsYrV4MeopwTqHalOTa9VsMj83ueiHP719lfGSEMrcHgEuv/4xX
      L5wAoObYWdTAJCOjEyRDK5Q3HMPqKEfRdq94M9i9/M1f/QpHLkhVey8WmxMlsUIwnmZq3o/H
      venYKRmPYysrA2MZ5040U1lRToXLQsbagJaIkAXIRbCWN2CxOjAr3/K64EP3KvZQq252eoKh
      wQHW15ZJfGMO1Opw43XZ6W6pZNm3gLWqFYvNiUFsRlBbV0d1Sw+p0NJDZyno+mZecskYfX19
      hae4YrRR6a7kjTdeBHKsLvsZGZ3A4/Uyf3+KoaEB1tb8bKRU7N5a/upXv8Trsu9/XYfADgEM
      LUT5u3/2c1558xeYs0FeONnJZ19d4e7Q6I7PF073sB5NYrDYcZcpZLICk0lhbW2ddCaDxWRi
      fW1tK1YrWibExMwCve11fHn1Bp9fGeKF8z0HyqBvdoob176mtrkLMGCxbArDW2bm1u07hLFR
      YYJKu5GosGBRoL21mbym4/V66T13gqsff8zA4AiF395gJxMYwVl/HIchT9ZgQ2h5slkVRQGE
      wNvQyuzQTZbXwnS0tZBTNbxeL7DTJ2U8FsNqc5CKBlC9HeRXR7lz6yblVfXUNzUweOsmI5Mz
      hfMUoLzpJPG5fu7euY3u7qBcSSCEoGIr/ormTiLLswBU1tayvL5Bz4lT5APTxFUFC4C1GnN+
      lTt3bmErr9p132pa2hm/e5XVQHTXvTJoGUYmZsikU6DsPQ6STW3Q33+XAV+a3uPdGGOz3Ll9
      E6e3BoCp0SG+/vwTus68yNTQLSIZEGoCxVy+ea1lbi5evLijEJusNoyGzTLR2lyDpgu83goy
      mc18KFt19Dd9fj5RxPNMZFa8f3X0WefimfDu738v8vqzS//99z8oemz27udidDW9K/zOVx8J
      X3h3+PPM8/0qhJomlNSpdJc965w8ddJRP2sZG211nmeSfigUorJy7zdx0/EIutVNmeXh2kMw
      MTHF8eMHq9mfF55vAUgkTxg5ESYpaaQAJCWNFICkpJECkJQ0UgCSkkYKQFLS/HcdL9nWwNew
      ngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Bar (4)' width='192'>
      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
      Osdffza4nra3pZJo5s6Gw1N+2Pq7XJm8zN/d/Ov1tH/zzh+imz/HRP9/X0/re+9POBuY3GTX
      5jm7qcX7cqmCM9fvh58/evcQOnuYWF2SGCOgA2emjLJ4GMLT+QWQTcSQUOH1zkLf5h98IpFV
      yi1OVmMpTKwtidR/zSWR0pZ5VZvT5O3m3Wy3Vdq267JFuVumbXG9yPKG1W357La8V1vklZSN
      dtLdI2o35pVQPZwmbbaTZBkZ1SPtZEnaOu8W5W4nbft5t1/G4kp0Q8sTTaSIqqa4HPhyPa3W
      1IhtZRq198tHzwa12bb6tSdHW+c+IitBsrksqVwWzd1jUvMtiXw4baslkZpt5lWrt5t3s91W
      aduuyxblbpm21fVu99q2mffhNI1ajXqTnWZzmmaz3ZZ5t7BTazb723a5W6RtP+/Oy3hUuXlb
      gLNnvyS0EkFj3Sr+12K3a9m7b2++7ALBC0HeFuClw90sxRTM+hd2yYBA8EjytgCGshq+e+IY
      /tXE06yPQPBUySuACxcukpK1WAusohIIXnTyxjdqtQoUUJQCE1kEghecvC3A0VdOotOJbRQE
      32zytgDi4ReUAmKIR1DSCAEIShohAEFJIwQgKGmEAAQljRCAoKQRAhCUNEIAgpJGCEBQ0ggB
      CEqary2AsaHbXL02gPRoU4HguUOlKEqBjfYezdTkFBbA0tqCSZZJZOIsZ9bWZOYkCZepHLvK
      Rm41vr70UNKpkY1GQokcOSmHVqPFYlBjkDNkE2sbcUmShNFqR6OoSE1O3V+26HKid5chJ71I
      koRGo0GtryCJkZVsYEO5GsXMuH8RjXZtzl+5yUylxUI0soqUy6HRajGZzChaPZG0cjdvjjKz
      HrMkEZv1r5ersZtR2/SsLMwiSTk0Gi1WZzlGgxbVyvh6nXXORlTmqk3XqzWoILa4XmeMDuI5
      LUv+tZ0UpJxEhduN3WjcdL2GCsemvCnJQHwpQk6S0Go02GuckPSjji/er0v1HlSKkVw8ue5P
      NulIJ7MkQ7ENeVWShCYrr+fVlllIZdLEopH1+2e2WJFS0qa8iViI5N0DRiQph7uhhXBKwReM
      rJfbWGkHfYpIJrye122sJhQLEUotr5fbWtGOKrNKLDy7ntfsaCcmZwjEltbvQZOzBV18ZdP1
      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
      8Z0UIRA8Ff4/1Lb4Hmh42PkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Bar (5)' width='192'>
      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
      XMjtXZZ1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Map (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WWxdd5rg9zvLPXffuZOiSFGi9sWiNrflpapcVd2uqq5U0gnSyMwgmUk/
      TAEB5mWALEDQL8lbgOQhGKARJEA30lM96MZ0umxX2WVbsmzLsiRSsrWTkriJO+++nnvPkoer
      c3QvN5GSaFHS+QEEec892738f+f/ff9vE0zTNHFweEURn/cNODg8TxwBcHilcQTA4ZXGEQCH
      VxpHABxeaZYJQDGb4srQEOl8GYDh4ZFlB620zcHhRaRBAJJTw3x59R6HjhwmtTAHwMjI8sG+
      0jYHhxcRuf7F15dv8dNf/pLJu7co6m57e2b2Pl99N05IqdK84zXUYoahoUFGRyf5xa9+xme/
      +4hINIzoa+bEkT3f+4dwcHhSGmYAExCAnp17Gbt7294+NHSLd378A06/8y53r1/G7Qtz9OgA
      R7b5uX3zNuNpA5fbR2Jh5nu+fQeHp6NBAF4/upuPzl7CMHRKpbK9va+nleu3xpgZvUmsvQ9N
      q6DpGrensvT1dRPxSBw5fJADe3d/7x/AweFpEJaGQuTTiwzfn2Tn7r2E/B4SiQTxeJyZyVEK
      usLOnk4yqUXGxifp2bWPsN9NPr3IyNgUe/cdwKNIz+uzODhsmGUC4ODwKuH4ARxeaRwBcHil
      eaEEQNO0530LDi8ZL5QA6Lr+vG/B4SXjhRIAB4dnjSMADq80jgA4vNI0xAKpqvq87mNdOEbw
      i4f1P5NlecX3TdNEEIR1n2ctJEla17nqabgrt9u92n5bhhfhHh1qmKZJPp/HNE0CgQButxtN
      0xAEgVKphCiKaJqG2+3GMAwMw8Dlci37H5umSalUwjCMVa8liiKKouByuTZ0jyuLpYPDM8A0
      TXRdx+fzUSgUKJVKSJKE1+vFNE00TcPv91MoFIDaKp+u67hcLkTxkXa+nqe6JEkbHvzg2AAO
      66BSqbA0YsYwDIrFItVqddXjBEEgGo3i8XiQJAnDMKhWq2iaRiAQwOVyoWkakiRRrVbRdZ1K
      pUI2m12m8vh8vlUFwRK0jUT1GIZBpVJxZgCHx6MoSsNr0zRJJpP2IBVFEZfLhSzL+Hw+DMOg
      XK5FE7tcLvvHGqSFQgFFUTBNk0qlQiAQwDRNRFHENE1UVSWXyxGJROxBr+s6giCsOMgFQVi3
      amxdv1gsoqqqIwAOj6dUKtkDHCCTyTQ8+XVdxzAMW80xDMMeqIIgIIoiXq8Xj8eDYRj2QLee
      +KVSCdM0kWUZQRDQNA3DMNB13b6moigUi8Vls4AkSbjdbtxu92NVJdM0KRaLJBIJDMNAkiRH
      ABwej6ZpZLNZQqEQHo8Hv99PpVJpUFMsI3apt94SgEKhgCAI9lO8/rWqqpimidfrRRRF3G43
      xWKRbDZLMBjE5XLZqlO9ni+KIqFQqGFmeNyqkjX7VKtVJElybACHx+PxeOwnsGEYpFIp+ylv
      /SzFGpSyLCPLcsMAtaj/2+fzIcsyuq5TLpcxTbNB73e5XEjSo1wTt9ttD36oLeGnUin76b4S
      lUrFPnckEnEEwGF9uFwuIpEIkUgEURSJxWINOrf1JAcaBEIURcrl8oqqi7WfYRj4/X40TbOf
      ytbAr1artgokSVKDL8Hn8zWsFCmKgiiK+P3+FWcAS3BFUbTPYxiGIwAO60MQBNvRZOn6UBvk
      1oCr/7teFRIEAUVR7Jmg/skfDAZRFAW/348sy7ZqFQwG8Xq9Dffg8/kwTRNFUZYNclEUCYfD
      eL1ee/apn3Usu0WSJGKxmH3/jg3gsCFM07TVEWvN3jJEVVVFVVVbBbGEwDAMSqUSlUrFdlhB
      bdB6PJ6GGaRSqaCqKn6/H7fb3aDTu1wuAoHAuvwC9TMS0GC0a5pmG+SOADhsCEEQbH3dMigt
      lcXn81Eul0kkErZ6YgmDteoCjwaltQq0dAnTEphyuWx7kK1rb2S5s1wu2wJm+R1UVcXlcmGa
      JvPz844K5LBxrAHs9/ttlcPC4/EQDofRNG3ZUqgkSQ2GLEAqlSKdTttGtTU4q9WqvUT6pBSL
      RXsWsmYqS1hTqVTN9/DEZ3d4JbF0a5fLZRueS/H5fAQCgYZjLCGwhMVSeyyP8tzcHNVqlWw2
      23CuUqlkD9aNkEql8Hg8FItFANvTbJomqVTKNrAdFchhQ9Tr62vtEw6HqVarVKtV+5h6Fcg0
      TTs8wnptxQRZry1jtlKpNKhQ68Hj8QC15dFCoUAikUBRFFRVtdUi0zRfrLIoqqo60aAvEMVi
      kVQqZYcxWAPYGnzW4FcUZVksj2Uge71eqtWqvcS5EXRdR1VVstksqqrahrthGLY94ahADpuG
      z+ez44As9ad+NrD0clmWlzm6yuWyPXt4vd4NPf0tBEEgl8tRLBbt1aXxySnyhQKiKNYE61l+
      YAeHpdTr/Cu9Zw1sSyAEQUDXdUKhkB0aIUmSrdKsF03T0DQNWZbx+/2Ew2FCoRC3bt1ibm7B
      VqkcFchhU5mbm7NVIHik31u5AT6fz7YF6lUiK1ThSUkmkySTSWRZpqWlBUVRbIM7lUrZvgvH
      CHbYVLxeL/l8HmDZsqhlC1hLplZGWDQaXXF1aaNY3mSv11tzeskyXq+XYDBIPp93ZgCHzccw
      DBYXF5eFRsDy1R6o2Q2RSOSpr2uaJtls1vYpWAFwlpplxys99ZUcHNZAFEWam5sRRRFd16lW
      qw35AhaWsRsOh5/JdS3jt1wu27NNPp+nUqmg6zqlUqnmC3gmV3NwWAPLL1AoFFBV1U6MDwaD
      eDweZFm2UxQ3WtVhJSwPspVqWS6X7dWoel+DIwAO3xtWYJthGHYijdfrfeYqra7rZDIZ4FHQ
      W30Sfj2FQmEFAcjPcCcXRMxNE4lFiUfCjE1M0uwXGc266NvWht+zEbkp8WCySHLxPqYrQNQv
      U1Q1os0dPLh3A2+klX39fU/zmR1eAARBwOPx4Ha7GR8fb8gOq1QqdqaXqqorhjuvl0KhYBvT
      VnqlJEm2ylUul2uJMA8dbSuO5Adjd1GMMggmuVSKlrDMdKaKP9zC7PQkfTt6N3BLOqVihbJa
      xtRliqKEKLvRtCqhaBw/JkXA90Qf1+F5Ur+qsx6sQd/c3Ew+nyeXyyHLMqqq0tzcbHuEVVW1
      E+03XOiqLgPNykirVCq2sw1qgXGVSmUVAZAU+vt3IxQXQQBFNBmfHMcd304k6Kdqepcdsl4M
      00R0eQh5FTRgbvoBgVg77U98RofnyZM+pQOBAH6/n2q1antpFxYWaG5uXjFidCPkcjlKpZKd
      9WV5k+uD4axwiHXFAuVSizyYTbBz925cz3nNyFkGfTmxIjSt5c90Oo0syyiKwsLCAl1dXesW
      tkKhwNzcnF15wvIs+/1+O0fA7Xbb8UWOH8BhS6Drul19wqopJIoihmEQiURsj/F6yGazLCws
      2Ia3ZQNY5Vbqz7NcAHSVfFUk4Nl4mbnNxhGAlxvTNJmcnLTX6i2d3YrebG9vx+dbn7VopV9a
      XudsNsv4+AQ+36P4ItM0V7ABSkmmEhUWZ9LE435KmTQtTRFmsxWCfh+ZxQeoVfAFo4hqinsz
      Od794WnCweAz/TIcXg3qc35VVW3IM7YqOFjFtHK5nF036HEq0dJqdm63G/3h09/6WVkAHtK5
      vQ9BnadsJ0DUJoqWti4qagVFcVPKaxw80OW4kx2emPqBXO8Is1ZwADsuSNM0EomEnY0WDAbX
      rRa53W462tsoFouPUYG2MI4K9HKj6zrz8/O1mp0PB3+9gCzNRgsEAgQ3oHlomsb09LQ9o4ii
      6Dy8HbYOkiTZy6OlUglN0xqC6PL5vG0gW/tu9PxWSISVrrmhUIh8apHJ2QU6unewOHUfwR2i
      NeplcnqeaCRCMp2mvbOHSHBjyQsODhaBQABd18nn83YDDWslp/5p7/F4NhwyXV+zSJbllYvj
      VrOzXJvI0hzzk1lM4A3HqOaS6LIXCZ29e/dw5/Yd8tkM8fYwkzPz7Nmzh7HhEfr27GFsZIRI
      cNdTfg0OryqiKBKJROxiuPXhDPU8UTOMuqrUljNsmQiZ1TLtPf3ohQWkQAvVUgFvIEzAo2Dq
      GqpaRkcm3tpOz7YO0DXUiopmgKGp6Kt3sXFwWBdWKUVrOdQKpbZsAL/fv+EUScAuwWjHAcny
      ciPYqJapih7MaplsahFvpAWXUBvViiwyOjFFT28PsxOjqLjp7WphdOwBrS0xpueT7NjRg/QM
      QlpXwjGCXx0SiYRdDsVKaFEUhba2tqcKlcjn8yQSiUe1Tp1VIIethmmaTE9P244sSxXyeDzE
      YrGnyhnQNI2pqSn7nE4+gMOWw2qTZDnFLJWovmXSk2K1ccrn87Wyjs4M4LDVKJVKLC4u2is1
      G3V6PY76Ie/MAA5bjnqPsMvlwu/3P7PBD43ONUcAHLYcmqbZcUChUOiZDv6lOJ5ghy2Hlc31
      pCURN4IjAA5bCitHWBCEJ3J2bRRHABy2FFblCCsjbLNxBMBhS2GVLa+vGrG09/CzxBEAhy2F
      VUTLMAxUVW2oIF3Pav2JN3w9xw/gsBXZaMmVJ8VZBnXYkmz2wLfYVAFQVfWZnm9paTuHrY/1
      P6vv8l5PfU7wahSLRaYTBRDWWBI1NaI+iXg8vqH721QB2Ax1xVGBXhxM07QT2aH2v7OcXOVy
      2R74Vu8uXddxu93LOsQrisL/9te/J2uGVr5OpYi0+B3/9t/8esPjwzGCHR7Lkxqc1jFut5tS
      qUQmk7ENW0sofD6fHfdvdXCxwp8tBEFAKyRBr654HXQVOdRGa0vzhu/REQCHx7KS6qlpGplM
      hkKhsGzA1hOPx/F6vXZrUk3TUFXVju+xFjbqSxfmcjkqlUrDOd98bSeUEitew8yMEfXC/PzC
      uj6P5WxbuTq0g8MSZFlu0NN1XWdxcXFZyyNRFAkGg2iaZqs4sizb6/pWdpc16K1S6aFQyK7U
      YJomxWKRYrHY6AiT3UQ8BukV7k9s3s+OvgAdHY+vMmsYBqlUClVVnf4ADuujUCggSZKtm+dy
      uYans+Wssppf1L+nqirFYhG3243P57OFwGqKp2kahUIBXdfx+XyYponb7bbbmlqpj71dbXxy
      cbjRajVNdkXKnDi8m5NHDz72c5imST6ft6/ncrkcAXBYH+l0GlVVCYVCeDweNE2z1RTLY1tv
      K1i/FUVBlmVKpRKVSqXhnNbMUalU7EpwkiTZKpc1i7jdbhbSBTRfB9Y8ZGoVWv06v/4Xv7K7
      TAINJRWXYglAfcEtxwZweCxer5dQKGSrQblcrqGz+0r9viRJQhAEO6d36VJnfQU4K/TZUo8s
      QfF4PPZg3t/fC/np2sF6hfcOh/m3//IXtpe4Wq2SSCRIp9O2MCylXC7bYRVW3zJHABwei1WE
      yhKCaDTasK5fX7Gtvv6+VZffeqLXC0H9bGHF/FvLoNZ1rCVTgHgsSk9nKwCKUOXU8aMNS56K
      ohAIBOwWq0uFslqtkkql7IoQpVJp5bIoDg6rYQ30fD5vOzkt49cyeK2/6ztBmqZpF7Ja2iHS
      aohtlSmxOseEw+EGf4AgCPzs9AFQM3TFfUSXtFK1ukxagjk7O2v3CjNNk0wmYxvaVt0hcEIh
      HDaIlahilRa01BSPx4OqquRyOfvpb6kipmmSTqftJ7olDJbqA49mBysIzurkbgkUwO5dO/gf
      /oWPheRKa0GNtLe3r+q/KJfLdglGJxjO4Ymw1uuX1ujUdZ2FhYVlQlBPvcoUDAbx+/0N9kWh
      ULD3sbq9P+n9BQIB29C2VqSam5spFoskEglHBXLYOFaPXb/fv6xhhSRJdjizNfjXivWxurmU
      y+UGlckwDHRdp1gsrmrUroXVccYyeq3ZIBSqhVOkUqmakDozgMNGWE+YshXSkM1mG/a3liut
      YrdAQ7JLLBYjnU4v8zHIskxTU9OGiuEuLi7i8/lQVZVIJGJ7ly3BtEqwOzOAw4ZYWqN/JURR
      xO/3N7Q5rQ98s9qYLl0Vshxs1gxg7WPtvxGslSRBEEin06RSKSqVCsVi0T6vswrksGkIgkAk
      ErEHs7Ucav02DINKpYKmaXYBLOsJbfkGvF4vLS0t9urQRlAUBUVR7CpzgF1g1+o94JRGdNhU
      rFZG1oC3nsjWj9Wnq94LbAmBFTVaLpcJBoNPlBdsqVxWhKkVdOdyuezVJ0cAHDaVehtgqbPM
      8hbXrxZZr1taWlAUxVajVkuoWY1SqWQbwm63m3g8bi/bzs/P2387AuCw6dTHC1mv8/m83fWl
      voO7IAiEQiF8Pt+GO8DUUyqVSKVSKIpCe3stStRSf+LxuN0szxEAh00lEAjYHlkLy0iu9xhb
      v61CuE+bE+xyuWxBssIqrFpDVhtWRwAcNh2v10ulUqFUKjWsCFkrO0szv7xe7zNJiPf7/XbS
      Sz6ft8utWJ5ly3m3+atApQSDt8aYfDD5aFslx2KusvoxDi8N1sBzuVwNq0H1zi3LCA4GgwQC
      AXv70xRBsNIvDcOwI0qtbaqqks1mKZVK38MMoFeolsssGGCow+QLeRRJYqKg8KMTezf98g7P
      H0uvLxQKdhSmruvEYrGGJ34+n2d2do62tlrU50YNX4tisUipVLL7jGWzWTsvoVKp2HkMqVTq
      +/EDtHVvZ25y3H4dijfjdjwQrxQulwufz4ff76dUKlGtVu0nvyUAHo+HL7/8gmQy+cTXqVar
      5HI5XC4XqqqiKAqhUAi3222vCllql9MjzOGpeJLqbaZpMjs7i2EYNDc343K5KBQK+Hw+SqUS
      pmkyNjZGf3//ExXHzWazlMtlZFlepkJZfYetFSknFsjhqXjS8oWVSoV8Pt8wQJubm+18Yesp
      PTExQW9v74ZUoVwuR6lUsluryrJcS35/mKtgOcKs39+bAKQTCYLxOCvV9lKLBUS3i9H7U3R2
      NOP3PzKEcuk0vkgECUcAXjasMIVMJoOu67S3t9tP53K5jNfrxTRNNE1bd6+Aubk58vl8QxyS
      VW7dOrclAIqibL4RrOZSDE/O4jJFJK/C1OgogWCMVKFAczhIKlck7vNgiHkeZMDnTZFanCdT
      Noh4JSYm5hg4fWpFwXF4sbFan7rdbrLZrJ2llUgk7Ce35TNYL7FYjEqlYh9rrTZZZVisGkZW
      HaJNN0UzyRQd23uQRYGF+TnKxQyL+SqyVqBkSGiFNKlMiUA4TGdnF6VSkbGxMUzDoKhWaW/Z
      WK1HhxcPa5VIkiQSiQTlcplcLkc2m2VxcZFEImFHcT4Ol8tFc3OznVHm9/uJRCINg98Kw9A0
      7ftQgUwejI8TjrfgdsHcQpJoJMr8wiLbOlp4MJugozmG7JZQNRl0FVNTSRWqxINuFlJFura1
      I+KoQC87hmEwNTWFruv2bOByuexUyqamJjuh5XEstU8Mw2B8fNwe/JZK5BjBDs+V+ryAYrHI
      7OxsQ4vUegPb8uBaZRU3YnxbwmWFRFiVI5xQCIfnytKSi/XJL0sHuGmaFAoFO5AtHA6v+4Eo
      iiKBQIBUKmUbw4IgOAkxDs8OTdNIpx9fsWE1AoEAHo/HHpxLcwDqQygsp9ZGsATGyhU2TdMR
      AIenx1qqtJ7KT4ql4ui6brdKrS+qZYVQQC3ja2lC/nru02q/amWnOQLg8FRUKhXS6TS3bt2y
      a/88DT6fj7a2NkzzUdEtK5vM4/HY3mFFUTbsgFNVtaFqnVMa0eGpURSFcDjMgQMHUBSFarW6
      rAjuRrBmgc+/vrzsqb/0uhvF7XbbDjXrtyMADk9FfVVon8+HoihPVMdnKemSafcgqFeFFEUh
      Go0+kQBYJd6tPGQnKd7hqamv9wO1EOYnDWO2MAyDcrFAc3OzbV9YNkYsFnuqhBlrlckKr3AE
      wOGZ8DT5u0tJJpPs2NYCPGqgpyhKQwnFJ8XKP7BCIRwBcNhylMsqumHYQW1Wm6X1eoHXQhRF
      OznHqQrhsCW5enuMrrYWAoEAkiShKAqRJeXQn4ZIJGKfzzGCHbYcyVSapmjtaW91p9ksHAFw
      2HLMTY4QCPjtri/P0r5YiiMADlsK0zSZmp61ewk/ixIpa+EIgMOWYn5hAa+/sTzKZuIIgMPW
      wjQJ+1x2pthqbY6eFY4AOGwpmpqayKRT/D9//bf2NkcAHF4ZJEniL/7iL6iUC0xMTNhBa0t5
      VjODkxHmsCWxBvhmrgCB0x/AYYuynlZMz4IGAbBayWxVnjbW3OH7x+r+6PF4GgZ0fWbXemr+
      1HeRXA1FUezme+vlhZoBvF7vpk+JDs8WO/m8LhHdLkv4MDe3fruVBFPPelQhO8Flg+PjhbIB
      HByeNc7j1OGVxhEAh1caRwAcXmkcAXgJWVxcfN638MLQIAB3hr7kt2e/AWDowtcsy+0vpxie
      WABg+Nsh8htclfzgww9qvz/4cMX3U9P3WdjoSVekzMjwxLKtQ0ODy7bN3vyKwdGNFnNa+fxL
      GRkeXvP91b6Hp+H24BcsluDalYucPXOOsg63rlwkXVr9ez3z8YdcvXGn9kLLM3J/esX9hkdW
      /jyffvgB5Yd/b+T7TI8O8tXN2cfu93/9n/8HmXKtMsSFC18vv6/hkYd/aQwNfbuua1s0LIPm
      U1nUEiwWqqSSSQzg7q1rpHJFWrfthIXrfDyUQHznBB5vEFmGxOwkdydmibW0s6vNz7mhu/gk
      jdbefYTlMnfuTSK4PBw7cqDhwndvXqdr9wHcRo474xn27Oziu28+JxHYw4mD/XjNAncnZ2nt
      7KFJKbNQlrl5c5j+3g48gspMyU2b32R2IUnPnkN4tAw37j0gEm8hrGT5+OMhNPEdJLNCUNYZ
      TZo0BWuJFTe+vUy+VKV3z6GGeyqnprl4ewrZqHDg6AlmH4zax26PK0wtJGnr2oFcnbbPv7Mz
      xuC3t/CFYhzat4uRW9dI54o0t7bz8R8+JluqcvRgP0OXB9FlH8ePHiI5M8HdB3PMLj4aKGN3
      b7GYyhFt3UZn0GQqa3Lz5i1+8uYAV68P4482cWB3L99evkypqrPn0ABaZoZ7D+aJt7Szs6cL
      gDsPkvxyoImPb13l5O4YV++MUy7AXu+jf3V6YYrbo1NE4220RRRujIzyZmcfAA/u3+Tjz+9i
      cJre1hBD127jCUTZvb2FP3z8MblsgYMH93D16jV03eDI8ZMrDqy5B2NMziziCUU5sLuT8+eG
      cPskoq299HZGuXzxMuXkOGJP52MHaWtHG+fOfM4v/uSHJJJJStkk1+7cwxBcDOzv4+M/fEwu
      l2XPwdcIBHyAybeDFylVRV47fozRO9cpq1XKhsSpgcPcunaFXLHMtp0HlqtAb7zzDufPnrVf
      d3R2Ikky5z4/Q3d3N7279rCzp4vJkRHKwPmLVzl54jjjN76lXEqzqLo4dvIU313+kmC0ibDf
      zc0LX7C4ZDppjsh8/vV3fPfN13iitRLo3d3d7Dn4Gl1tcS4MXefkiRNcv3KR/MIk//jxV7z9
      9hvcunqROzMFju3v5PrwDCdOneLil2f56vw37D94hD192+no7qa3dxd7d/Ywcm2Q78YSnDy6
      l5GR2pOis7ML2SVz9rOzDfdUTs9AoIPXTw1w9rMzdcf2MXTtLieOn+Da4IWG83925ksGTp6k
      ND3M1OwE9xd1jp84yfbubfT29DJweD8XP/+M7QcG2O4rcfnuAl9eHOLk8eO0NT1K82vv6ESS
      JL449znl9Ax//8EZ3n77LT47d55jJ0+SHL1FVhPo7OrAJWt8dvZrzn9ziYNHjtK33RpEZUyz
      FiriV+DijWnyCw+oFBL8/v3fki7XnE9fXBji1IkTzIxcQwq30dvbw+H9uwHo6u6md8dudu/o
      5tMzX3Ds5CmC6gxjeRc9vb0MDLyG4vLQ1daEWJzl3OAIK9HU2o5bkfji3BdAmflFlYFjJ7n5
      3WXOf/YJPQcGOLh312MHP4CoBGnxVpjJ1By1nmCUprCf2ZsXGC24a9/zwAB+RWRkZIThbz7H
      3bWP46/t5rPPvuT2nXscOnKU/NwkZaCzsxNJdvH5mTPLBUCQfXSFTCaTRaDChx+d48jRo8SC
      XhBFhCVuA+Gh48EtCVQMcCsKUPP4ffbRh8S7+ti/azvaklIx4Y49FObv8iBTpSfurX1QUcQ0
      auefezDG4OAgndtrT6a3fvhjAh4Xsj/Ku2+dQjRUxu7fZ3BwiL49+/npez/j/s2rfPiHs4AI
      wsP79IT46Q9OI1llsgtzfPLNMEePHsfvXu5qlyQJQXQhmFrdsTqi8LAOjSA0nD+TXuS7oUHk
      aBvuSg7FF3q4m4Dl+MxmM9y58R0PCjI7mj1I8vJ4pvc//IiDR47SHAsCcPqddwn5FDLJea4O
      DeJvbqc6N8I3wwscPX4ct6Dx3s/e4+bVy/zh7FfLzvfGO+8ycHgPTe3dIMgc293C/bncw3ur
      /c98LlimGQkigvnQSysIyAKEQj6yuRLCw//rxPXzTBTcnBw4vKp3/sMP3qdv70G2dzQDoLhr
      358AZMs6scDG6vqcePMdLp47A8D5zz7CHe/i8P5daJrB0oiJXK5EOORDUnwY1SIuRUEUqN1/
      JcVH577l6NFjBL1yowAEojEUEY6e/gH5hVlEZGJhN1evDIHLB8EOPMUHjE7OEIrFkIFd29v5
      5uIl5KZOQm4PsVCtm0c8FqOrs52R2zeZTuZRxNo2gFi89vtAVxgz3GVfv6P/EA9uXGBmIc2J
      40ep6g+7h/tDBDy1KTwWe9gwwxXj6KFejIcexAfj96kiEg6HgCABT5Hh0clH+z+8rugOERCL
      DA0N4vFHGs4NcH/4Bl+dO8fAH71dd6yPrjYvFy9dpKN7Z8P5337jFNmiiqFr+Nr34S1NcPnS
      RVJ5lZZ4mCvXb3P6nbfJp7OYhoGJRHs8wKXBIarGo6+/JRbm26tX0HAhewKE/LUB8ubrpyiU
      K+i6gSfcjFhMMDT4Lf5IlPH790GUCNs5sx4E4VE4y52JBY70b6M1HuT6VIUD22p1O/f0dXHh
      4kWqgQ6aPTR8R7ib8JLk3vgUxw/u4cuvL3B9usqxXc30dDRz8fK3BNu6yM7cZ0ESvNYAABNQ
      SURBVPDGfWIhP9FYzB5I1vfZ3tbCzWvfklc1QCYWC9n/gzdOHOSzM19we2zO/pxrEYvHECQP
      OztCSP4YXV2d3B+5zf3pJH5FZHdPB19fvExZq42x1956i9tfn+P8F19y9PU37fEWjcUQZT9h
      t8aVoUFcvtDz8wRXChk++uQsP3jvTwm4Nj/oaT2kRwe5UerkjX1tz/tWnpjbg19Ay172bGt6
      3rfyQuCEQryELC4u0tTkCMB6cATA4ZXmqR1hs2N311xjdnD4/jG5ffvOuvZ8agFo7eri7Cef
      rHoj5z79iIuXLnFzZHRD5525M8R48snLbDu8ygjk50aZTJVXeM/k737zd5jA8ODnjY6w1MI0
      d8emSOfLvPuDN/n63KfcvXuPn/1nf861K0OYusbA6XdITAyTSOcwZB8nXjuA11QpG+BZIk75
      6ZtokV2cGNgBQGJ6lBtjc+iVKqfffpPzX3zO22+9zYWvL3Dq4HZ+8+k1drYFkENtZG5/SyKg
      Ih3s58HYMImp+7R0bkeM9jKwu40vv7zI6dOvb9IX6LCVuH71MoWySqh5O9r8AwpyhZzqY3tE
      IlWsIrmDHO7v5Mq1OxSyaY6e/iEDb5zmnz76im0/+9GSswm8c6yfc4O3SExkGmcAWZLQDZOp
      m7fIAEODV/mzf/avGLt0FtXlw+9S+fz8d7V1V0Hk5s3rAHRGRSaTNTXo/p0b3Lo7BkAmkSBQ
      V9Px66GbvPVHpzjeF+b8tUkWFmthFYlkErQywaYujp38I6ZGbzU4xe7eGOK1d37J8VOvM3rt
      G2ZvX0Zp2bEpX7bD1kMQBCTZw/Vvr5JNTqP7Ovjx6WOcv/ANsiRx6eIFREnCNHTE8gLXRxcQ
      5ABmNQtAKZdicHCQTKGmUbTufI3xi79j4M0fNQrAmS+/4eTJE3Q9bE7d278XnyLh9Xnp2bmH
      E2+9xx+fPsB3N0c4dmzAXj8vlA2C/trfO3bvZ+/OHgDadx1k6tYV4GG7esGgoptkMgVCIT+S
      WEtf0x72hK1HURQqldr2aHsPHfEAILEt6ub9K9Mc6299lt+xwxbFyI5zPyVz9MgBRAHAw/79
      OwGIxNsYGBjgv/2v/xkXz3zGjtdO0r+jG0wAE/Hh+PIGowwMDBCu8znEt+9me5Mf6S//8i//
      0toY9bm4MXwf2e1j2/ZtyEA8Hqe5aztj14eYnp3FG4rhEapMTM0SbW6jo7WFy9duc+zgnmU3
      L8heYj6Bm8P3yJWqHD+yj8GhK5TlCEd3dyPpFSamZ/EEonR1tILsJR6uOdJ6+g8wfvMKkjdE
      wO8hHq8JZWd7mJsjixx5+CU4vNwI7hC52fvMJQt0dLTSFI8TjseRgVhQ4drtu2TyJQ4c2M21
      K9+hCxKt7V2QHiFJO72dsVXPHY/Hn34ZdObedcYLHk4d+j4GpMbXZz6n/8RbxP2PT6R2eFUx
      +e0//hN/8stfIj/Gx+r4ARxeaZyEGIdXGkcAHF5pHAHYghjVEpn8Sk6cOkydVDrz/dzQS4xj
      AzwB3136irwhs2//IabH7rNzZw+FqohRKVLKJdHkEFcvnOHY629iGgaa4KIz5qMseFH0AhPz
      WeJ+GTkQp5ye5XdnLvCfvvcOiYJB77Z2vjjzKS1+uJZSCHskDvV1UDTd3Lr6NXsOn8IoJoi0
      9XLl0nne/fFP2BqxtC8mL1RluK3C5HyGn/3sPS5+9hFdhw/yu3/4DwT2vEN59haqWsLtcePy
      hujyV/h3719nf6vELcPFWz98l08//YIf/finfPaHjzAEA8NQaIoE+PCDDxH8cXq3/SlV3USR
      BPYdPs7o4KdMzwgMXr9Le2uMHdta+OLMTQav32NH1E9Sg7jzX3xiHBXoCTi8p5evLnxDtL2L
      4et36H/tOMWFcQKhKB0dHcRjcdqbwjxIFDly+BCn33qDmbk0AZfAtvYW7o5NEg35aGnvxa+Y
      CC4P3d3d7NxZW0o2BfAEoozfGqJj+05yuRzt7e3s6GxhZGyMfMmgrbWFnG4Sdgb/U7GpKpDV
      5v5VZ3FmDFWK0tkSXtf++cQMRTlKS9iz+k6mzujYJL29Pc/gDl8dlo7JTRUAXdc3XK3XweFJ
      KGST3J2YY1dXM6PT84RjcTIL87j8ITxClXRR5+D+3UzNp/j9hUflXZwJ1OGlwB+K4XUvUiyV
      EESJhekJNN1FtbBAW3OMVo9IAUhky/z2wqPQfMcGcHgpyCQXmJycBMWLiEG0tZumqIdILIqm
      FphIZfGucJyjAjm8UlQqFap10cebrgKd+/S3uMPdHBs4ZNfmcXB41qxlA0R9EumSwa7ebkZn
      0vy7//iNfdymq0AuX5CBg31c+vo8xeVh/w4Oz4SaDSA12ADFss7i/ALNbV2YWs2zXq7qjM4X
      7J8NzwCFbJLv7oxx/OBu7o5NYooyajaF5AvjRiVT1Dl67AiW4tPTs4vJsTHyFQGPE8HssElY
      NkDs8GFE8kRbuzFLKUqGi9mpcSYnJ9m+ox+PS6K3xW8f90Q2wPDIMP27dnHvzi2i7U2kF0yg
      AIAf8O/oxWsYGIbB7z/8eyRvlL1RBfrfYpt/zVM7OAA8Ub+v9bDULt3wDJBJLpBYTDAlQ1KF
      QEWhWp5A8kVQqDBX1DkoCAgPL/KTH/2UTz+/wKKrleOO29Jhk7A0k93bWphJZnEpMrlMEcnt
      pi3qY2JiniOvH2f0QaLBBtjwiAzHmnn99VrBU6smcWtdlePuJft/eeESP33vT7j55UfMFPfT
      7tvwZ3NweCz+UIx4ZBHFrSCIEsVCEUWWyBeK+DqaCLc0o/DIBrDY9Efy3l19fHP+PIbSwgFn
      8DtsEpZmEovFEDHo2LaDQnKaQCzOxOQELk8EHZ6NDbBe6vWtcmqakreD6BrhLQ4OT0M2myUU
      DDIxPkZ7dw/p+WncoSbMUoZsBba1t3z/foA7N66SzJbITlyh591fOwLgsCkUskmG70/REfYS
      aulg+MYQkrcdbfEufX07yD0Yptrewq2JBP/z//25fdymC4Di8nD0xBHUbX6yzjKowybhD8UI
      +RdpaW9lZGySqunBo2dIFsrolRKablDVlx+3qQJQ0U287TtIFSsQ3kNE0QEnNMLh2ZNJLlAs
      FEkXVAQM+nb1szh1j76+PjKZJC5/ELcI8ZCHX5zqtY/bVAFIFqt8cjdrvz7c4edIR2AzL+nw
      ihKONbNDdhMKBinmcnjcMoFAELfPS6hpB55EAkkAv0fhYG+LfdwTCUA2myUUCjE1OUFLxzby
      yTnbD5Au6rQ1R5/ZB3NwWA9r2QCdLRFuj83zRjzOxHyW//XfP4UfwLpQf2sIwR/l3r07YLgg
      UWv56QIqzVE21gLNweHpWMsG0CYeUM4VKKrLjYANC4B1IbWi428KUkrqIAbt9z2AbprohmF3
      fLQwDANN09DUPEND3xHt6GHX9o6Nf1qHl56NhkKsZQO0NkVIJBL43BLdLSH+xz9/1Nv4iUIh
      ioUiLS07mBm5Qeu2PnKLU0jeCG5U0iUdryCAJCGIjeHPoigiyzKfn/2Gd370E25++REL7d2r
      eodT8w/I6R7awzJVVwSfs4rksAp+vx9/KEo06GNhzqy1bzVB06rMPBgnq5p2geV6nigU4kis
      FgoRCde6v0eDjwrjrqc123q9w9/eHiHulclPFpH6fsru5fffgGEYmxJA5bD10UwRU1eZeTBF
      V98uxm9dRg70UFiYQ5YMcAUwYZkN8FxGy/TCApViisXx2yTXKIDWv6Of/cdPUywbxFfKZ3vI
      uU8+4De/+X95/x/+joXHFFRzeDnxeGoe1vZt3cyMDmN6WgnIBfLlKh1dPcjlIisNjecSnimj
      o4RbOdTehbLGHdy5OcjZM5/gc0lsWyOZLBSKkK+AqYHPCTh9JckkFzANk2yhjKz46evtYXZy
      lEOHDqAVM/ha2vHC09sAzwRDIL04T0qD1j1HVt2trbuffYdDlJOLeNa4U8XjJhKOUCiUkZys
      y1cSWZYoVw3cVCmVi8zMzZHJ5Clo0wQVyFcA4hTKFa6Nzj867nncbDabJptN45NEihr4V7kL
      NZtg8P49TA3e2XVozfMheNHKGYoaeNZwNpumgW6YyE6y/kvFWmVRckIF2R2gYiwvi7KqAExP
      T9PRsTlLlG+9+zPAMlpX32+9gtLa3M5CJo/sbyHsXv18Fy9dIJdawCipHP7Jn9Gyhl3h8GKx
      VkqkpBUoFatoK8Q9rxoO/Vd/9Vf8/Oc/fyohmEqXloVCiGT473/7j/a2/2rgOP/Fvn1kph5J
      pS/Wgi/+qAne41Z3zpz5lFx6kb3dbXj2vL1q2uW9Oze4NPQdkUgLP/zjH6E46tIrx4bCod9/
      /30GBgYYGBhY9p5eKTJ8d4ym9i5K6fkGP8DO3qV5YWtTLRVYHLluv27adYCSOsHF9/+VvW3n
      wL9m18C/XvH4Y4f2k1INFudT7Foj5zidShAJBamUC6g6axrgDi8Wa6VENgfd3Lk3yVs/fHtZ
      WZRVh8DPf/7zNS9YzqYpmwKZ9ByC7qOaz1AGvEDJNFFW8QRj6su26YaxbJuwwrbcwgxTl87a
      22J9+xA69jC4+DDwwtvO8HyBHbGV9SDVlOjs7sJdTpMpaXgdFWjLslFP8FopkZ37dlKsCshs
      ICWyo72VUqlMMp1b8f1ioUBbVzeJybvIsgg8mlYkQUBaxRMsLgmHFkURackHFUURYYVtK+2n
      ITCXe3TttqBCWRe4myg1bGsLKvhkg1jrdjpbVl95ApiZGGHw6m3iXT28fvTgmvs6bA3WSolM
      zM/TuX07sDwlclUBKM7c4h++HCMQ9vGrjrZl7zd39zE+Nkpf/37KmcWGaNDnHQiXr+h8O/1I
      yumoCUFJ06lmZvhq5CavnXhj1dCKO6MPONQVYjyfZLKAU8rlBaC+WENT/GE8Qiy0bL+dXXH+
      93/zC/v1qgLga+/HZdzmSP+BlXcQRLb39gHgbbYExEPbFh4se/ceIhKJ0bNr7f2OHtjLyFSK
      bdsUutb4PE7Zx63DWjaAyyiTL+oMnDrGvfWWRSnN3aMoBxkbu/9SNGGojI2h/vXfMPfwtf/t
      twi8/faK+37z1RmSmp/LC+P883/53606U9SXfTx0fPUZxWHzWcsGUHwSogimuQEbQIn30ua6
      iRx4zOPyBcEoFlFv3rJfe/btg5lp+N0Hj3Z67Si8NsCP//TPGRu5SbLct+agPnnyLURR5GBf
      C7kKjgA8R9ayAYxiGs2QMM0N2ACmrrFtRz+T03Or7fLSUu8wm9+5f1WH2We/fx9ftJncxBV6
      3t1F6xZW/152wrFm9u9/lBIZjQQRKkHcoThS2Eu+AooIve0R/pe/+KF93KoCcH3wPP/fJ18T
      6di52i4vLfFQkPt3R4lEWoisUcblteMnqOJC6mrDs9zesnkwMUpJ1chNXyd2+Ff0RFbf1+HJ
      WCslUpYlBE0n2hRdf1mUlu7d/Od/1o4hvVqL5Wa5Qo+7iZ7Xa08JIZOHyMqJ/NevX8N0eQhV
      MnQ09RJcRQWqllW6+/agektk11ja/uzj3xLt7EehxP79ay/VOjSyVkpkT0ec+/cm2b7CcasK
      QEQp8e8/v0xfdxsH9rw6s4BZrmCMPYoWFHtaVhWAt956m0sXLxHtP0HbGs+JRHKOqflFhodv
      8l/+89WD+rzBOBG5ytlL19cUgCsXv6JqujBkL6cGHD8FrJ0SSSVLZ18fHjZQFsUdbue9d04x
      lymu+H61kOT6vVm2b+9iYuTOqv0BXgbGUwn+duii/fp0705Oii5Sf/03D58qn5FfY1VpR+9O
      bt+boGdX/5qGskvQIdDCu2+fXvN+0oUiqVSa5uaWNfdb74wyOnILfyhCMl9lT9/Gwli2CgLg
      cctoVZ1KRSebzVFRK+i5LAoVcsUSKwW9rSoAX311nrIhE4g0r/h+cmYewS0zNzdGKNpNrT+A
      TLe7Fgrh3YRQiJX20/UVzrfCNkNf+XzSOvZbaZtWyDesKil79tTyUFegpBm0RHxcv5+jqmms
      5jEoqBqM32IimaW9vWuVvSDqEZkuVnCF2le9JoDijxAUVM5e/pbdu1fx5wCjDyaYn7tKR1sr
      O9coUlAqlVicmUB3x+jpXHlcPCs2GgoRijaxsDBPej5F38EDzN2/hsvTCkYBDXHVLpGrCoAo
      CqDX4udXorm7i9lbo/ibWiil51bsD/B9hEIsbcK32jZRWt/5kET0dRy74vm0IvrCnUfbQh2I
      4U6+HTqP5ItxtN3NTFmme5XaYPv2HaCUTZA3PMjy6pF6s1mVvr7tZGfvIx/uX3U/v0skmStz
      YP/RNc+3e/dBXj8VYW5uYc39rl8fpFzWMM1pdm7/8ar7ffrRP1HNzFJue53/5K3Hq2j374+w
      Y8fTLbeP3LhCAS+dTX7uXLtOOBQhtzhhayYTRZ2jKxy36qc9efpHuFyrz9eiEuDw4YcfrvNR
      qMSLOYE+G/SFO5T+/r+xXyunfo379V/zx3/yK1K5IpJgrmZOAHD37o2HA2ztgt3tzU0UVZM9
      jzGU16sqnf34P9Lb/xr7Dh9bcz+/20P7tu1QVdfcr693J3euPmDv/rUH/9//5m/o3L6T4fv3
      nloAdh14NLybO7bV/ujZtmy/vd1x/vZ/ehQK8f8DW1NRrVX2kC0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Map (3)' width='192'>
      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
      z/8H+LHBdclwMjEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP ($) - Country' width='192'>
      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
      RpsAbRxr/BNIp2oyoRl5MwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GNI per capita (Atlas $) - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GNI per capita (Atlas $) - Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Globe' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population - Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2913NcWZrY+bs3vfeJhEl4T4IGJIumWK67q31oZkejWbVeJD1IoQg9afdZ
      etv9B3ZDoVAoVjGjUezGzkrdGlMz3VXd5YvFoikaECQIDyRsIg3Sm2v2ASyQLObNAViga5xf
      BCKYh9899+TN891zzvd95zuSrus6AsEhRX7RDRAIXiRCAQSHGqEAgleS9cX7fPrFZbKFCpqm
      oev67p+maWiaxtTU1O6/NU1/QkbXNcwv+osIBE/D13dm+NFPf8rixBWurOdQ1SKeUB/bKzNk
      ChUsNguF7BbUsnx8ZZZwwElr2E/v8fPcufQBsZ5+Zu7cFSOA4NWkpzXIp19cJleuoWkaVquT
      1eVZqqpGMNKKx2Wnq6MVTZcYOXGGH5w/xsRihqjXhixLgIQkgXSQViBd15Ek6aCqEwgOjI3l
      GbJ1J0O9bY+VH6gCqKqKyWQ6qOoEgmeOmAIJDjVCAQSHGqEAgkONUADBoUYogOBQIxRAcKjZ
      sydYUypMzyxgsjnRKnl0ixOfQyZbqBBr78TvdjzLdgoEz4Q9K4BstmE3Q7FaxuH2o9WrbBer
      hH1OypUqHod1NyajVquiaWC3255l2wWC78yeFUCplCirEpquU8wk0c0OvDbYTGWx+6yYTH4A
      0iv3uLVQwO+SUCQ7Z8ePPbPGCwTflT0rgNnuYnho6O+Vc/nCyGqKSkWipSP+nRonEDxrDnwR
      rCp1tAfBFbVa7aCrFwgOlANXgHq1hKLt/LtaKR909QLBgXLgCuAOxHBZd8JNoy0tB129QHCg
      HLgCbK1M42rpYXSoj7mZmYOuXiA4UA4+HFqWWZqfJV/TibWECAWCB1W9QHDgHPgIoOsq+XyO
      fD6H1eY86OoFggPlwBVgZeY6+Ls5dbSfa9e+PujqBYIDZc9TIF3XWFlaxB1soVZIo1vchLw2
      FpdWaY134rRZUFUVtBqfffIZZVXizLkLhLxiFBC8vOzZEaarCr5ghERiAUUFyJJJSnR2dcMj
      aSnSq3PUTHaSiVnmZucJnhh9Zo0XCL4r+0iLopNYTtDT28P09DQqZiySRCWfYbMIg91t6LqO
      3eVHVjc5dvocLttOfJBA8LKyZwVQaxVUIJMr4ve40S1OIl47S6ubtHbEkWUZXddRqiUK5RKV
      +VmiHT30i03ygpeYAzeDbiXuUZSDmCSF9bUkZ8+MH1T1AsGB80zTomSzafx+4QcQvLwcfCxQ
      pUgut83lS19QVUXmRcHLzYErwMbiJFevXSXSPcS9yTsHXb1AcKAcuAK09o4RcDu4/sWnjJ04
      edDVCwQHyoErwPL9a8g2B8FoK5N3Jg66eoHgQDlwBfCF29hKpjg1fpRIKHzQ1QsEB8qBK4DJ
      ZKauKPzlf/sluiwWwYKXm72nRalXmJ5dQLLaMdXLWNwBzFqZXKn2WFqUeqWEyeqibzhMtZAG
      Op5V2wWC78w+guF01hOLaCYri4sLON0BHDYTIY+DqslFLORD0zQkSULTNGRZJp3eIhgU0yDB
      y8ueR4BaYYuZ5ST9/d34XC4UScJpkdhMb+MM2HcdYMXsBremFllNzHP24g8wm8U0SPDysufe
      afNEeONCBIDWaMRQzmp3gKZidbqIx8TbX/Byc/CLYLMVm83B8WPjpNPJg65eIDhQDnx+sjZ3
      C2+0i8TKGibyhMMiM4Tg5eXAg+F0tUaurGJSimxkywz2dR9U9QLBgXPgI8D0x/eo5HcSYlmd
      NhAKIHiJOXAFWJ1YpLCVA8Dhc3Lkx6cO+hYCwYEhDsgQHGqEAggONXtWAF1TWJybJZXNoyk1
      Vtc3qJYLzExPUyyLLNCCV5O9p0XRdcLRKMurGxTSkK8q5DIp2tvb0XV993SYR01KOoisEIKX
      mn2MACpLy2v0dLWRzuRIbmyg6KDVy6xsCIeX4NVkH4fk1dHRSG+XOXlqnFxuG5tZZimxTnu8
      czctivTINRIgy2KZIXh52bMCWBweRkeGdz97vT4ABgY9B98qgeA5IV7PgkONUADBoUYogOBQ
      IxRAcKgRCiA41AgFEBxq9u4I03W2M2kqNYVSIUe+WELXVLaSSeqq8PYKXk32cUJMlXK1zsr6
      DOFggPXNJA6rTCDcQq1Wx+KwPct2CgTPhD0rgCSbyWfTxLt62E6uEG1tJ5vaRK/mWSlU6eto
      2Y0H+gZdB0VRnknDBYKDYM8KUC/nKFQ1CrkcmWweFzZiIR9ryQzhWGg3LYokPQyGkCREWhTB
      S82ee6fVFeTk8Z3DLlpj0d1yfzh28K0SCJ4TwgokONQIBRAcaoQCCA41QgEEhxqhAIJDjVAA
      waFGKIDgULOPPcEVZmYWsLq9aOUcusWF32Eimc0/dkKMQPAqsfdQCJONcMjPdrECNg8oFba2
      VcI+N/W6gqqqhqEQVz79iEq5BIDD6eL0xbcO/psIBE/B3kMhShnuzq4wPNjL2soyumzBaYF8
      sYRak4kEdjbHNwqFUJQ6Sr0OgFKvi/AIwUvDPrJC+DgxNozZYmV4eBhdMmE2SVTKVWx2+7Ns
      o0DwzNhHNKgJl8v1RLnDKeb+glcXYQUSHGqEAggONUIBBIcaoQCCQ41QAMGhRiiA4FCzLwUo
      FQpowHZ6i2y+iKYqrCQS1BT1GTVPIHi27D0WSKszef02oxdPs7S6CbqG1SzRFu9GURSsZtOz
      bKdA8EzYswLIsoVYSxhdB12poppsWGQTle1NUjULA52txmlRvnUUt0iVInhZ2LMCqPUyqWIB
      dSOF2+VEsziJem2sbKSJtkWap0WRHq9LxAIJXhb23BNNFgfHx08++PQwFYo3GG18gUDwCvDE
      Irher/Nnf/ZnL6ItAsFzp6EVqFwu86d/+qckk+L0R8HvN09MgWRZ5sSJEwAsLy8TiUSee6ME
      gufFEwpgMpk4e/bsi2iLQPDcabgILmxMc20qyWomxy/+4MfPu00CwXOj4RrA7o2QzOY4Ozb4
      vNsjEDxXGi+CtzdJFypkM5nn3R6B4LnSUAFcoQ7aPTIV/eEMSdPq3Lh8jSo6i7PTLK2ss7m2
      zL2pKbKF8nNrsEBwkDRcA9RKRXRJZnk5AaePAyBJZsJ+L4pSZWUzidevUzZB2OeiWq2hOqwi
      FELwytHUE+x2u3f/rStVllYS1LweXHY7tXodl1kmmc5i9ZhpCfkAEQoheLV4oifqmsann31K
      rQZO18P/lsw2zr391k4Hj7U8lNf1xzq9QPAq8cQaQJJlLp4/QzKTo1wqPiyXJGRZRpKkx/6+
      KRMIXkUazkUkSWZ0eIRCtfa82yMQPFcaToG+vHoTRXYwfmL8RbRJIHhuPGkGlSSGR0ZArfLb
      Dz9+AU0SCJ4fT06BdJ1MrsTbP/gRZlnM7QW/3zyhAJIsMzJ65EW0RSB47oi0KIJDzZ4VQNc1
      Zu7eow4o1RKzC0sUsikRCiF4pdmzS1bXNWRFp67rrC0lqOs6iY0yEb8HCZqeECNCIQQvK3s/
      H0AyYTbLqPUK5UqVZCpNNBLC7nSyupXC193xQE6EQgheHfY+AihVahYT+UyRo2NjlMtlbBYT
      S4lVOtvjz7KNAsEzY++JsSx2+vv7dz87HDsnw3R3dx94owSC54WwAgkONUIBBIcaoQCCQ41Q
      AMGhRiiA4FAjFEBwqNmXAmiqig6oioKiqOi6Tq1WQ9P1v/dageBlZF8nxFz55EvG3n6d1Moy
      m5k8QZcV3WQjHI3hdYsT4wWvHvs6Iaa9LQZIWMwy0ZZWSvkMIbvMVjaHS6RFEbyC7OuEmI1M
      mvrqGtn1JL5wjKDHQTKTxx/1iRNiBK8k+zoh5tS5B1mj29t2yyOtB94mgeC5IaxAgkONUADB
      oUYogOBQIxRAcKgRCiA41AgFEBxqhAIIDjX7SIuiMnX7DjVdZ2l+hsXEGtvpzadOi6KpdW5d
      v8rlq9cp14RnWPBi2LtLVgerbKKu1lBkO3qtxFpRIeL3oGv6vtOizE5cxtEySr9b4fLla1w8
      f+qgvpNAsGf2FZOgKDWqNYVKqfDgYhVkE6lMhoC3Hdh7KETfyEk++fgzpnWJC6+/KcIjBC+E
      vadF0VSc4RBaRaGroxXdbMdpldlMpuhqj+37xmtL97EHYkTtGvenZ3jt5NF91yEQfFf2Hg1q
      ttLe3v5EeSy2/84P4A+1Mrc6Tbaq09knkvEKXgwvzApUq5ZQH6wNisXSi2qG4JDzwhRAUep8
      s15WlfqLaobgkPPCVp4t8SFa4kMApFLJF9UMwSHnhSlAZjPB3ZllEokFLrz5wxfVDMEh54VN
      gWx2O6qq4vB4aIsGXlQzBIecF6YAZosNh9PF2JHjpNNbL6oZgkPOUylAtVyiUq2jaxr5XA5V
      0/Zdx/zULULRCKsbae5PTz5NMwSC78y+1wC6Vufu1DTIMh67GbvbB2YrHqd9X/X0Dh2noMj4
      bDLLSWuT+6lkcwV0pYY3EMZsEidXCg6O/S+CdZB0BRU7ii5jo8bGVgZne3RfsUDZ1CY3p5ex
      W0zkSkWODA00vN3UzS9Z29pCtYRxuxOcHR/bd5MFAiP2rwCSjMPhQDM5CPtsbKa2CbYE9p0W
      JRiJMiC56WqPMjs7ZRgL1NrWwcp2DZtWItY2LGKGBAfKvnuTJJsYHB7d/RyKtjWRNsZkc9PV
      7gbA7w8aylVrVawmK2aLjFKrPtW9BAIjXtjrVFUVarUdD/DG5jqhUKShnLa7wJbQdePF9lZi
      jhuzCaz1Ct3HztEZ9R50kwW/h7wwBdhem+Xjm8v0tIdJZlKMjjSWq1TLuL1+jh4Zxm41bu5S
      YhmHmkHz9rCWWKIz2jy6VNf1x6ZrgsPJC/MD+GPdtPnM5Io1XjtzzlAul8/R19vJnZtXWdnM
      GMqNjo6Q1UMUElMMDA8byk3dusJf/82v+Lv3/o77Sxvf6TsIXn1emALMTl6nZWAMvZJl4vZd
      Q7mRo6/h83o5deYcTovxFOjGzQm6PAViYxe4e/uWoZyu66Dr6OiPWawEh5MXpgDx3mHWZibx
      RtoZHBo0lDOb4Osrl/nyq6tY7G5DueNjoywXPWxMXGLoiLGp1OXxEQzF2M6lCfmM6xMcDl6Y
      AizO3sHusFJXFO7PzBjK3b11ldb+MY4Px7lx03ikmLw3hUtLYY92MXPPWM7j9aCpEIyECfpc
      hnJLS/Msz97l17/5gFS+srcvJXjleGGL4HC0nVv3l3jt9DBrm0VDuZGxU7z/699QxsqPf2Qc
      NdrS2kkgOIYmyaxvGZtL8/kC/YMDoGvITRbBS3N3SRU13hofZnl9i5CnY29fTPBK8RSeYI3p
      qXvYPEFMSol8pU6svRP/Pk+ICbX28E5rDwABb81Qbvb+BB2DY7hMFSYmp3jtZOPtkx1dO3XV
      6zWCHuMNNom1BNFgnY30Njanh4Cncbs7OrqJO0K4Qj5GWmyG9WmqwvraGma7m0g48G2fn+Al
      Z/+xQGqNZCaLowZOu5mw10mhWMKzzxNiFqdvoGBnamaR9u5+fL7GIdHRlnZu3Vsgg0Lv8AnD
      02VmJ68xv1FkeeEeP/uDf2wo19U9QDTaSpeuUqrUDOUSawnCgRqXF2YYHTuJ19k4XumrSx8T
      aetle+E6uZ4TdLf4GsopioKu1Ehmi7TFGvs8HmXH5yEjLLXPlv17gk1W/B43imzCZZXZTG/j
      Ctr3HQphNZuYuDfLO2+/zczcqmGIQz6bIp9PIUtWtlJpOqL+hnIDoycp129SV7tpixp7lltb
      21lLLCPbXHjcTsP7DgyMUq+pBGOdeF02zA++37fp7uxkPrGKqtsYCfsM67t+/RLVUgUrKjjf
      ojPYeORZXV4gV6yQT9wkMP4n9Acba8ClT35NsG2Ygb7OplM5AE2pki/X8XnEov/bPFUs0OjR
      Y9/5xoFwnHcutEOtymBXi/HtJIlvNKiZ40rTYWB4lJ6+Onfu3ubISGNL0M2rn2OyObh39xJH
      Tr/BaJ+zodzywiwms5nZ+VVOnH+H/o5wQ7lsNgtAvVKkUK7isjV+pAGPh4zFSzzgwuW0GH6P
      dHKTYLwfRy2K1sxEYbER9pi4fPkyJ0+fw27wS/7VX/wZusVJuqzxT/7kT7A21uNDywtbBP/1
      v//fKOV2Oo8v2so//F//94Zy8YFjxAeOoes62WzasL6N2VvcWKsTDzrJFHKGcrGWNu7PL3P6
      3OvY7MbrltaWVmYWVzlz9hwOh3G4tiR/o5xyUwXNpNNkKxI9AVjPVvDGGr+NB0aPoagqeYcb
      pYkCOKw2LO4Q5881X5z/7I9+we2rl+gJdYnO34BXJjmuJEkUCnnD/w+09zPc2UK5UmLsyHFD
      udTWJtv5LJM3rzfNadreM8hbb79NS8iHxWLcsZ3eIK0hLzVNwmYxfp843EHeODfO9a9vG8oA
      XP70d9ydnmVm6g6lJskyCsUci9N3+fLyFWqqsdzf/vVfUJFddMaiTe97WHnpY4vXpm9ydT5N
      2GOnUCkTj3c3lEttJrh1ZwlNLXBk7KRxhRYnF04fpyY5SG0b97BbVz5hI6+xMDvJH/3P/9xQ
      bmnuLtmKxNmhOOvpPD5nqKGc12Xj+o0JbMEu4iHjkefIydNUi3lmiyP0NNkq3d7WSTDaQTaT
      pdkeodZ4L8eOHuH+9DSO4TExCnyLl14Bwl2DXAxX2c5u4/Q0nq8DxPuOEol1cnd2EXeT3WnR
      oJfJmVV0TWH0+GuGcqPHz6DcvI3WO0jIa9xhL771Eyq1GtRLWCXj9q2urxGNdZFaniFdrNPu
      b9wTb964jCbb6fOaWStBp8G6dWFpkWtXr9MWCWCPxmkxaKJJ1fj08y9QVBMDBgGHAF98/Bvm
      5hKE4v384HtvYjGYG6wsTLO4kiQY62Cor9PQ7JvJpPH7gy+9FeulnwJN3r7K3PQExUqRmfnV
      prJ2l5cTY0eb5hlaWVshFIkS9NjZ2DSWW1qYpVJX2FhZJp03nipJsozDbsckaVRqxiPK2fNv
      4nO76Bs5gtdoxQqcGj/H4NBRnLEeok12mXb3DfPuT35GvHsAr7GbglQ2Q2prA7NaoNQkC72O
      TDjWSmeLD6XJFu/JmTnOXzjP5sJd6k2mXh+9/z+49MUXzC2vYRRypWsqc/NzfPLR+3xx+bpx
      2zSVVCrNjWuXuTe9aHzTR8jltvck99KPAK2xdu7OrzEYC5IsGDf39u1r2NCZX9uio/cIocYz
      EY6fukBqawvCIdwu4zd2IBBkbatArL2NgNu4J3596SOyihXyCXyDF4kFPQ3l8tkUc3NzmBxu
      TkaezLH6DTabDbdsIZvM09ijsENPVzcAFr2CogAG6/QLr7+Fokukk+vYmi2qbTYqisTaVo6h
      JtOkwc5W/vy//DlHTl/A0kRubPw8/X1DbKVSTb4FLMzcY2u7iMdj3DitXuLmzWvYvSG2FqYZ
      HugykCvz4Uef4nR7WFxN8I//4T9qKKeWMyxt5JidnX35R4ByIUu+UOb/+f/+O7Ymv6BV0riX
      2OKdCydR6savsEJuG18wTCjgQ2sSDSoDVruNeqlOqWZc3+CR4xw7MkRH3xi9MWP/w9e3bjL+
      2jn8WpZE1nhEufzVl3z8279jKzFLuskGuKX5GSYnJ7l26UMyTUKV7E43bpcLj11u+sZOb2dJ
      p5NQy1NtIje9mODdH75LJjFDk8fMysIcn3/xBddvNcn4Icn4PR4iwRChFuOdhbLVxVBfD0tT
      k3T0GydSls12+oeGOX/+PGdOGJvqdU3h3sQVtitPOQVS61USq+tUijmmp6fJlw5oq+L0fbh3
      d+dvfg6AeP8xelqDRNs6aW/i4PK4vDhdTj7//CqeJg6fGze+5MaVy1y7MYFkMrbH3568i5Jb
      pqu3l5nFlSZyk0xO3EAtZdncNk7ye+bUKb6+8iU5yU3YbWxWbYtGCUVaydRsNFkrs53JEG1r
      p6O9HXOTefZv//avuHTpEh9/9AHFJlaltmiUzq5eFLMPZ5N5QWs0wuzsLJ5wG02MY7uO0aZ7
      uDWFkgbVWgWlYDwdVUrbrCaTBGNtLM3eMa5OrVPIbXPnzh3u3jcOsDQ7Q8TCUcrZzaeJBdJZ
      XlqiWFcp5DK0xlqQ0HfDIB59p+qAqqpPhEKo6rdeMfpOmfzVZaTqzutMDwTROrsAieGjxxkY
      OUoyuUEw2NghldhIcqTNScl9lLX5ebpaG3uMY21d9PYOUasUqVVrWA1MKMfHjjK7mqKUz3Hk
      5OCTbX5Af1cnn315lUJZ561Rj6Hc3PQ0dU1ne+Emc+FejrQ3nirl8tuszU5DoJ26omE2mGZY
      rSY+/vWv8bd385ZTxeC2DAyP0hLvpjbch8lqLLeeybGdzRCPRchVVdwGPWNrawvZ6iad2qSu
      qoYWqLauXlYX55EsPjTNaEiRiQRCjAwMsbyRMnx2ksWOUi7RPzhKrbBtKAeQyxcZGRkmX8ga
      ytWyS+StLXTHlf0rgKZWyeYKZLZzRCIRZF1lZWOLwe7G81pJkp4IhXjCYSQZlyUTs9yYSWCp
      l2kfHCcUavzER/v7uLmwgXX1Bn3HLhg6pUrbaX772w84duIkaxtrHDfYO+DyRzjmj6DUShQq
      JRwGo8rC3BQuX4D5mTtU6xexG0yMW9vjdPujyIU4ObOtidNMxh+OEO9uo6RIhm/j9c0kLX4b
      ZlOdrapkuGC+M3GF5ZV1fOEWRgbDhlab/q5OKh3d5Mt1PE1e7RazGU2SsFisyJJkaOW5c+sq
      3nAHFq0MktTwvrqmsLg0x9c3bxEOh5FGhxrWpesaG8kUS6uf4vYFjfeP6DpavcrExAQuX9jw
      Gdv8HbhmrlDAtn8FkM12Tpw8ST6fx2aRWVxeoyPeiSRJO3+PyEqALD85y9pLmcSOhSWZTnGk
      J0LFGmVzeYmhnsYHckzcvYvPWqXeOsbs1CSxs+MN5dwuHz1HTjNx+TOsobaGbQG48dUnLK4l
      kXWZ4VMXCfoab7I/fvoCt2/dRhocbbpYXpi7z/LGJSyYOP2DnxreNxBtw2Q2sb6RontEQpYb
      /4hDwyOsr66Tq8tEnbLhXHZw9CR9vYNsb6fRdNlw4drZNwS6znYmiaLLhv6CC2+9C8B2dgtJ
      kjH4Gvz053+MqkuUS3lkqXFQny6ZGRw5TtDvZXMjafhMkGX6Rk/ic1rYSqYM5ZRKkUJNpTse
      I7G2gSw33hpbTS9R1TR0h//prUAez84QPjDQ/7RV7InRsdMgmZBQ6WwxMO0A46dOMTG7ipxJ
      MDA4aign2x3kV+fJ1zSOtXcaylmcfi6c7aSuyBSbLJYtNifjZ16jWsqRK1bwuhorgdlswWQ2
      I2kyZoNODZDaXGVmYZmI20lFxXAEuD3xNZLZRafbxGYJYgYGraW5+ywkkvRGZKpdF4ga7AH6
      4G9/RTpXwWZz8sOf/wPj9qW2SK0lyGs2xscaT0cBTGYLaiFFVTO20UqSTHdnHNgJYzdCtjgY
      G95JnOZ2G6/vzM4gb55/jUK5QqzNeFFtDcRxmhNsJOZffjPoJ//vP0Ct72yY8YZHOPPT/9BQ
      zmSxEQkG6Ggbbppsd3NljpV0hR9dPMnU6gatwcYPtFbOkliXOXJ0lDazsa1gY2We1WydI90R
      qgah1QAnXrvICaBWylKVjOs7ffZ1+gbSmE0ytiZmxrNnXqdQ1bDKYBBYCkAwGqe/q40PPvgN
      r3dfMJSLxnsZ8nnJp1JNnVdXvvoUm9OH0yRR1UawG7Txz//T/4HTJqG2v84fv9PYM6/rOlcu
      fcLiSpL+kTHD1Di6rvH11a+wO1zUsBmuAwEcLjcOl5v19VV8nsbrLEkyceLMRU6ceQX8APVK
      BuWBAtSrxkFuV698ic/n415FZTs5Qyj0VkO5115/l1qthgmVznbjt05F0TgxEufmtcv0jZ4g
      aLBxZmZ+kZ54K1evXsEdP0rk79lnrFWLlEwOPI7Gjz6dShEIhdFqZZpYI/EGwniBci5JuQ4u
      A8PS8eMnAHj3hz9GNjY+IdVLfHVpilj3ANYmtsHXTp9Hke0Us8mmVqBf/NN/yZWP/4a28TFj
      hdJVMvkibo+HWsHYX6BW8lQwkVxde5CDtvEaQKuX+d2Hn+DyeJv6ATSlzOeff4VsMb/8CrBX
      Bnv7kX0tJBfu4Q0ZO5qyyVXuJ9KcPjaIUjc2344MDHL58ldY3GHDaQ3ASH8fJcmBri0SCxkH
      71z++H2qZhe15H1ip/+IFgP37c3rn+Jwx3C4/YyNGccuvPeX/zeBaB8DwyOEm3Tsb6iUclhs
      YcOw6WQqg9/rwKyVKCngNrAQ370zgWxzsbAwRUvnAE4DZfnvf/Ff6B4cJ2g3nj5Kkom2kJ/V
      dBlfxDiq1WT3EI+EyNqd+I08nOysT4dGRom1RIm1Ggf/qeUsRUWiKxp4NRVg6lfX0R+csOcI
      u+l6a4iAsgKpBD4PYBCTD3Dv/gxDgz1c+uomNoeZWLTxXoQ7k/cYOzLA7clp7s4mGBuIN5Sb
      vH+fUi5NIBgjnSsS9TUeKUZPnELTJdbWfLSHjT3Q3f1H6O0dorCdQlHBZPBV2jr7ODZ2kpn7
      U7jdRw079vvv/SXuQISNxQnO/bwXj8GUPBYKkCrpKJIdl7F7hO7+IVrb43R1RGkyM2Rg9BhH
      RkaYnptlZHi48SJYU1nfLvHDd7/Hbz/4gOG+xmsyrV5mcmYOlCobmxvE2xobQpRKni+/vIRa
      StJ+7If0dDdum9kR4MhgDxO3br6aCqBWFXRtRwG02oN59/R77Doc/D0Qafz2HD85jmpxMNIr
      UTM3niMCnDh+jFt35zl56jSqUZwB0NUzQCDgp1LII7mMpz+T9yaolqv4bDKpYg8egx67kVji
      669vYkXi9Z//saEue70Bbn99lbV0ie4h4yx4x8aOojt8+Dxu/E1iizayBbazGTpjUQp18Bgo
      wcy9W7z/61/T2j3IDzr6DOtTyhV+9T/+hp7BJhF4sonBrnZ+9d/+gp4x4+RostlGwOUAa7Tp
      aUJmu4c3zp3hy8ufcWS4cbZxgHohydTUBKGu0VdTAfaCrulM/fLa7mdXi4+O80eowT4AAA4r
      SURBVF1ov/u3SIATcLccRfP/czKXHnoXrWEfnpEuXL4w58+FUapFMk1cqOn0BpuJOdaSWU68
      /n2gcS+L+ANk7BIRnwNvE0+w1WrDYrEiaVLTN+z89B0Ui4duv4lcDcIGnXvy/jSZbJb2cJCy
      OmY4Ugz2dFFRe9lKZ3A0WXybzFZaO7qIxwJoOoaOsPT2Nm6PC7Wyjc4TriAAdLXOemoLt9/P
      5vJ9GDKI8VGqrG+uE417WVtfoiPeeDTWdR2XL8jb3/85M5NfETzVONrX6u8g5pvnk89+9/ur
      AADqIztFNEUFTUWZ+WC3zKSpmOsKa7/6bLfMe6wPz0gX0xPXWc9V0Ytb2GJDRIKNPcuSWiNT
      kzlzbJh6k5wQmxvrrGykSEgmzrzbjtvg1W61Wgm0dHK8w0q+Al6DN3Fvdz953UksINPEqkpL
      KIjF5iJX1Qzn9QDh1k7K+QzIpqaZLV5/6wcAbGe2msq98eY7qLqJSjlnKCfJO4vQvqExtIpx
      GIlsMtPdN0rYbeHyxCJnjAS1Gu+//1uGR4ZZWV/ntIFYbXuFjZqbX/zJHz5dWpTF+VlS+SoR
      r41iTXuqtCgvO+3xLoKSA59FYSNvbC06Nv46sDP/LCjGr05PqJUL/UPUC/mmHbZYVRnrDfPJ
      h+8x8K5x4FcimaItUOP2rTnir3UbhkRbHU48kpVS6jbpMrQY+AFu3LhMIV/CKkOsowuXwejz
      wd/9kq6hMwz0dDQ1lxaKZdYS86gmD6FQ43WWJMucOvsGuq6ztWUcCySZbBw7ujOVetNjHCMr
      me38wR/+ASaTiUjEOG7M4oniZoHJe1NPtyne7XKhWVyUygXCXge5fHHfaVEeK3ogZ0LffVvo
      OqjfktN1/Yk0JjrfXMsj1+qo6rfkdP2J2JDGZRr1coX89Z248xTgivpRDEaAaqVMpVqjml0l
      b4nitjd+zQ4N7XglFU+WsoRhOpbx8dPIJhNvvPMTVLuKkWvhyMhRPD4f9XoVj1kxlCuVKsR7
      B3HJRSTNWM5utuDq6MMh61gkYzmn14fXonD52g3Gj48ZKvONm9ex2ayUC1soowONRwFd472/
      +iUVBWwuPz/70fcbV4ZOPpdD02FmdtowhQ7o3L15naX1NEdPjBs+Y5A5dfYc9Vr1ac4IU5hd
      WCIc68DrsJDM5PGEXPtOi/JY0TdyPHntY6EVkvREdKHEkxGHkiRhMjUqM+2hTEZSNJJ//eVu
      mW98AP+R3icfBjA5cY2COYCtsoqpNWwY/VgpF6nWFIqbi1T9w8ZhEw+ut8gqNUyYDUI9gw/M
      gfHOLlSzGaOgy2MnTwFg6xxAdhjL5XJZ5m9MEIz309k/aLj+cNuclGUXfXELkslsKHfyyCi/
      +/BD+k+8gcXgprqm4XA4kJSdkcro2elanY8/+ojB4RHWNpKGcvXCJlnNid9bYXHmLl3tbzeU
      qxW2+OV7H1ErbDzNCTFmXjv7cMXeut8KXlHUfJ70f/iPu5/tR4/g+cmPGTv7JrouITFGs7My
      b1+5BN4WSC/idBonA/74/fcwuwMUlm/Q/f1/RcRgynL10ifUsZBeusmRH/8rwylQsZCnrqhs
      Lt4nNBjBwP+G2Wwj1t5JvCOComG4JTJXqcHqDPczad54p8NQbnZpnmAkQnp1Gm2kp/FIIe1s
      AMIsYbY289KZaGuNotbrxDuNn53J7kMq36G1e5hIwNgiZ3WFePPcST6/fPn3exF8kOi1GuVr
      D61KstsF5QzSlX+/O0qZWk9SjIzyxS9/sSsXH/lHDJ/7Xzh98XvokoSkj6I12YZx7vU3kWwu
      pGPD1JosWju7evHHOqj0xVCbbIn88tOPiHb1k0ws4e173VDO5bSTWNnCEYg23RHW393F+maa
      UKSjaaiGzWQmNHAE6lXjxbKukcvnKVUVnE3c3molj2JxsJ7cxGW3AY1Nq9XcBpliBTmxgGzq
      3Y1Xe+K2uobTF+L73/+xUIDvhg7qI95kTUHXtd3QDdgJH6/msyxeen+3LNA1iNoa4c+v/ufd
      srNdF7gYO49pbgvYiWVyRCVwmWFh7uE9WmIkHXAlew2yOwo5Iqv4LW1o1YcLSckSQLZ4eedH
      P0OSZPShwabbn5LpLD6vHRuVpp7gick72C1WijUNFTDSgbXVFQrzCaxOL339RjZ5Ca/Hy5vf
      v4jZaOMDIFudRAMhesfHSWeMD0kx29ycHD9Da9hPoWBsVdLVKh988CGjo8NCAZ4Huq6jPbIg
      0zWNYq3I9cSV3bIOfyd6WEVPPcx9pLsdoJXgq8sPKzt1mtWwzn99RHn+yal/RtxSoDz3f+6W
      2dp/ga3ch/zJR8CD1dXZ85RCAdLzD9PHB7qHcIVjvPHm96irOg67jSaxesQiUXIViWMDrU3T
      sdjtDhRJw2Iz9r7pmopsNTEzeQscfsbHGocvK5U8k5Nfs7mxRktHN2HDaAiNjdVFrl/9CofD
      zbvfe7OhlCRJvP7GRean7wkF+L1G16H+iBNP06hXSxQ2H2bXcLfEKX72Gen/9H/tlgX/5b/A
      0TOEOrO2W2Ya7mDTLlEKhjEDy2oNR7mIpJrYemQraGvYjS7pDJ9745tGUFMVbA0WrpJsZnT0
      BMFg6JHDEJ/EZLZxYvws8bY28nnj5Ghmu5fK9hbb20WiLY2dZQD1QorbN2/hax16OgXIb6fR
      zU7cdjNra+tEYq1YmwxhgpcbXVXRK4/srP9mG6v6SKfUdRLZLL+bubdbFHA6mZzK8J/fu7Fb
      9u/+6ZvUbGU+mr2/W/aLk2donfkVta8eGhGcf/QfWbANsZCWIbUzrTkd97CQXmdqc31X7t2h
      UbT0HZStSeYfRLnbh/6QmuSh8kj+loDDTK1a5+jx1zj6IDGgpmkNN89Y/e0cG6lzb271adKj
      10msb+0cMKGrtMW7URRFKICgOVod6g9HCl1X2a6oJLYfOhmPteqkigVmH8nr9JaikFr8kMWJ
      /7pbFul8g4mczP3kw+wa/9PREMtT91hdWtgtu/juT/jd/G+4s/4wHeW/vvhvuPrZlyzMzQJP
      eUCGze5EV6rUFYnK9iapmoXhHnGCiuDlYzEzz42Vh9a7ulZnNbHM1OROupZ9p0WRTFYsehWL
      3UVbJMBWrmoYJyMQvOw8RSiERLz7YRisN7iz8UDTNDRNwx31IT840NrmtqOqKi63F7N5x65m
      dzhQVRV/LI79QVyHJxDZCUkIBqD6YEj0+UBVcYdGUB8MnU5fD6qqYgs40R/MTy0e28617lZ2
      c/A5QqBp2PwP45PMLiuaDkQfia/xxdF0Hdsjuf/NQQ+axONlAQ+6LGPu6dktk8NhVF0G1yOu
      QKsXZAue0MM9yVZnDCQZq+fhS0K22rHIVnqCD59jwBFEk0BzPWLUt5h27IzBR8wedjt2M49d
      67X50CU72B+JpjS5Uc3mx6+1WpFMlsfaIpktSC73Y98NlwvNJD3WFskk4zCbaXE/tK1bZRM+
      p5W+tof1OaxmzBbLY3JmWUZ3hB979rrJgQMIOh6+g2VJw221PnatDNicLY89U0my4DRLj10r
      oWOz23F7H48VCjujjz0rSZcIBEO0dXQ8+HxAh+Xqut5w0SHKXkyZru+cg/ztMng8XOW7lL0s
      3/W7lB2YAsDOQ/p2Lpad6nXWVhIokmV3N08juWIuw3oyDWj4Q62E/O6GcvncNi6Xk/v3Z+ge
      GMJufvJwip0DsVWWl5YxOzy0tYQN2ydJErVKkeXlNVo7u3BYzQ3lMlsbZPMl7C4vrS1haFIf
      QDmfQ7c5cVhMDeW2NlbJFStIkonOnq6dgL4GnS6bSlJSJGxo+FuihnKSBPlsmo1Unp7eLuQm
      ctvpLba2y/R0x3dS0DSQS66vgtUJ9Rrhlqih3OZaAtnuRatViLZEH9zjSbn1lWXMTi+RoL/p
      b/EN6XSaQCDQUE5TaywuLKMBZquTrnhrQzlVqbK0mEADLHYXne2xx+QONDdoo0REkiSxsTSH
      xRMm7DYzv7xpKOfy+nHaLGiahMvlMK5vbZ35mfu0xaMsL6cM5eampwm3dmDXC6wkC8Zy927z
      9eR96qqE02YxlPMFw8TjcaRKlq3tsqFccn2FmZkZpqfuU1FUQ7lgpAWlWqcj3vFEp/5GRpJg
      cyuDsp0kp8mYH+RfelJO5/qXnzO3tITZ6sFkKKdx5fNPmVtYxu7yPUhu1UiuTiZbJb2ygGZx
      NJGrkt1W2FyaRra7dvNDPSlXIVfQSW9u7JY1eiaaVmd+ZoaZmRnmF1cM5WSTlXDIj6ZpuNwu
      QzmT2UYw4H0g9+QL9bkkx5VNFtKbK6xspprmxNlcnmc9nUeSoNYk1XhPbxdOfwtOi4N43DhF
      hsViYWVpga3tEqYmoWo9Q0c52t8Dep1S1fi+ma1NFhYWyFc1vK4mATjsvH2c/iBum3FAz9bG
      GsVykYWFJdQm47DDZqKsglIqNMkUIXPytQt0xFqoFDMYJ2iROXXudTpao5TymSZPRUamhm62
      kUunmsiZkaUastVJMZ/7duT7Y3KSVkbVVBYT64ZSkmTGbregKio9fY0jcAHUWpHJe7MgSdRq
      xvs16uXcTkp1SaLeQO65KIDL60UGKsUimlH2LyDYEsNtt6LrEg6HcQcrFgrkt9PMzE6TyRof
      si1bbATsVqpqHcls3BFXEgkKmQw1tUq5avxTV+s6PqeLWCxMsUlC4FAkhqSodHR3Ymmi8HVV
      YvzUKQYHepu+GMxmM5LJRLXaJLAMnfv3JlnbTKNqapMfVuH6leuUaip2WzMllrFYZJAkTBZL
      0/uuLi9RqT++F6SRnMnqRKuVyTSJ51HrRfJlicGhATZWlg3lzFYnbbEwEjr2Jme96brM2Imj
      REIt2BrEbvz/lLflrP2vucAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population growth (annual %) - Country' width='192'>
      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
      +DCxZHPV5/8fXjO4A4MozxkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population growth (annual %) - Year' width='192'>
      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
      oyp2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Under-five mortality rate (per 1,000) - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Urban population - Country' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Urban population - Year' width='192'>
      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
      Ly0De9/a7mruAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Urban population growth (annual %) - Country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Urban population growth (annual %) - Year' width='192'>
      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
      OgH2B0udAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
